{"version":3,"file":"bundles/2f8baab73c2b1aecf8d4/9963.js","mappings":"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","sources":["webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/minus.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/plus.js","webpack://soc-connect/./res/img/external-link.svg","webpack://soc-connect/./src/components/views/beacon/BeaconMarker.tsx","webpack://soc-connect/./src/utils/beacon/bounds.ts","webpack://soc-connect/./src/components/views/beacon/ShareLatestLocation.tsx","webpack://soc-connect/./src/components/views/beacon/BeaconListItem.tsx","webpack://soc-connect/./src/components/views/beacon/DialogSidebar.tsx","webpack://soc-connect/./src/components/views/beacon/DialogOwnBeaconStatus.tsx","webpack://soc-connect/./src/components/views/beacon/BeaconStatusTooltip.tsx","webpack://soc-connect/./src/components/views/beacon/BeaconViewDialog.tsx","webpack://soc-connect/./src/utils/beacon/useLiveBeacons.ts","webpack://soc-connect/./src/components/views/location/Map.tsx","webpack://soc-connect/./src/utils/location/useMap.ts","webpack://soc-connect/./src/components/views/location/ZoomButtons.tsx","webpack://soc-connect/./src/utils/location/map.ts"],"sourcesContent":["import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction MinusIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M6 13a.97.97 0 0 1-.713-.287A.97.97 0 0 1 5 12q0-.424.287-.713A.97.97 0 0 1 6 11h12q.424 0 .712.287.288.288.288.713 0 .424-.288.713A.97.97 0 0 1 18 13z\"\n    })\n  });\n}\n;\nMinusIcon.displayName = \"MinusIcon\";\nexport default forwardRef(MinusIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction PlusIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M11 13H6a.97.97 0 0 1-.713-.287A.97.97 0 0 1 5 12q0-.424.287-.713A.97.97 0 0 1 6 11h5V6q0-.424.287-.713A.97.97 0 0 1 12 5q.424 0 .713.287Q13 5.576 13 6v5h5q.424 0 .712.287.288.288.288.713 0 .424-.288.713A.97.97 0 0 1 18 13h-5v5q0 .424-.287.712A.97.97 0 0 1 12 19a.97.97 0 0 1-.713-.288A.97.97 0 0 1 11 18z\"\n    })\n  });\n}\n;\nPlusIcon.displayName = \"PlusIcon\";\nexport default forwardRef(PlusIcon);","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgExternalLink = function SvgExternalLink(props, ref) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 11 10\",\n    role: \"presentation\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.5 5.5v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h3M7 .5h3v3M4.5 6 10 .5\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgExternalLink);\nexport { ForwardRef as Icon };\nexport default \"img/external-link.cd9c7fc.svg\";","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { type ReactNode, useContext } from \"react\";\r\nimport { type Beacon, BeaconEvent, LocationAssetType } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport type * as maplibregl from \"maplibre-gl\";\r\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\r\nimport { useEventEmitterState } from \"../../../hooks/useEventEmitter\";\r\nimport { SmartMarker } from \"../location\";\r\n\r\ninterface Props {\r\n    map: maplibregl.Map;\r\n    beacon: Beacon;\r\n    tooltip?: ReactNode;\r\n}\r\n\r\n/**\r\n * Updates a map SmartMarker with latest location from given beacon\r\n */\r\nconst BeaconMarker: React.FC<Props> = ({ map, beacon, tooltip }) => {\r\n    const latestLocationState = useEventEmitterState(\r\n        beacon,\r\n        BeaconEvent.LocationUpdate,\r\n        () => beacon.latestLocationState,\r\n    );\r\n    const matrixClient = useContext(MatrixClientContext);\r\n    const room = matrixClient.getRoom(beacon.roomId);\r\n\r\n    if (!latestLocationState || !beacon.isLive) {\r\n        return null;\r\n    }\r\n\r\n    const geoUri = latestLocationState.uri || \"\";\r\n\r\n    const assetTypeIsSelf = beacon.beaconInfo?.assetType === LocationAssetType.Self;\r\n    const _member = room?.getMember(beacon.beaconInfoOwner);\r\n\r\n    const markerRoomMember = assetTypeIsSelf && _member ? _member : undefined;\r\n\r\n    return (\r\n        <SmartMarker\r\n            map={map}\r\n            id={beacon.identifier}\r\n            geoUri={geoUri}\r\n            roomMember={markerRoomMember}\r\n            tooltip={tooltip}\r\n            useMemberColor\r\n        />\r\n    );\r\n};\r\n\r\nexport default BeaconMarker;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type Beacon } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport { filterBoolean } from \"../arrays\";\r\nimport { parseGeoUri } from \"../location\";\r\n\r\nexport type Bounds = {\r\n    north: number;\r\n    east: number;\r\n    west: number;\r\n    south: number;\r\n};\r\n\r\n/**\r\n * Get the geo bounds of given list of beacons\r\n *\r\n * Latitude:\r\n * equator: 0, North pole: 90, South pole -90\r\n * Longitude:\r\n * Prime Meridian (Greenwich): 0\r\n * east of Greenwich has a positive longitude, max 180\r\n * west of Greenwich has a negative longitude, min -180\r\n */\r\nexport const getBeaconBounds = (beacons: Beacon[]): Bounds | undefined => {\r\n    const coords = filterBoolean<GeolocationCoordinates>(\r\n        beacons.map((beacon) =>\r\n            !!beacon.latestLocationState?.uri ? parseGeoUri(beacon.latestLocationState.uri) : undefined,\r\n        ),\r\n    );\r\n\r\n    if (!coords.length) {\r\n        return;\r\n    }\r\n\r\n    // sort descending\r\n    const sortedByLat = [...coords].sort((left, right) => right.latitude - left.latitude);\r\n    const sortedByLong = [...coords].sort((left, right) => right.longitude - left.longitude);\r\n\r\n    if (sortedByLat.length < 1 || sortedByLong.length < 1) return;\r\n\r\n    return {\r\n        north: sortedByLat[0]!.latitude,\r\n        south: sortedByLat[sortedByLat.length - 1]!.latitude,\r\n        east: sortedByLong[0]!.longitude,\r\n        west: sortedByLong[sortedByLong.length - 1]!.longitude,\r\n    };\r\n};\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { type ContentHelpers } from \"matrix-js-sdk/src/matrix\";\r\nimport { Tooltip } from \"@vector-im/compound-web\";\r\n\r\nimport { Icon as ExternalLinkIcon } from \"../../../../res/img/external-link.svg\";\r\nimport { _t } from \"../../../languageHandler\";\r\nimport { makeMapSiteLink, parseGeoUri } from \"../../../utils/location\";\r\nimport CopyableText from \"../elements/CopyableText\";\r\n\r\ninterface Props {\r\n    latestLocationState?: ContentHelpers.BeaconLocationState;\r\n}\r\n\r\nconst ShareLatestLocation: React.FC<Props> = ({ latestLocationState }) => {\r\n    const [coords, setCoords] = useState<GeolocationCoordinates | undefined>();\r\n    useEffect(() => {\r\n        if (!latestLocationState?.uri) {\r\n            return;\r\n        }\r\n        const coords = parseGeoUri(latestLocationState.uri);\r\n        setCoords(coords);\r\n    }, [latestLocationState]);\r\n\r\n    if (!latestLocationState || !coords) {\r\n        return null;\r\n    }\r\n\r\n    const latLonString = `${coords.latitude},${coords.longitude}`;\r\n    const mapLink = makeMapSiteLink(coords);\r\n\r\n    return (\r\n        <>\r\n            <Tooltip label={_t(\"timeline|context_menu|open_in_osm\")}>\r\n                <a data-testid=\"open-location-in-osm\" href={mapLink} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <ExternalLinkIcon className=\"mx_ShareLatestLocation_icon\" />\r\n                </a>\r\n            </Tooltip>\r\n            <CopyableText className=\"mx_ShareLatestLocation_copy\" border={false} getTextToCopy={() => latLonString} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShareLatestLocation;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { type HTMLProps, useContext } from \"react\";\r\nimport { type Beacon, BeaconEvent, LocationAssetType } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\r\nimport { useEventEmitterState } from \"../../../hooks/useEventEmitter\";\r\nimport { humanizeTime } from \"../../../utils/humanize\";\r\nimport { preventDefaultWrapper } from \"../../../utils/NativeEventUtils\";\r\nimport { _t } from \"../../../languageHandler\";\r\nimport MemberAvatar from \"../avatars/MemberAvatar\";\r\nimport BeaconStatus from \"./BeaconStatus\";\r\nimport { BeaconDisplayStatus } from \"./displayStatus\";\r\nimport StyledLiveBeaconIcon from \"./StyledLiveBeaconIcon\";\r\nimport ShareLatestLocation from \"./ShareLatestLocation\";\r\n\r\ninterface Props {\r\n    beacon: Beacon;\r\n}\r\n\r\nconst BeaconListItem: React.FC<Props & HTMLProps<HTMLLIElement>> = ({ beacon, ...rest }) => {\r\n    const latestLocationState = useEventEmitterState(\r\n        beacon,\r\n        BeaconEvent.LocationUpdate,\r\n        () => beacon.latestLocationState,\r\n    );\r\n    const matrixClient = useContext(MatrixClientContext);\r\n    const room = matrixClient.getRoom(beacon.roomId);\r\n\r\n    if (!latestLocationState || !beacon.isLive || !room) {\r\n        return null;\r\n    }\r\n\r\n    const isSelfLocation = beacon.beaconInfo?.assetType === LocationAssetType.Self;\r\n    const beaconMember = isSelfLocation ? room.getMember(beacon.beaconInfoOwner) : null;\r\n\r\n    const humanizedUpdateTime = (latestLocationState.timestamp && humanizeTime(latestLocationState.timestamp)) || \"\";\r\n\r\n    return (\r\n        <li className=\"mx_BeaconListItem\" {...rest}>\r\n            {isSelfLocation ? (\r\n                <MemberAvatar className=\"mx_BeaconListItem_avatar\" member={beaconMember} size=\"32px\" />\r\n            ) : (\r\n                <StyledLiveBeaconIcon className=\"mx_BeaconListItem_avatarIcon\" />\r\n            )}\r\n            <div className=\"mx_BeaconListItem_info\">\r\n                <BeaconStatus\r\n                    className=\"mx_BeaconListItem_status\"\r\n                    beacon={beacon}\r\n                    label={beaconMember?.name || beacon.beaconInfo?.description || beacon.beaconInfoOwner}\r\n                    displayStatus={BeaconDisplayStatus.Active}\r\n                >\r\n                    {/* eat events from interactive share buttons\r\n                so parent click handlers are not triggered */}\r\n                    <div className=\"mx_BeaconListItem_interactions\" onClick={preventDefaultWrapper(() => {})}>\r\n                        <ShareLatestLocation latestLocationState={latestLocationState} />\r\n                    </div>\r\n                </BeaconStatus>\r\n                <span className=\"mx_BeaconListItem_lastUpdated\">\r\n                    {_t(\"location_sharing|live_update_time\", { humanizedUpdateTime })}\r\n                </span>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default BeaconListItem;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React from \"react\";\r\nimport { type Beacon } from \"matrix-js-sdk/src/matrix\";\r\nimport CloseIcon from \"@vector-im/compound-design-tokens/assets/web/icons/close\";\r\n\r\nimport { _t } from \"../../../languageHandler\";\r\nimport AccessibleButton from \"../elements/AccessibleButton\";\r\nimport Heading from \"../typography/Heading\";\r\nimport BeaconListItem from \"./BeaconListItem\";\r\n\r\ninterface Props {\r\n    beacons: Beacon[];\r\n    requestClose: () => void;\r\n    onBeaconClick: (beacon: Beacon) => void;\r\n}\r\n\r\nconst DialogSidebar: React.FC<Props> = ({ beacons, onBeaconClick, requestClose }) => {\r\n    return (\r\n        <div className=\"mx_DialogSidebar\">\r\n            <div className=\"mx_DialogSidebar_header\">\r\n                <Heading size=\"4\">{_t(\"action|view_list\")}</Heading>\r\n                <AccessibleButton\r\n                    className=\"mx_DialogSidebar_closeButton\"\r\n                    onClick={requestClose}\r\n                    title={_t(\"location_sharing|close_sidebar\")}\r\n                    data-testid=\"dialog-sidebar-close\"\r\n                >\r\n                    <CloseIcon className=\"mx_DialogSidebar_closeButtonIcon\" height=\"24px\" width=\"24px\" />\r\n                </AccessibleButton>\r\n            </div>\r\n            {beacons?.length ? (\r\n                <ol className=\"mx_DialogSidebar_list\">\r\n                    {beacons.map((beacon) => (\r\n                        <BeaconListItem key={beacon.identifier} beacon={beacon} onClick={() => onBeaconClick(beacon)} />\r\n                    ))}\r\n                </ol>\r\n            ) : (\r\n                <div className=\"mx_DialogSidebar_noResults\">{_t(\"location_sharing|live_locations_empty\")}</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogSidebar;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { type Room, type Beacon, LocationAssetType } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport { OwnBeaconStore, OwnBeaconStoreEvent } from \"../../../stores/OwnBeaconStore\";\r\nimport { useEventEmitterState } from \"../../../hooks/useEventEmitter\";\r\nimport OwnBeaconStatus from \"./OwnBeaconStatus\";\r\nimport { BeaconDisplayStatus } from \"./displayStatus\";\r\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\r\nimport MemberAvatar from \"../avatars/MemberAvatar\";\r\nimport StyledLiveBeaconIcon from \"./StyledLiveBeaconIcon\";\r\n\r\ninterface Props {\r\n    roomId: Room[\"roomId\"];\r\n}\r\n\r\nconst useOwnBeacon = (roomId: Room[\"roomId\"]): Beacon | undefined => {\r\n    const ownBeacon = useEventEmitterState(OwnBeaconStore.instance, OwnBeaconStoreEvent.LivenessChange, () => {\r\n        const [ownBeaconId] = OwnBeaconStore.instance.getLiveBeaconIds(roomId);\r\n        return OwnBeaconStore.instance.getBeaconById(ownBeaconId);\r\n    });\r\n\r\n    return ownBeacon;\r\n};\r\n\r\nconst DialogOwnBeaconStatus: React.FC<Props> = ({ roomId }) => {\r\n    const beacon = useOwnBeacon(roomId);\r\n\r\n    const matrixClient = useContext(MatrixClientContext);\r\n    const room = matrixClient.getRoom(roomId);\r\n\r\n    if (!beacon?.isLive || !room) {\r\n        return null;\r\n    }\r\n\r\n    const isSelfLocation = beacon.beaconInfo?.assetType === LocationAssetType.Self;\r\n    const beaconMember = isSelfLocation ? room.getMember(beacon.beaconInfoOwner) : null;\r\n\r\n    return (\r\n        <div className=\"mx_DialogOwnBeaconStatus\">\r\n            {isSelfLocation ? (\r\n                <MemberAvatar className=\"mx_DialogOwnBeaconStatus_avatar\" member={beaconMember} size=\"32px\" />\r\n            ) : (\r\n                <StyledLiveBeaconIcon className=\"mx_DialogOwnBeaconStatus_avatarIcon\" />\r\n            )}\r\n            <OwnBeaconStatus\r\n                className=\"mx_DialogOwnBeaconStatus_status\"\r\n                beacon={beacon}\r\n                displayStatus={BeaconDisplayStatus.Active}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogOwnBeaconStatus;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { type Beacon, LocationAssetType } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\r\nimport BeaconStatus from \"./BeaconStatus\";\r\nimport { BeaconDisplayStatus } from \"./displayStatus\";\r\nimport ShareLatestLocation from \"./ShareLatestLocation\";\r\n\r\ninterface Props {\r\n    beacon: Beacon;\r\n}\r\n\r\nconst useBeaconName = (beacon: Beacon): string | undefined => {\r\n    const matrixClient = useContext(MatrixClientContext);\r\n\r\n    if (beacon.beaconInfo?.assetType !== LocationAssetType.Self) {\r\n        return beacon.beaconInfo?.description;\r\n    }\r\n    const room = matrixClient.getRoom(beacon.roomId);\r\n    const member = room?.getMember(beacon.beaconInfoOwner);\r\n\r\n    return member?.rawDisplayName || beacon.beaconInfoOwner;\r\n};\r\n\r\nconst BeaconStatusTooltip: React.FC<Props> = ({ beacon }) => {\r\n    const label = useBeaconName(beacon);\r\n\r\n    return (\r\n        <div className=\"mx_BeaconStatusTooltip\">\r\n            <BeaconStatus\r\n                beacon={beacon}\r\n                label={label}\r\n                displayStatus={BeaconDisplayStatus.Active}\r\n                displayLiveTimeRemaining\r\n                className=\"mx_BeaconStatusTooltip_inner\"\r\n            >\r\n                <ShareLatestLocation latestLocationState={beacon.latestLocationState} />\r\n            </BeaconStatus>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BeaconStatusTooltip;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { type MatrixClient, type Beacon, type Room } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport type * as maplibregl from \"maplibre-gl\";\r\nimport { Icon as LiveLocationIcon } from \"../../../../res/img/location/live-location.svg\";\r\nimport { useLiveBeacons } from \"../../../utils/beacon/useLiveBeacons\";\r\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\r\nimport BaseDialog from \"../dialogs/BaseDialog\";\r\nimport Map from \"../location/Map\";\r\nimport ZoomButtons from \"../location/ZoomButtons\";\r\nimport BeaconMarker from \"./BeaconMarker\";\r\nimport { type Bounds, getBeaconBounds } from \"../../../utils/beacon/bounds\";\r\nimport { getGeoUri } from \"../../../utils/beacon\";\r\nimport { _t } from \"../../../languageHandler\";\r\nimport AccessibleButton from \"../elements/AccessibleButton\";\r\nimport DialogSidebar from \"./DialogSidebar\";\r\nimport DialogOwnBeaconStatus from \"./DialogOwnBeaconStatus\";\r\nimport BeaconStatusTooltip from \"./BeaconStatusTooltip\";\r\nimport MapFallback from \"../location/MapFallback\";\r\nimport { MapError } from \"../location/MapError\";\r\nimport { type LocationShareError } from \"../../../utils/location\";\r\n\r\nexport interface IProps {\r\n    roomId: Room[\"roomId\"];\r\n    matrixClient: MatrixClient;\r\n    // open the map centered on this beacon's location\r\n    initialFocusedBeacon?: Beacon;\r\n    onFinished(): void;\r\n}\r\n\r\n// track the 'focused time' as ts\r\n// to make it possible to refocus the same beacon\r\n// as the beacon location may change\r\n// or the map may move around\r\ninterface FocusedBeaconState {\r\n    ts: number;\r\n    beacon?: Beacon;\r\n}\r\n\r\nconst getBoundsCenter = (bounds?: Bounds): string | undefined => {\r\n    if (!bounds) {\r\n        return;\r\n    }\r\n    return getGeoUri({\r\n        latitude: (bounds.north + bounds.south) / 2,\r\n        longitude: (bounds.east + bounds.west) / 2,\r\n        timestamp: Date.now(),\r\n    });\r\n};\r\n\r\nconst useMapPosition = (\r\n    liveBeacons: Beacon[],\r\n    { beacon, ts }: FocusedBeaconState,\r\n): {\r\n    bounds?: Bounds;\r\n    centerGeoUri?: string;\r\n} => {\r\n    const [bounds, setBounds] = useState<Bounds | undefined>(getBeaconBounds(liveBeacons));\r\n    const [centerGeoUri, setCenterGeoUri] = useState<string | undefined>(\r\n        beacon?.latestLocationState?.uri || getBoundsCenter(bounds),\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (\r\n            // this check ignores the first initial focused beacon state\r\n            // as centering logic on map zooms to show everything\r\n            // instead of focusing down\r\n            ts !== 0 &&\r\n            // only set focus to a known location\r\n            beacon?.latestLocationState?.uri\r\n        ) {\r\n            // append custom `mxTs` parameter to geoUri\r\n            // so map is triggered to refocus on this uri\r\n            // event if it was previously the center geouri\r\n            // but the map have moved/zoomed\r\n            setCenterGeoUri(`${beacon?.latestLocationState?.uri};mxTs=${Date.now()}`);\r\n            setBounds(getBeaconBounds([beacon]));\r\n        }\r\n    }, [beacon, ts]);\r\n\r\n    return { bounds, centerGeoUri };\r\n};\r\n\r\n/**\r\n * Dialog to view live beacons maximised\r\n */\r\nconst BeaconViewDialog: React.FC<IProps> = ({ initialFocusedBeacon, roomId, matrixClient, onFinished }) => {\r\n    const liveBeacons = useLiveBeacons(roomId, matrixClient);\r\n    const [focusedBeaconState, setFocusedBeaconState] = useState<FocusedBeaconState>({\r\n        beacon: initialFocusedBeacon,\r\n        ts: 0,\r\n    });\r\n\r\n    const [isSidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n    const { bounds, centerGeoUri } = useMapPosition(liveBeacons, focusedBeaconState);\r\n\r\n    const [mapDisplayError, setMapDisplayError] = useState<unknown>();\r\n\r\n    // automatically open the sidebar if there is no map to see\r\n    useEffect(() => {\r\n        if (mapDisplayError) {\r\n            setSidebarOpen(true);\r\n        }\r\n    }, [mapDisplayError]);\r\n\r\n    const onBeaconListItemClick = (beacon: Beacon): void => {\r\n        setFocusedBeaconState({ beacon, ts: Date.now() });\r\n    };\r\n\r\n    const hasOwnBeacon =\r\n        liveBeacons.filter((beacon) => beacon?.beaconInfoOwner === matrixClient.getUserId()).length > 0;\r\n\r\n    return (\r\n        <BaseDialog className=\"mx_BeaconViewDialog\" onFinished={onFinished} fixedWidth={false}>\r\n            <MatrixClientContext.Provider value={matrixClient}>\r\n                {centerGeoUri && !mapDisplayError && (\r\n                    <Map\r\n                        id=\"mx_BeaconViewDialog\"\r\n                        bounds={bounds}\r\n                        centerGeoUri={centerGeoUri}\r\n                        interactive\r\n                        onError={setMapDisplayError}\r\n                        className=\"mx_BeaconViewDialog_map\"\r\n                        allowGeolocate={!hasOwnBeacon}\r\n                    >\r\n                        {({ map }: { map: maplibregl.Map }) => (\r\n                            <>\r\n                                {liveBeacons.map((beacon) => (\r\n                                    <BeaconMarker\r\n                                        key={beacon.identifier}\r\n                                        map={map}\r\n                                        beacon={beacon}\r\n                                        tooltip={<BeaconStatusTooltip beacon={beacon} />}\r\n                                    />\r\n                                ))}\r\n                                <ZoomButtons map={map} />\r\n                            </>\r\n                        )}\r\n                    </Map>\r\n                )}\r\n                {mapDisplayError instanceof Error && (\r\n                    <MapError error={mapDisplayError.message as LocationShareError} isMinimised />\r\n                )}\r\n                {!centerGeoUri && !mapDisplayError && (\r\n                    <MapFallback data-testid=\"beacon-view-dialog-map-fallback\" className=\"mx_BeaconViewDialog_map\">\r\n                        <span className=\"mx_BeaconViewDialog_mapFallbackMessage\">\r\n                            {_t(\"location_sharing|live_locations_empty\")}\r\n                        </span>\r\n                        <AccessibleButton\r\n                            kind=\"primary\"\r\n                            onClick={onFinished}\r\n                            data-testid=\"beacon-view-dialog-fallback-close\"\r\n                        >\r\n                            {_t(\"action|close\")}\r\n                        </AccessibleButton>\r\n                    </MapFallback>\r\n                )}\r\n                {isSidebarOpen ? (\r\n                    <DialogSidebar\r\n                        beacons={liveBeacons}\r\n                        onBeaconClick={onBeaconListItemClick}\r\n                        requestClose={() => setSidebarOpen(false)}\r\n                    />\r\n                ) : (\r\n                    <AccessibleButton\r\n                        kind=\"primary\"\r\n                        onClick={() => setSidebarOpen(true)}\r\n                        data-testid=\"beacon-view-dialog-open-sidebar\"\r\n                        className=\"mx_BeaconViewDialog_viewListButton\"\r\n                    >\r\n                        <LiveLocationIcon height={12} />\r\n                        &nbsp;\r\n                        {_t(\"action|view_list\")}\r\n                    </AccessibleButton>\r\n                )}\r\n                <DialogOwnBeaconStatus roomId={roomId} />\r\n            </MatrixClientContext.Provider>\r\n        </BaseDialog>\r\n    );\r\n};\r\n\r\nexport default BeaconViewDialog;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type Beacon, type Room, RoomStateEvent, type MatrixClient } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport { useEventEmitterState } from \"../../hooks/useEventEmitter\";\r\n\r\n/**\r\n * Returns an array of all live beacon ids for a given room\r\n *\r\n * Beacons are removed from array when they become inactive\r\n */\r\nexport const useLiveBeacons = (roomId: Room[\"roomId\"], matrixClient: MatrixClient): Beacon[] => {\r\n    const room = matrixClient.getRoom(roomId);\r\n\r\n    const liveBeacons = useEventEmitterState(\r\n        room?.currentState,\r\n        RoomStateEvent.BeaconLiveness,\r\n        () =>\r\n            room?.currentState?.liveBeaconIds.map(\r\n                (beaconIdentifier) => room.currentState.beacons.get(beaconIdentifier)!,\r\n            ) || [],\r\n    );\r\n\r\n    return liveBeacons;\r\n};\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { type ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport * as maplibregl from \"maplibre-gl\";\r\nimport { ClientEvent, type IClientWellKnown } from \"matrix-js-sdk/src/matrix\";\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\nimport MatrixClientContext from \"../../../contexts/MatrixClientContext\";\r\nimport { useEventEmitterState } from \"../../../hooks/useEventEmitter\";\r\nimport { parseGeoUri, positionFailureMessage } from \"../../../utils/location\";\r\nimport { tileServerFromWellKnown } from \"../../../utils/WellKnownUtils\";\r\nimport { useMap } from \"../../../utils/location/useMap\";\r\nimport { type Bounds } from \"../../../utils/beacon/bounds\";\r\nimport Modal from \"../../../Modal\";\r\nimport ErrorDialog from \"../dialogs/ErrorDialog\";\r\nimport { _t } from \"../../../languageHandler\";\r\n\r\nconst useMapWithStyle = ({\r\n    id,\r\n    centerGeoUri,\r\n    onError,\r\n    interactive,\r\n    bounds,\r\n    allowGeolocate,\r\n}: {\r\n    id: string;\r\n    centerGeoUri?: string;\r\n    onError?(error: Error): void;\r\n    interactive?: boolean;\r\n    bounds?: Bounds;\r\n    allowGeolocate?: boolean;\r\n}): {\r\n    map: maplibregl.Map | undefined;\r\n    bodyId: string;\r\n} => {\r\n    const bodyId = `mx_Map_${id}`;\r\n\r\n    // style config\r\n    const context = useContext(MatrixClientContext);\r\n    const mapStyleUrl = useEventEmitterState(\r\n        context,\r\n        ClientEvent.ClientWellKnown,\r\n        (clientWellKnown: IClientWellKnown) => tileServerFromWellKnown(clientWellKnown)?.[\"map_style_url\"],\r\n    );\r\n\r\n    const map = useMap({ interactive, bodyId, onError });\r\n\r\n    useEffect(() => {\r\n        if (mapStyleUrl && map) {\r\n            map.setStyle(mapStyleUrl);\r\n        }\r\n    }, [mapStyleUrl, map]);\r\n\r\n    useEffect(() => {\r\n        if (map && centerGeoUri) {\r\n            try {\r\n                const coords = parseGeoUri(centerGeoUri);\r\n                if (!coords) {\r\n                    throw new Error(\"Invalid geo URI\");\r\n                }\r\n                map.setCenter({ lon: coords.longitude, lat: coords.latitude });\r\n            } catch (e) {\r\n                logger.error(\"Could not set map center\", e);\r\n            }\r\n        }\r\n    }, [map, centerGeoUri]);\r\n\r\n    useEffect(() => {\r\n        if (map && bounds) {\r\n            try {\r\n                const lngLatBounds = new maplibregl.LngLatBounds(\r\n                    [bounds.west, bounds.south],\r\n                    [bounds.east, bounds.north],\r\n                );\r\n                map.fitBounds(lngLatBounds, { padding: 100, maxZoom: 15 });\r\n            } catch (e) {\r\n                logger.error(\"Invalid map bounds\", e);\r\n            }\r\n        }\r\n    }, [map, bounds]);\r\n\r\n    const [geolocate, setGeolocate] = useState<maplibregl.GeolocateControl | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (!map) {\r\n            return;\r\n        }\r\n        if (allowGeolocate && !geolocate) {\r\n            const geolocate = new maplibregl.GeolocateControl({\r\n                positionOptions: {\r\n                    enableHighAccuracy: true,\r\n                },\r\n                trackUserLocation: false,\r\n            });\r\n            setGeolocate(geolocate);\r\n            map.addControl(geolocate);\r\n        }\r\n        if (!allowGeolocate && geolocate) {\r\n            map.removeControl(geolocate);\r\n            setGeolocate(null);\r\n        }\r\n    }, [map, geolocate, allowGeolocate]);\r\n\r\n    useEffect(() => {\r\n        if (geolocate) {\r\n            geolocate.on(\"error\", onGeolocateError);\r\n            return () => {\r\n                geolocate.off(\"error\", onGeolocateError);\r\n            };\r\n        }\r\n    }, [geolocate]);\r\n\r\n    return {\r\n        map,\r\n        bodyId,\r\n    };\r\n};\r\n\r\nconst onGeolocateError = (e: GeolocationPositionError): void => {\r\n    logger.error(\"Could not fetch location\", e);\r\n    Modal.createDialog(ErrorDialog, {\r\n        title: _t(\"location_sharing|error_fetch_location\"),\r\n        description: positionFailureMessage(e.code) ?? \"\",\r\n    });\r\n};\r\n\r\nexport interface MapProps {\r\n    id: string;\r\n    interactive?: boolean;\r\n    /**\r\n     * set map center to geoUri coords\r\n     * Center will only be set to valid geoUri\r\n     * this prop is only simply diffed by useEffect, so to trigger *recentering* of the same geoUri\r\n     * append the uri with a var not used by the geoUri spec\r\n     * eg a timestamp: `geo:54,42;mxTs=123`\r\n     */\r\n    centerGeoUri?: string;\r\n    bounds?: Bounds;\r\n    className?: string;\r\n    allowGeolocate?: boolean;\r\n    onClick?: () => void;\r\n    onError?: (error: Error) => void;\r\n    children?: (renderProps: { map: maplibregl.Map }) => ReactNode;\r\n}\r\n\r\nconst MapComponent: React.FC<MapProps> = ({\r\n    bounds,\r\n    centerGeoUri,\r\n    children,\r\n    className,\r\n    allowGeolocate,\r\n    id,\r\n    interactive,\r\n    onError,\r\n    onClick,\r\n}) => {\r\n    const { map, bodyId } = useMapWithStyle({ centerGeoUri, onError, id, interactive, bounds, allowGeolocate });\r\n\r\n    const onMapClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\r\n        // Eat click events when clicking the attribution button\r\n        const target = event.target as Element;\r\n        if (target.classList.contains(\"maplibregl-ctrl-attrib-button\")) {\r\n            return;\r\n        }\r\n\r\n        onClick?.();\r\n    };\r\n\r\n    return (\r\n        <div className={classNames(\"mx_Map\", className)} id={bodyId} onClick={onMapClick}>\r\n            {!!children && !!map && children({ map })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapComponent;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport type { Map as MapLibreMap } from \"maplibre-gl\";\r\nimport { createMap } from \"./map\";\r\nimport { useMatrixClientContext } from \"../../contexts/MatrixClientContext\";\r\n\r\ninterface UseMapProps {\r\n    bodyId: string;\r\n    onError?: (error: Error) => void;\r\n    interactive?: boolean;\r\n}\r\n\r\n/**\r\n * Create a map instance\r\n * Add listeners for errors\r\n * Make sure `onError` has a stable reference\r\n * As map is recreated on changes to it\r\n */\r\nexport const useMap = ({ interactive, bodyId, onError }: UseMapProps): MapLibreMap | undefined => {\r\n    const cli = useMatrixClientContext();\r\n    const [map, setMap] = useState<MapLibreMap>();\r\n\r\n    useEffect(\r\n        () => {\r\n            let map: MapLibreMap | undefined;\r\n            try {\r\n                map = createMap(cli, !!interactive, bodyId, onError);\r\n                setMap(map);\r\n            } catch (error) {\r\n                console.error(\"Error encountered in useMap\", error);\r\n                if (error instanceof Error) {\r\n                    onError?.(error);\r\n                }\r\n            }\r\n            return () => {\r\n                if (map) {\r\n                    map.remove();\r\n                    setMap(undefined);\r\n                }\r\n            };\r\n        },\r\n        // map is excluded as a dependency\r\n        [cli, interactive, bodyId, onError],\r\n    );\r\n\r\n    return map;\r\n};\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React from \"react\";\r\nimport { PlusIcon, MinusIcon } from \"@vector-im/compound-design-tokens/assets/web/icons\";\r\n\r\nimport type * as maplibregl from \"maplibre-gl\";\r\nimport { _t } from \"../../../languageHandler\";\r\nimport AccessibleButton from \"../elements/AccessibleButton\";\r\n\r\ninterface Props {\r\n    map: maplibregl.Map;\r\n}\r\n\r\nconst ZoomButtons: React.FC<Props> = ({ map }) => {\r\n    const onZoomIn = (): void => {\r\n        map.zoomIn();\r\n    };\r\n\r\n    const onZoomOut = (): void => {\r\n        map.zoomOut();\r\n    };\r\n\r\n    return (\r\n        <div className=\"mx_ZoomButtons\">\r\n            <AccessibleButton\r\n                onClick={onZoomIn}\r\n                data-testid=\"map-zoom-in-button\"\r\n                title={_t(\"action|zoom_in\")}\r\n                className=\"mx_ZoomButtons_button\"\r\n            >\r\n                <PlusIcon className=\"mx_ZoomButtons_icon\" />\r\n            </AccessibleButton>\r\n            <AccessibleButton\r\n                onClick={onZoomOut}\r\n                data-testid=\"map-zoom-out-button\"\r\n                title={_t(\"action|zoom_out\")}\r\n                className=\"mx_ZoomButtons_button\"\r\n            >\r\n                <MinusIcon className=\"mx_ZoomButtons_icon\" />\r\n            </AccessibleButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ZoomButtons;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport * as maplibregl from \"maplibre-gl\";\r\nimport { type MatrixClient } from \"matrix-js-sdk/src/matrix\";\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\nimport { _t } from \"../../languageHandler\";\r\nimport { findMapStyleUrl } from \"./findMapStyleUrl\";\r\nimport { LocationShareError } from \"./LocationShareErrors\";\r\n\r\nexport const createMap = (\r\n    client: MatrixClient,\r\n    interactive: boolean,\r\n    bodyId: string,\r\n    onError?: (error: Error) => void,\r\n): maplibregl.Map => {\r\n    try {\r\n        const styleUrl = findMapStyleUrl(client);\r\n\r\n        const map = new maplibregl.Map({\r\n            container: bodyId,\r\n            style: styleUrl,\r\n            zoom: 15,\r\n            interactive,\r\n            attributionControl: false,\r\n            locale: {\r\n                \"AttributionControl.ToggleAttribution\": _t(\"location_sharing|toggle_attribution\"),\r\n                \"AttributionControl.MapFeedback\": _t(\"location_sharing|map_feedback\"),\r\n                \"FullscreenControl.Enter\": _t(\"action|enter_fullscreen\"),\r\n                \"FullscreenControl.Exit\": _t(\"action|exit_fullscreeen\"),\r\n                \"GeolocateControl.FindMyLocation\": _t(\"location_sharing|find_my_location\"),\r\n                \"GeolocateControl.LocationNotAvailable\": _t(\"location_sharing|location_not_available\"),\r\n                \"LogoControl.Title\": _t(\"location_sharing|mapbox_logo\"),\r\n                \"NavigationControl.ResetBearing\": _t(\"location_sharing|reset_bearing\"),\r\n                \"NavigationControl.ZoomIn\": _t(\"action|zoom_in\"),\r\n                \"NavigationControl.ZoomOut\": _t(\"action|zoom_out\"),\r\n            },\r\n        });\r\n        map.addControl(new maplibregl.AttributionControl(), \"top-right\");\r\n\r\n        map.on(\"error\", (e) => {\r\n            logger.error(\"Failed to load map: check map_style_url in config.json has a valid URL and API key\", e.error);\r\n            onError?.(new Error(LocationShareError.MapStyleUrlNotReachable));\r\n        });\r\n\r\n        return map;\r\n    } catch (e) {\r\n        logger.error(\"Failed to render map\", e);\r\n        const errorMessage = (e as Error)?.message;\r\n        if (errorMessage.includes(\"Failed to initialize WebGL\")) throw new Error(LocationShareError.WebGLNotEnabled);\r\n        throw e;\r\n    }\r\n};\r\n\r\nexport const createMarker = (coords: GeolocationCoordinates, element: HTMLElement): maplibregl.Marker => {\r\n    const marker = new maplibregl.Marker({\r\n        element,\r\n        anchor: \"bottom\",\r\n        offset: [0, -1],\r\n    }).setLngLat({ lon: coords.longitude, lat: coords.latitude });\r\n    return marker;\r\n};\r\n"],"names":["MinusIcon","props","ref","xmlns","width","height","fill","viewBox","children","d","displayName","forwardRef","PlusIcon","_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgExternalLink","role","fillRule","stroke","strokeLinecap","strokeLinejoin","ForwardRef","BeaconMarker","map","beacon","tooltip","_beacon$beaconInfo","latestLocationState","useEventEmitterState","BeaconEvent","LocationUpdate","room","useContext","MatrixClientContext","getRoom","roomId","isLive","geoUri","uri","assetTypeIsSelf","beaconInfo","assetType","LocationAssetType","Self","_member","getMember","beaconInfoOwner","markerRoomMember","undefined","React","SmartMarker","id","identifier","roomMember","useMemberColor","getBeaconBounds","beacons","coords","filterBoolean","_beacon$latestLocatio","parseGeoUri","sortedByLat","sort","left","right","latitude","sortedByLong","longitude","north","south","east","west","ShareLatestLocation","setCoords","useState","useEffect","latLonString","mapLink","makeMapSiteLink","Tooltip","label","_t","href","target","rel","ExternalLinkIcon","className","CopyableText","border","getTextToCopy","_ref","_beacon$beaconInfo2","rest","_objectWithoutProperties","_excluded","isSelfLocation","beaconMember","humanizedUpdateTime","timestamp","humanizeTime","MemberAvatar","member","size","StyledLiveBeaconIcon","BeaconStatus","name","description","displayStatus","BeaconDisplayStatus","Active","onClick","preventDefaultWrapper","DialogSidebar","onBeaconClick","requestClose","Heading","AccessibleButton","title","CloseIcon","BeaconListItem","key","DialogOwnBeaconStatus","OwnBeaconStore","instance","OwnBeaconStoreEvent","LivenessChange","ownBeaconId","getLiveBeaconIds","getBeaconById","useOwnBeacon","OwnBeaconStatus","BeaconStatusTooltip","matrixClient","rawDisplayName","useBeaconName","displayLiveTimeRemaining","getBoundsCenter","bounds","getGeoUri","Date","now","BeaconViewDialog","initialFocusedBeacon","onFinished","liveBeacons","useLiveBeacons","currentState","RoomStateEvent","BeaconLiveness","_room$currentState","liveBeaconIds","beaconIdentifier","get","focusedBeaconState","setFocusedBeaconState","ts","isSidebarOpen","setSidebarOpen","centerGeoUri","useMapPosition","setBounds","setCenterGeoUri","_beacon$latestLocatio2","_beacon$latestLocatio3","mapDisplayError","setMapDisplayError","hasOwnBeacon","filter","getUserId","BaseDialog","fixedWidth","Provider","value","Map","interactive","onError","allowGeolocate","ZoomButtons","Error","MapError","error","message","isMinimised","MapFallback","kind","LiveLocationIcon","useMapWithStyle","bodyId","context","mapStyleUrl","ClientEvent","ClientWellKnown","clientWellKnown","_tileServerFromWellKn","tileServerFromWellKnown","useMap","cli","useMatrixClientContext","setMap","createMap","console","remove","setStyle","setCenter","lon","lat","logger","lngLatBounds","maplibregl","fitBounds","padding","maxZoom","geolocate","setGeolocate","positionOptions","enableHighAccuracy","trackUserLocation","addControl","removeControl","on","onGeolocateError","off","_positionFailureMessa","Modal","createDialog","ErrorDialog","positionFailureMessage","code","MapComponent","classNames","event","classList","contains","onZoomIn","zoomIn","onZoomOut","zoomOut","client","styleUrl","findMapStyleUrl","container","style","zoom","attributionControl","locale","LocationShareError","MapStyleUrlNotReachable","includes","WebGLNotEnabled","createMarker","element","anchor","offset","setLngLat"],"sourceRoot":""}