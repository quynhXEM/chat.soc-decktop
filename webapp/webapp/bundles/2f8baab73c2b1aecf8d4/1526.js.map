{"version":3,"file":"bundles/2f8baab73c2b1aecf8d4/1526.js","mappings":"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","sources":["webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/ComposerContext.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/hooks/useSelection.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/components/Editor.tsx","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/hooks/useIsExpanded.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/utils/autocomplete.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/components/WysiwygAutocomplete.tsx","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/bold.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/list-bulleted.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/code.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/indent-decrease.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/indent-increase.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/inline-code.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/italic.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/list-numbered.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/quote.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/strikethrough.js","webpack://soc-connect/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/underline.js","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/components/LinkModal.tsx","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/components/FormattingButtons.tsx","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/hooks/useInputEventProcessor.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/utils/event.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/components/WysiwygComposer.tsx","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/hooks/useIsFocused.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/hooks/useSetCursorPosition.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/hooks/utils.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/utils/editing.ts","webpack://soc-connect/./src/components/views/rooms/wysiwyg_composer/utils/selection.ts","webpack://soc-connect/./src/components/views/settings/KeyboardShortcut.tsx"],"sourcesContent":["/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { createContext, useContext } from \"react\";\r\nimport { type IEventRelation } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport { type SubSelection } from \"./types\";\r\nimport type EditorStateTransfer from \"../../../../utils/EditorStateTransfer\";\r\n\r\nexport function getDefaultContextValue(defaultValue?: Partial<ComposerContextState>): { selection: SubSelection } {\r\n    return {\r\n        selection: { anchorNode: null, anchorOffset: 0, focusNode: null, focusOffset: 0, isForward: true },\r\n        ...defaultValue,\r\n    };\r\n}\r\n\r\nexport interface ComposerContextState {\r\n    selection: SubSelection;\r\n    editorStateTransfer?: EditorStateTransfer;\r\n    eventRelation?: IEventRelation;\r\n}\r\n\r\nexport const ComposerContext = createContext<ComposerContextState>(getDefaultContextValue());\r\nComposerContext.displayName = \"ComposerContext\";\r\n\r\nexport function useComposerContext(): ComposerContextState {\r\n    return useContext(ComposerContext);\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { useCallback, useEffect } from \"react\";\r\n\r\nimport useFocus from \"../../../../../hooks/useFocus\";\r\nimport { useComposerContext, type ComposerContextState } from \"../ComposerContext\";\r\n\r\nfunction setSelectionContext(composerContext: ComposerContextState): void {\r\n    const selection = document.getSelection();\r\n\r\n    if (selection) {\r\n        const range = selection.getRangeAt(0);\r\n        const isForward = range.startContainer === selection.anchorNode && range.startOffset === selection.anchorOffset;\r\n\r\n        composerContext.selection = {\r\n            anchorNode: selection.anchorNode,\r\n            anchorOffset: selection.anchorOffset,\r\n            focusNode: selection.focusNode,\r\n            focusOffset: selection.focusOffset,\r\n            isForward,\r\n        };\r\n    }\r\n}\r\n\r\nexport function useSelection(): ReturnType<typeof useFocus>[1] & {\r\n    onInput(): void;\r\n} {\r\n    const composerContext = useComposerContext();\r\n    const [isFocused, focusProps] = useFocus();\r\n\r\n    useEffect(() => {\r\n        function onSelectionChange(): void {\r\n            setSelectionContext(composerContext);\r\n        }\r\n\r\n        if (isFocused) {\r\n            document.addEventListener(\"selectionchange\", onSelectionChange);\r\n        }\r\n\r\n        return () => document.removeEventListener(\"selectionchange\", onSelectionChange);\r\n    }, [isFocused, composerContext]);\r\n\r\n    const onInput = useCallback(() => {\r\n        setSelectionContext(composerContext);\r\n    }, [composerContext]);\r\n\r\n    return { ...focusProps, onInput };\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport classNames from \"classnames\";\r\nimport React, { type CSSProperties, memo, type RefObject, type ReactNode } from \"react\";\r\n\r\nimport { useIsExpanded } from \"../hooks/useIsExpanded\";\r\nimport { useSelection } from \"../hooks/useSelection\";\r\n\r\nconst HEIGHT_BREAKING_POINT = 24;\r\n\r\ninterface EditorProps {\r\n    disabled: boolean;\r\n    placeholder?: string;\r\n    leftComponent?: ReactNode;\r\n    rightComponent?: ReactNode;\r\n    ref?: RefObject<HTMLDivElement | null>;\r\n}\r\n\r\nexport const Editor = memo(function Editor({ disabled, placeholder, leftComponent, rightComponent, ref }: EditorProps) {\r\n    const isExpanded = useIsExpanded(ref, HEIGHT_BREAKING_POINT);\r\n    const { onFocus, onBlur, onInput } = useSelection();\r\n\r\n    return (\r\n        <div data-testid=\"WysiwygComposerEditor\" className=\"mx_WysiwygComposer_Editor\" data-is-expanded={isExpanded}>\r\n            {leftComponent}\r\n            <div className=\"mx_WysiwygComposer_Editor_container\">\r\n                <div\r\n                    className={classNames(\"mx_WysiwygComposer_Editor_content\", {\r\n                        mx_WysiwygComposer_Editor_content_placeholder: Boolean(placeholder),\r\n                    })}\r\n                    style={{ \"--placeholder\": `\"${placeholder}\"` } as CSSProperties}\r\n                    ref={ref}\r\n                    contentEditable={!disabled}\r\n                    role=\"textbox\"\r\n                    aria-multiline=\"true\"\r\n                    aria-autocomplete=\"list\"\r\n                    aria-haspopup=\"listbox\"\r\n                    dir=\"auto\"\r\n                    aria-disabled={disabled}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onInput={onInput}\r\n                />\r\n            </div>\r\n            {rightComponent}\r\n        </div>\r\n    );\r\n});\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type RefObject, useEffect, useState } from \"react\";\r\n\r\nexport function useIsExpanded(ref: RefObject<HTMLElement | null> | undefined, breakingPoint: number): boolean {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    useEffect(() => {\r\n        if (ref?.current) {\r\n            const editor = ref.current;\r\n            const resizeObserver = new ResizeObserver((entries) => {\r\n                requestAnimationFrame(() => {\r\n                    const height = entries[0]?.contentBoxSize?.[0].blockSize;\r\n                    setIsExpanded(height >= breakingPoint);\r\n                });\r\n            });\r\n\r\n            resizeObserver.observe(editor);\r\n            return () => resizeObserver.unobserve(editor);\r\n        }\r\n    }, [ref, breakingPoint]);\r\n\r\n    return isExpanded;\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2023 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type AllowedMentionAttributes, type MappedSuggestion } from \"@vector-im/matrix-wysiwyg\";\r\nimport { type MatrixClient, type Room } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport { type ICompletion } from \"../../../../../autocomplete/Autocompleter\";\r\nimport * as Avatar from \"../../../../../Avatar\";\r\n\r\n/**\r\n * Builds the query for the `<Autocomplete />` component from the rust suggestion. This\r\n * will change as we implement handling / commands.\r\n *\r\n * @param suggestion  - represents if the rust model is tracking a potential mention\r\n * @returns an empty string if we can not generate a query, otherwise a query beginning\r\n * with @ for a user query, # for a room or space query\r\n */\r\nexport function buildQuery(suggestion: MappedSuggestion | null): string {\r\n    if (!suggestion || !suggestion.keyChar) {\r\n        // if we have an empty key character, we do not build a query\r\n        return \"\";\r\n    }\r\n\r\n    return `${suggestion.keyChar}${suggestion.text}`;\r\n}\r\n\r\n/**\r\n * Find the room from the completion by looking it up using the client from the context\r\n * we are currently in\r\n *\r\n * @param completion - the completion from the autocomplete\r\n * @param client - the current client we are using\r\n * @returns a Room if one is found, null otherwise\r\n */\r\nexport function getRoomFromCompletion(completion: ICompletion, client: MatrixClient): Room | null {\r\n    const roomId = completion.completionId;\r\n    const aliasFromCompletion = completion.completion;\r\n\r\n    let roomToReturn: Room | null | undefined;\r\n\r\n    // Not quite sure if the logic here makes sense - specifically calling .getRoom with an alias\r\n    // that doesn't start with #, but keeping the logic the same as in PartCreator.roomPill for now\r\n    if (roomId) {\r\n        roomToReturn = client.getRoom(roomId);\r\n    } else if (!aliasFromCompletion.startsWith(\"#\")) {\r\n        roomToReturn = client.getRoom(aliasFromCompletion);\r\n    } else {\r\n        roomToReturn = client.getRooms().find((r) => {\r\n            return r.getCanonicalAlias() === aliasFromCompletion || r.getAltAliases().includes(aliasFromCompletion);\r\n        });\r\n    }\r\n\r\n    return roomToReturn ?? null;\r\n}\r\n\r\n/**\r\n * Given an autocomplete suggestion, determine the text to display in the pill\r\n *\r\n * @param completion - the item selected from the autocomplete\r\n * @param client - the MatrixClient is required for us to look up the correct room mention text\r\n * @returns the text to display in the mention\r\n */\r\nexport function getMentionDisplayText(completion: ICompletion, client: MatrixClient): string {\r\n    if (completion.type === \"user\" || completion.type === \"at-room\") {\r\n        return completion.completion;\r\n    } else if (completion.type === \"room\") {\r\n        // try and get the room and use it's name, if not available, fall back to\r\n        // completion.completion\r\n        return getRoomFromCompletion(completion, client)?.name || completion.completion;\r\n    }\r\n    return \"\";\r\n}\r\n\r\nfunction getCSSProperties({\r\n    url,\r\n    initialLetter,\r\n    id = \"\",\r\n}: {\r\n    url: string;\r\n    initialLetter?: string;\r\n    id: string;\r\n}): string {\r\n    const cssProperties = [`--avatar-background: url(${url})`, `--avatar-letter: '${initialLetter}'`];\r\n\r\n    const textColor = Avatar.getAvatarTextColor(id);\r\n    if (textColor) {\r\n        cssProperties.push(textColor);\r\n    }\r\n\r\n    return cssProperties.join(\"; \");\r\n}\r\n\r\n/**\r\n * For a given completion, the attributes will change depending on the completion type\r\n *\r\n * @param completion - the item selected from the autocomplete\r\n * @param client - the MatrixClient is required for us to look up the correct room mention text\r\n * @param room - the room the composer is currently in\r\n * @returns an object of attributes containing HTMLAnchor attributes or data-* attributes\r\n */\r\nexport function getMentionAttributes(\r\n    completion: ICompletion,\r\n    client: MatrixClient,\r\n    room: Room,\r\n): AllowedMentionAttributes {\r\n    // To ensure that we always have something set in the --avatar-letter CSS variable\r\n    // as otherwise alignment varies depending on whether the content is empty or not.\r\n    // Use a zero width space so that it counts as content, but does not display anything.\r\n    const defaultLetterContent = \"\\u200b\";\r\n    const attributes: AllowedMentionAttributes = new Map();\r\n\r\n    if (completion.type === \"user\") {\r\n        // logic as used in UserPillPart.setAvatar in parts.ts\r\n        const mentionedMember = room.getMember(completion.completionId || \"\");\r\n\r\n        if (!mentionedMember) return attributes;\r\n\r\n        const name = mentionedMember.name || mentionedMember.userId;\r\n        const defaultAvatarUrl = Avatar.defaultAvatarUrlForString(mentionedMember.userId);\r\n        const avatarUrl = Avatar.avatarUrlForMember(mentionedMember, 16, 16, \"crop\");\r\n        let initialLetter = defaultLetterContent;\r\n        if (avatarUrl === defaultAvatarUrl) {\r\n            initialLetter = Avatar.getInitialLetter(name) ?? defaultLetterContent;\r\n        }\r\n\r\n        attributes.set(\"data-mention-type\", completion.type);\r\n        attributes.set(\r\n            \"style\",\r\n            getCSSProperties({\r\n                url: avatarUrl,\r\n                initialLetter,\r\n                id: mentionedMember.userId,\r\n            }),\r\n        );\r\n    } else if (completion.type === \"room\") {\r\n        // logic as used in RoomPillPart.setAvatar in parts.ts\r\n        const mentionedRoom = getRoomFromCompletion(completion, client);\r\n        const aliasFromCompletion = completion.completion;\r\n\r\n        let initialLetter = defaultLetterContent;\r\n        let avatarUrl = Avatar.avatarUrlForRoom(mentionedRoom ?? null, 16, 16, \"crop\");\r\n        if (!avatarUrl) {\r\n            initialLetter = Avatar.getInitialLetter(mentionedRoom?.name || aliasFromCompletion) ?? defaultLetterContent;\r\n            avatarUrl = Avatar.defaultAvatarUrlForString(mentionedRoom?.roomId ?? aliasFromCompletion);\r\n        }\r\n\r\n        attributes.set(\"data-mention-type\", completion.type);\r\n        attributes.set(\r\n            \"style\",\r\n            getCSSProperties({\r\n                url: avatarUrl,\r\n                initialLetter,\r\n                id: mentionedRoom?.roomId ?? aliasFromCompletion,\r\n            }),\r\n        );\r\n    } else if (completion.type === \"at-room\") {\r\n        // logic as used in RoomPillPart.setAvatar in parts.ts, but now we know the current room\r\n        // from the arguments passed\r\n        let initialLetter = defaultLetterContent;\r\n        let avatarUrl = Avatar.avatarUrlForRoom(room, 16, 16, \"crop\");\r\n\r\n        if (!avatarUrl) {\r\n            initialLetter = Avatar.getInitialLetter(room.name) ?? defaultLetterContent;\r\n            avatarUrl = Avatar.defaultAvatarUrlForString(room.roomId);\r\n        }\r\n\r\n        attributes.set(\"data-mention-type\", completion.type);\r\n        attributes.set(\r\n            \"style\",\r\n            getCSSProperties({\r\n                url: avatarUrl,\r\n                initialLetter,\r\n                id: room.roomId,\r\n            }),\r\n        );\r\n    }\r\n\r\n    return attributes;\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2023 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { type JSX, type Ref, type FunctionComponent } from \"react\";\r\nimport { type FormattingFunctions, type MappedSuggestion } from \"@vector-im/matrix-wysiwyg\";\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\nimport Autocomplete from \"../../Autocomplete\";\r\nimport { type ICompletion } from \"../../../../../autocomplete/Autocompleter\";\r\nimport { useMatrixClientContext } from \"../../../../../contexts/MatrixClientContext\";\r\nimport { getMentionDisplayText, getMentionAttributes, buildQuery } from \"../utils/autocomplete\";\r\nimport { useScopedRoomContext } from \"../../../../../contexts/ScopedRoomContext.tsx\";\r\n\r\ninterface WysiwygAutocompleteProps {\r\n    /**\r\n     * The suggestion output from the rust model is used to build the query that is\r\n     * passed to the `<Autocomplete />` component\r\n     */\r\n    suggestion: MappedSuggestion | null;\r\n\r\n    /**\r\n     * This handler will be called with the href and display text for a mention on clicking\r\n     * a mention in the autocomplete list or pressing enter on a selected item\r\n     */\r\n    handleMention: FormattingFunctions[\"mention\"];\r\n\r\n    /**\r\n     * This handler will be called with the display text for a command on clicking\r\n     * a command in the autocomplete list or pressing enter on a selected item\r\n     */\r\n    handleCommand: FormattingFunctions[\"command\"];\r\n\r\n    /**\r\n     * Handler purely for the at-room mentions special case\r\n     */\r\n    handleAtRoomMention: FormattingFunctions[\"mentionAtRoom\"];\r\n\r\n    ref?: Ref<Autocomplete>;\r\n}\r\n\r\n/**\r\n * Given the current suggestion from the rust model and a handler function, this component\r\n * will display the legacy `<Autocomplete />` component (as used in the BasicMessageComposer)\r\n * and call the handler function with the required arguments when a mention is selected\r\n *\r\n * @param props.ref - the ref will be attached to the rendered `<Autocomplete />` component\r\n */\r\nconst WysiwygAutocomplete = ({\r\n    suggestion,\r\n    handleMention,\r\n    handleCommand,\r\n    handleAtRoomMention,\r\n    ref,\r\n}: WysiwygAutocompleteProps): JSX.Element | null => {\r\n    const { room } = useScopedRoomContext(\"room\");\r\n    const client = useMatrixClientContext();\r\n\r\n    function handleConfirm(completion: ICompletion): void {\r\n        if (client === undefined || room === undefined) {\r\n            return;\r\n        }\r\n\r\n        switch (completion.type) {\r\n            case \"command\": {\r\n                // TODO determine if utils in SlashCommands.tsx are required.\r\n                // Trim the completion as some include trailing spaces, but we always insert a\r\n                // trailing space in the rust model anyway\r\n                handleCommand(completion.completion.trim());\r\n                return;\r\n            }\r\n            case \"at-room\": {\r\n                handleAtRoomMention(getMentionAttributes(completion, client, room));\r\n                return;\r\n            }\r\n            case \"room\":\r\n            case \"user\": {\r\n                if (typeof completion.href === \"string\") {\r\n                    handleMention(\r\n                        completion.href,\r\n                        getMentionDisplayText(completion, client),\r\n                        getMentionAttributes(completion, client, room),\r\n                    );\r\n                }\r\n                return;\r\n            }\r\n            // TODO - handle \"community\" type\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    if (!room) return null;\r\n\r\n    const autoCompleteQuery = buildQuery(suggestion);\r\n    // debug for https://github.com/vector-im/element-web/issues/26037\r\n    logger.log(`## 26037 ## Rendering Autocomplete for WysiwygAutocomplete with query: \"${autoCompleteQuery}\"`);\r\n\r\n    // TODO - determine if we show all of the /command suggestions, there are some options in the\r\n    // list which don't seem to make sense in this context, specifically /html and /plain\r\n    return (\r\n        <div className=\"mx_WysiwygComposer_AutoCompleteWrapper\" data-testid=\"autocomplete-wrapper\">\r\n            <Autocomplete\r\n                ref={ref}\r\n                query={autoCompleteQuery}\r\n                onConfirm={handleConfirm}\r\n                selection={{ start: 0, end: 0 }}\r\n                room={room}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n(WysiwygAutocomplete as FunctionComponent).displayName = \"WysiwygAutocomplete\";\r\n\r\nexport { WysiwygAutocomplete };\r\n","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction BoldIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M8.8 19q-.824 0-1.413-.587A1.93 1.93 0 0 1 6.8 17V7q0-.824.587-1.412A1.93 1.93 0 0 1 8.8 5h3.525q1.624 0 3 1T16.7 8.775q0 1.275-.575 1.963-.575.687-1.075.987.626.275 1.387 1.025.763.75.763 2.25 0 2.224-1.625 3.113-1.625.887-3.05.887zm1.025-2.8h2.6q1.2 0 1.462-.612.263-.614.263-.888 0-.275-.263-.887-.262-.613-1.537-.613H9.825zm0-5.7h2.325q.825 0 1.2-.425a1.4 1.4 0 0 0 .375-.95q0-.6-.425-.975t-1.1-.375H9.825z\"\n    })\n  });\n}\n;\nBoldIcon.displayName = \"BoldIcon\";\nexport default forwardRef(BoldIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ListBulletedIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M4.5 7.5q-.618 0-1.06-.44A1.44 1.44 0 0 1 3 6q0-.618.44-1.06.442-.44 1.06-.44t1.06.44Q6 5.383 6 6t-.44 1.06q-.44.44-1.06.44m4.788 11.213Q9.575 19 10 19h10q.424 0 .712-.288A.97.97 0 0 0 21 18a.97.97 0 0 0-.288-.712A.97.97 0 0 0 20 17H10a.97.97 0 0 0-.713.288A.97.97 0 0 0 9 18q0 .424.287.712m.001-5.999Q9.575 13 10 13h10q.424 0 .712-.287A.97.97 0 0 0 21 12a.97.97 0 0 0-.288-.713A.97.97 0 0 0 20 11H10a.97.97 0 0 0-.713.287A.97.97 0 0 0 9 12q0 .424.287.713m.001-6Q9.575 7 10 7h10q.424 0 .712-.287A.97.97 0 0 0 21 6a.97.97 0 0 0-.288-.713A.97.97 0 0 0 20 5H10a.97.97 0 0 0-.713.287A.97.97 0 0 0 9 6q0 .424.287.713M3.44 19.06q.442.44 1.06.44t1.06-.44Q6 18.62 6 18t-.44-1.06a1.45 1.45 0 0 0-1.06-.44q-.618 0-1.06.44Q3 17.38 3 18t.44 1.06M4.5 13.5q-.618 0-1.06-.44A1.45 1.45 0 0 1 3 12q0-.619.44-1.06.442-.44 1.06-.44t1.06.44Q6 11.383 6 12t-.44 1.06q-.44.44-1.06.44\"\n    })\n  });\n}\n;\nListBulletedIcon.displayName = \"ListBulletedIcon\";\nexport default forwardRef(ListBulletedIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction CodeIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"m8.825 12 1.475-1.475q.3-.3.3-.7t-.3-.7-.713-.3-.712.3L6.7 11.3q-.15.15-.213.325a1.1 1.1 0 0 0-.062.375q0 .2.063.375a.9.9 0 0 0 .212.325l2.175 2.175q.3.3.713.3.412 0 .712-.3t.3-.7-.3-.7zm6.35 0L13.7 13.475q-.3.3-.3.7t.3.7.713.3.712-.3L17.3 12.7q.15-.15.212-.325.063-.175.063-.375t-.062-.375a.9.9 0 0 0-.213-.325l-2.175-2.175a1 1 0 0 0-1.425 0q-.3.3-.3.7t.3.7zM5 21q-.824 0-1.412-.587A1.93 1.93 0 0 1 3 19V5q0-.824.587-1.412A1.93 1.93 0 0 1 5 3h14q.824 0 1.413.587Q21 4.176 21 5v14q0 .824-.587 1.413A1.93 1.93 0 0 1 19 21zm0-2h14V5H5z\"\n    })\n  });\n}\n;\nCodeIcon.displayName = \"CodeIcon\";\nexport default forwardRef(CodeIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction IndentDecreaseIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M3.288 18.713Q3.575 19 4 19h16q.424 0 .712-.288A.97.97 0 0 0 21 18a.97.97 0 0 0-.288-.712A.97.97 0 0 0 20 17H4a.97.97 0 0 0-.712.288A.97.97 0 0 0 3 18q0 .424.288.712m8-3.999Q11.575 15 12 15h8q.424 0 .712-.287A.97.97 0 0 0 21 14a.97.97 0 0 0-.288-.713A.97.97 0 0 0 20 13h-8a.97.97 0 0 0-.713.287A.97.97 0 0 0 11 14q0 .424.287.713m.001-4Q11.575 11 12 11h8q.424 0 .712-.287A.97.97 0 0 0 21 10a.97.97 0 0 0-.288-.713A.97.97 0 0 0 20 9h-8a.97.97 0 0 0-.713.287A.97.97 0 0 0 11 10q0 .424.287.713m.001-4Q11.575 7 12 7h8q.424 0 .712-.287A.97.97 0 0 0 21 6a.97.97 0 0 0-.288-.713A.97.97 0 0 0 20 5h-8a.97.97 0 0 0-.713.287A.97.97 0 0 0 11 6q0 .424.287.713M6.15 13.15l-2.8-2.8a.48.48 0 0 1 0-.7l2.8-2.8q.25-.25.55-.125T7 7.2v5.6q0 .35-.3.475t-.55-.125\"\n    })\n  });\n}\n;\nIndentDecreaseIcon.displayName = \"IndentDecreaseIcon\";\nexport default forwardRef(IndentDecreaseIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction IndentIncreaseIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M4 19a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 18q0-.424.288-.712A.97.97 0 0 1 4 17h16q.424 0 .712.288.288.287.288.712 0 .424-.288.712A.97.97 0 0 1 20 19zm8-4a.97.97 0 0 1-.713-.287A.97.97 0 0 1 11 14q0-.424.287-.713A.97.97 0 0 1 12 13h8q.424 0 .712.287.288.288.288.713 0 .424-.288.713A.97.97 0 0 1 20 15zm0-4a.97.97 0 0 1-.713-.287A.97.97 0 0 1 11 10q0-.424.287-.713A.97.97 0 0 1 12 9h8q.424 0 .712.287Q21 9.576 21 10t-.288.713A.97.97 0 0 1 20 11zm0-4a.97.97 0 0 1-.713-.287A.97.97 0 0 1 11 6q0-.424.287-.713A.97.97 0 0 1 12 5h8q.424 0 .712.287Q21 5.576 21 6t-.288.713A.97.97 0 0 1 20 7zm-8.15 6.15q-.25.25-.55.125T3 12.8V7.2q0-.35.3-.475t.55.125l2.8 2.8a.48.48 0 0 1 0 .7z\"\n    })\n  });\n}\n;\nIndentIncreaseIcon.displayName = \"IndentIncreaseIcon\";\nexport default forwardRef(IndentIncreaseIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction InlineCodeIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M14.958 5.62a1 1 0 0 0-1.916-.574l-4 13.333a1 1 0 0 0 1.916.575zM5.974 7.232a1 1 0 0 0-1.409.128l-3.333 4a1 1 0 0 0 0 1.28l3.333 4a1 1 0 1 0 1.537-1.28L3.302 12l2.8-3.36a1 1 0 0 0-.128-1.408m12.053 0a1 1 0 0 1 1.408.128l3.333 4a1 1 0 0 1 0 1.28l-3.333 4a1 1 0 1 1-1.537-1.28l2.8-3.36-2.8-3.36a1 1 0 0 1 .128-1.408\"\n    })\n  });\n}\n;\nInlineCodeIcon.displayName = \"InlineCodeIcon\";\nexport default forwardRef(InlineCodeIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ItalicIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M6.25 19q-.525 0-.888-.363A1.2 1.2 0 0 1 5 17.75q0-.525.362-.887.363-.363.888-.363H9l3-9H9.25q-.525 0-.887-.362A1.2 1.2 0 0 1 8 6.25q0-.525.363-.888Q8.725 5 9.25 5h7.5q.525 0 .887.362.363.363.363.888t-.363.888a1.2 1.2 0 0 1-.887.362H14.5l-3 9h2.25q.525 0 .887.363.363.362.363.887t-.363.887a1.2 1.2 0 0 1-.887.363z\"\n    })\n  });\n}\n;\nItalicIcon.displayName = \"ItalicIcon\";\nexport default forwardRef(ItalicIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ListNumberedIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M9 6a1 1 0 0 1 1-1h10a1 1 0 1 1 0 2H10a1 1 0 0 1-1-1m0 6a1 1 0 0 1 1-1h10a1 1 0 1 1 0 2H10a1 1 0 0 1-1-1m0 6a1 1 0 0 1 1-1h10a1 1 0 1 1 0 2H10a1 1 0 0 1-1-1M5.604 5.089A.75.75 0 0 1 6 5.75v4.5a.75.75 0 0 1-1.5 0V7.151l-.334.223a.75.75 0 0 1-.832-1.248l1.5-1a.75.75 0 0 1 .77-.037M5 13a2 2 0 0 0-1.139.321 1.85 1.85 0 0 0-.626.719 2.3 2.3 0 0 0-.234.921v.023l-.001.01v.005l.75.001H3a.75.75 0 0 0 1.5.01V15l.01-.072a.8.8 0 0 1 .067-.218.35.35 0 0 1 .116-.14c.04-.027.126-.07.307-.07s.267.043.307.07a.35.35 0 0 1 .116.14.8.8 0 0 1 .076.29v.008a.53.53 0 0 1-.14.352l-2.161 2.351a.75.75 0 0 0-.198.523v.016c0 .414.336.75.75.75h2.5a.75.75 0 0 0 0-1.5h-.82l1.034-1.124C6.809 16 7 15.51 7 15h-.75H7v-.039l-.004-.068a2.3 2.3 0 0 0-.231-.853 1.85 1.85 0 0 0-.626-.719A2 2 0 0 0 5 13m-.5 2.003V15v.01z\"\n    })\n  });\n}\n;\nListNumberedIcon.displayName = \"ListNumberedIcon\";\nexport default forwardRef(ListNumberedIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction QuoteIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M4.719 4.34c.094-.642-.366-1.236-1.028-1.328-.663-.092-1.276.354-1.371.996l-.808 5.478c-.094.642.366 1.237 1.028 1.328.663.092 1.276-.354 1.371-.996zm12.115 10.174c.095-.642-.366-1.237-1.028-1.328-.662-.092-1.276.354-1.37.996l-.809 5.478c-.094.642.366 1.236 1.028 1.328.663.092 1.277-.354 1.371-.996zM9.318 3.009c.665.077 1.138.662 1.058 1.306l-.022.175a221 221 0 0 1-.266 2.006c-.161 1.171-.368 2.579-.535 3.386-.13.636-.769 1.049-1.425.921s-1.082-.745-.95-1.381c.148-.72.345-2.052.509-3.237a191 191 0 0 0 .262-1.981l.021-.17c.08-.644.684-1.103 1.348-1.025m13.17 11.505c.094-.642-.366-1.237-1.028-1.328-.663-.092-1.276.354-1.371.996l-.808 5.478c-.094.642.366 1.236 1.028 1.328.663.092 1.276-.354 1.371-.996z\"\n    })\n  });\n}\n;\nQuoteIcon.displayName = \"QuoteIcon\";\nexport default forwardRef(QuoteIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction StrikethroughIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M12.15 20q-1.9 0-3.375-1.125T6.65 15.8l2.2-.95q.35 1.2 1.213 1.975.861.775 2.137.775 1.05 0 1.9-.5t.85-1.6q0-.45-.175-.825A2.4 2.4 0 0 0 14.3 14h2.8a4.3 4.3 0 0 1 .25 1.5q0 2.15-1.538 3.325Q14.277 20 12.15 20M3 12a.97.97 0 0 1-.712-.287A.97.97 0 0 1 2 11q0-.424.288-.713A.97.97 0 0 1 3 10h18q.424 0 .712.287.288.288.288.713 0 .424-.288.713A.97.97 0 0 1 21 12zm9.05-8.15q1.65 0 2.887.812T16.85 7.15l-2.2.975a3 3 0 0 0-.838-1.3Q13.2 6.25 12.1 6.25q-1.025 0-1.7.462-.675.463-.75 1.288h-2.4q.05-1.725 1.363-2.938Q9.925 3.85 12.05 3.85\"\n    })\n  });\n}\n;\nStrikethroughIcon.displayName = \"StrikethroughIcon\";\nexport default forwardRef(StrikethroughIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction UnderlineIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M6 21a.97.97 0 0 1-.713-.288A.97.97 0 0 1 5 20q0-.424.287-.712A.97.97 0 0 1 6 19h12q.424 0 .712.288.288.287.288.712 0 .424-.288.712A.97.97 0 0 1 18 21zm6-4q-2.525 0-3.925-1.575t-1.4-4.175V4.275q0-.525.388-.9A1.27 1.27 0 0 1 7.975 3q.525 0 .9.375t.375.9V11.4q0 1.4.7 2.275t2.05.875 2.05-.875.7-2.275V4.275q0-.525.387-.9A1.27 1.27 0 0 1 16.05 3q.525 0 .9.375t.375.9v6.975q0 2.6-1.4 4.175T12 17\"\n    })\n  });\n}\n;\nUnderlineIcon.displayName = \"UnderlineIcon\";\nexport default forwardRef(UnderlineIcon);","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type FormattingFunctions } from \"@vector-im/matrix-wysiwyg\";\r\nimport React, { type ChangeEvent, useState } from \"react\";\r\n\r\nimport { _t } from \"../../../../../languageHandler\";\r\nimport Modal from \"../../../../../Modal\";\r\nimport Field from \"../../../elements/Field\";\r\nimport { type ComposerContextState } from \"../ComposerContext\";\r\nimport { isSelectionEmpty, setSelection } from \"../utils/selection\";\r\nimport BaseDialog from \"../../../dialogs/BaseDialog\";\r\nimport DialogButtons from \"../../../elements/DialogButtons\";\r\n\r\nexport function openLinkModal(\r\n    composer: FormattingFunctions,\r\n    composerContext: ComposerContextState,\r\n    isEditing: boolean,\r\n): void {\r\n    Modal.createDialog(\r\n        LinkModal,\r\n        {\r\n            composerContext,\r\n            composer,\r\n            isTextEnabled: isSelectionEmpty(),\r\n            isEditing,\r\n        },\r\n        \"mx_CompoundDialog\",\r\n        false,\r\n        true,\r\n    );\r\n}\r\n\r\nfunction isEmpty(text: string): boolean {\r\n    return text.length < 1;\r\n}\r\n\r\ninterface LinkModalProps {\r\n    composer: FormattingFunctions;\r\n    isTextEnabled: boolean;\r\n    onFinished: () => void;\r\n    composerContext: ComposerContextState;\r\n    isEditing: boolean;\r\n}\r\n\r\nexport const LinkModal: React.FC<LinkModalProps> = ({\r\n    composer,\r\n    isTextEnabled,\r\n    onFinished,\r\n    composerContext,\r\n    isEditing,\r\n}) => {\r\n    const [hasLinkChanged, setHasLinkChanged] = useState(false);\r\n    const [fields, setFields] = useState({ text: \"\", link: isEditing ? composer.getLink() : \"\" });\r\n    const hasText = !isEditing && isTextEnabled;\r\n    const isSaveDisabled = !hasLinkChanged || (hasText && isEmpty(fields.text)) || isEmpty(fields.link);\r\n\r\n    return (\r\n        <BaseDialog\r\n            className=\"mx_LinkModal\"\r\n            title={isEditing ? _t(\"composer|link_modal|title_edit\") : _t(\"composer|link_modal|title_create\")}\r\n            hasCancel={true}\r\n            onFinished={onFinished}\r\n        >\r\n            <form\r\n                className=\"mx_LinkModal_content\"\r\n                onSubmit={async (evt) => {\r\n                    evt.preventDefault();\r\n                    evt.stopPropagation();\r\n\r\n                    onFinished();\r\n\r\n                    // When submitting is done when pressing enter when the link field has the focus,\r\n                    // The link field is getting back the focus (due to react-focus-lock)\r\n                    // So we are waiting that the focus stuff is done to play with the composer selection\r\n                    await new Promise((resolve) => setTimeout(resolve, 0));\r\n\r\n                    await setSelection(composerContext.selection);\r\n                    composer.link(fields.link, isTextEnabled ? fields.text : undefined);\r\n                }}\r\n            >\r\n                {hasText && (\r\n                    <Field\r\n                        required={true}\r\n                        autoFocus={true}\r\n                        label={_t(\"composer|link_modal|text_field_label\")}\r\n                        value={fields.text}\r\n                        className=\"mx_LinkModal_Field\"\r\n                        placeholder=\"\"\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                            setFields((fields) => ({ ...fields, text: e.target.value }))\r\n                        }\r\n                    />\r\n                )}\r\n                <Field\r\n                    required={true}\r\n                    autoFocus={!hasText}\r\n                    label={_t(\"composer|link_modal|link_field_label\")}\r\n                    value={fields.link}\r\n                    className=\"mx_LinkModal_Field\"\r\n                    placeholder=\"\"\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n                        setFields((fields) => ({ ...fields, link: e.target.value }));\r\n                        setHasLinkChanged(true);\r\n                    }}\r\n                />\r\n\r\n                <div className=\"mx_LinkModal_buttons\">\r\n                    {isEditing && (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"danger\"\r\n                            onClick={() => {\r\n                                composer.removeLinks();\r\n                                onFinished();\r\n                            }}\r\n                        >\r\n                            {_t(\"action|remove\")}\r\n                        </button>\r\n                    )}\r\n                    <DialogButtons\r\n                        primaryButton={_t(\"action|save\")}\r\n                        primaryDisabled={isSaveDisabled}\r\n                        primaryIsSubmit={true}\r\n                        onCancel={onFinished}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </BaseDialog>\r\n    );\r\n};\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { type JSX, type MouseEventHandler, type ReactNode } from \"react\";\r\nimport { type FormattingFunctions, type AllActionStates, type ActionState } from \"@vector-im/matrix-wysiwyg\";\r\nimport classNames from \"classnames\";\r\nimport BoldIcon from \"@vector-im/compound-design-tokens/assets/web/icons/bold\";\r\nimport BulletedListIcon from \"@vector-im/compound-design-tokens/assets/web/icons/list-bulleted\";\r\nimport CodeBlockIcon from \"@vector-im/compound-design-tokens/assets/web/icons/code\";\r\nimport UnIndentIcon from \"@vector-im/compound-design-tokens/assets/web/icons/indent-decrease\";\r\nimport IndentIcon from \"@vector-im/compound-design-tokens/assets/web/icons/indent-increase\";\r\nimport InlineCodeIcon from \"@vector-im/compound-design-tokens/assets/web/icons/inline-code\";\r\nimport ItalicIcon from \"@vector-im/compound-design-tokens/assets/web/icons/italic\";\r\nimport NumberedListIcon from \"@vector-im/compound-design-tokens/assets/web/icons/list-numbered\";\r\nimport QuoteIcon from \"@vector-im/compound-design-tokens/assets/web/icons/quote\";\r\nimport StrikeThroughIcon from \"@vector-im/compound-design-tokens/assets/web/icons/strikethrough\";\r\nimport UnderlineIcon from \"@vector-im/compound-design-tokens/assets/web/icons/underline\";\r\nimport LinkIcon from \"@vector-im/compound-design-tokens/assets/web/icons/link\";\r\n\r\nimport { _t } from \"../../../../../languageHandler\";\r\nimport AccessibleButton, { type ButtonEvent } from \"../../../elements/AccessibleButton\";\r\nimport { openLinkModal } from \"./LinkModal\";\r\nimport { useComposerContext } from \"../ComposerContext\";\r\nimport { KeyboardShortcut } from \"../../../settings/KeyboardShortcut\";\r\nimport { type KeyCombo } from \"../../../../../KeyBindingsManager\";\r\n\r\ninterface ButtonProps {\r\n    icon: ReactNode;\r\n    actionState: ActionState;\r\n    onClick: MouseEventHandler<HTMLButtonElement>;\r\n    label: string;\r\n    keyCombo?: KeyCombo;\r\n}\r\n\r\nfunction Button({ label, keyCombo, onClick, actionState, icon }: ButtonProps): JSX.Element {\r\n    return (\r\n        <AccessibleButton\r\n            element=\"button\"\r\n            onClick={onClick as (e: ButtonEvent) => void}\r\n            aria-label={label}\r\n            className={classNames(\"mx_FormattingButtons_Button\", {\r\n                mx_FormattingButtons_active: actionState === \"reversed\",\r\n                mx_FormattingButtons_Button_hover: actionState === \"enabled\",\r\n                mx_FormattingButtons_disabled: actionState === \"disabled\",\r\n            })}\r\n            title={actionState === \"disabled\" ? undefined : label}\r\n            caption={\r\n                keyCombo && (\r\n                    <KeyboardShortcut value={keyCombo} className=\"mx_FormattingButtons_Tooltip_KeyboardShortcut\" />\r\n                )\r\n            }\r\n            placement=\"top\"\r\n        >\r\n            {icon}\r\n        </AccessibleButton>\r\n    );\r\n}\r\n\r\ninterface FormattingButtonsProps {\r\n    composer: FormattingFunctions;\r\n    actionStates: AllActionStates;\r\n}\r\n\r\nexport function FormattingButtons({ composer, actionStates }: FormattingButtonsProps): JSX.Element {\r\n    const composerContext = useComposerContext();\r\n    const isInList = actionStates.unorderedList === \"reversed\" || actionStates.orderedList === \"reversed\";\r\n    return (\r\n        <div className=\"mx_FormattingButtons\">\r\n            <Button\r\n                actionState={actionStates.bold}\r\n                label={_t(\"composer|format_bold\")}\r\n                keyCombo={{ ctrlOrCmdKey: true, key: \"b\" }}\r\n                onClick={() => composer.bold()}\r\n                icon={<BoldIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n            <Button\r\n                actionState={actionStates.italic}\r\n                label={_t(\"composer|format_italic\")}\r\n                keyCombo={{ ctrlOrCmdKey: true, key: \"i\" }}\r\n                onClick={() => composer.italic()}\r\n                icon={<ItalicIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n            <Button\r\n                actionState={actionStates.underline}\r\n                label={_t(\"composer|format_underline\")}\r\n                keyCombo={{ ctrlOrCmdKey: true, key: \"u\" }}\r\n                onClick={() => composer.underline()}\r\n                icon={<UnderlineIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n            <Button\r\n                actionState={actionStates.strikeThrough}\r\n                label={_t(\"composer|format_strikethrough\")}\r\n                onClick={() => composer.strikeThrough()}\r\n                icon={<StrikeThroughIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n            <Button\r\n                actionState={actionStates.unorderedList}\r\n                label={_t(\"composer|format_unordered_list\")}\r\n                onClick={() => composer.unorderedList()}\r\n                icon={<BulletedListIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n            <Button\r\n                actionState={actionStates.orderedList}\r\n                label={_t(\"composer|format_ordered_list\")}\r\n                onClick={() => composer.orderedList()}\r\n                icon={<NumberedListIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n            {isInList && (\r\n                <Button\r\n                    actionState={actionStates.indent}\r\n                    label={_t(\"composer|format_increase_indent\")}\r\n                    onClick={() => composer.indent()}\r\n                    icon={<IndentIcon className=\"mx_FormattingButtons_Icon\" />}\r\n                />\r\n            )}\r\n            {isInList && (\r\n                <Button\r\n                    actionState={actionStates.unindent}\r\n                    label={_t(\"composer|format_decrease_indent\")}\r\n                    onClick={() => composer.unindent()}\r\n                    icon={<UnIndentIcon className=\"mx_FormattingButtons_Icon\" />}\r\n                />\r\n            )}\r\n            <Button\r\n                actionState={actionStates.quote}\r\n                label={_t(\"action|quote\")}\r\n                onClick={() => composer.quote()}\r\n                icon={<QuoteIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n            <Button\r\n                actionState={actionStates.inlineCode}\r\n                label={_t(\"composer|format_inline_code\")}\r\n                keyCombo={{ ctrlOrCmdKey: true, key: \"e\" }}\r\n                onClick={() => composer.inlineCode()}\r\n                icon={<InlineCodeIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n            <Button\r\n                actionState={actionStates.codeBlock}\r\n                label={_t(\"composer|format_code_block\")}\r\n                onClick={() => composer.codeBlock()}\r\n                icon={<CodeBlockIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n            <Button\r\n                actionState={actionStates.link}\r\n                label={_t(\"composer|format_link\")}\r\n                onClick={() => openLinkModal(composer, composerContext, actionStates.link === \"reversed\")}\r\n                icon={<LinkIcon className=\"mx_FormattingButtons_Icon\" />}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type Wysiwyg, type WysiwygEvent } from \"@vector-im/matrix-wysiwyg\";\r\nimport { useCallback } from \"react\";\r\nimport { type IEventRelation, type MatrixClient } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport { useSettingValue } from \"../../../../../hooks/useSettings\";\r\nimport { getKeyBindingsManager } from \"../../../../../KeyBindingsManager\";\r\nimport { KeyBindingAction } from \"../../../../../accessibility/KeyboardShortcuts\";\r\nimport { findEditableEvent } from \"../../../../../utils/EventUtils\";\r\nimport dis from \"../../../../../dispatcher/dispatcher\";\r\nimport { Action } from \"../../../../../dispatcher/actions\";\r\nimport { type IRoomState } from \"../../../../structures/RoomView\";\r\nimport { type ComposerContextState, useComposerContext } from \"../ComposerContext\";\r\nimport type EditorStateTransfer from \"../../../../../utils/EditorStateTransfer\";\r\nimport { useMatrixClientContext } from \"../../../../../contexts/MatrixClientContext\";\r\nimport { isCaretAtEnd, isCaretAtStart } from \"../utils/selection\";\r\nimport { getEventsFromEditorStateTransfer, getEventsFromRoom } from \"../utils/event\";\r\nimport { endEditing } from \"../utils/editing\";\r\nimport type Autocomplete from \"../../Autocomplete\";\r\nimport { handleClipboardEvent, handleEventWithAutocomplete, isEventToHandleAsClipboardEvent } from \"./utils\";\r\nimport { useScopedRoomContext } from \"../../../../../contexts/ScopedRoomContext.tsx\";\r\n\r\nexport function useInputEventProcessor(\r\n    onSend: () => void,\r\n    autocompleteRef: React.RefObject<Autocomplete | null>,\r\n    initialContent?: string,\r\n    eventRelation?: IEventRelation,\r\n): (event: WysiwygEvent, composer: Wysiwyg, editor: HTMLElement) => WysiwygEvent | null {\r\n    const roomContext = useScopedRoomContext(\"liveTimeline\", \"room\", \"replyToEvent\", \"timelineRenderingType\");\r\n    const composerContext = useComposerContext();\r\n    const mxClient = useMatrixClientContext();\r\n    const isCtrlEnterToSend = useSettingValue(\"MessageComposerInput.ctrlEnterToSend\");\r\n\r\n    return useCallback(\r\n        (event: WysiwygEvent, composer: Wysiwyg, editor: HTMLElement) => {\r\n            const send = (): void => {\r\n                event.stopPropagation?.();\r\n                event.preventDefault?.();\r\n                // do not send the message if we have the autocomplete open, regardless of settings\r\n                if (autocompleteRef?.current && !autocompleteRef.current.state.hide) {\r\n                    return;\r\n                }\r\n                onSend();\r\n            };\r\n\r\n            if (isEventToHandleAsClipboardEvent(event)) {\r\n                const data = event instanceof ClipboardEvent ? event.clipboardData : event.dataTransfer;\r\n                const handled = handleClipboardEvent(event, data, roomContext, mxClient, eventRelation);\r\n                return handled ? null : event;\r\n            }\r\n\r\n            const isKeyboardEvent = event instanceof KeyboardEvent;\r\n            if (isKeyboardEvent) {\r\n                return handleKeyboardEvent(\r\n                    event,\r\n                    send,\r\n                    initialContent,\r\n                    composer,\r\n                    editor,\r\n                    roomContext,\r\n                    composerContext,\r\n                    mxClient,\r\n                    autocompleteRef,\r\n                );\r\n            } else {\r\n                return handleInputEvent(event, send, isCtrlEnterToSend);\r\n            }\r\n        },\r\n        [\r\n            isCtrlEnterToSend,\r\n            onSend,\r\n            initialContent,\r\n            roomContext,\r\n            composerContext,\r\n            mxClient,\r\n            autocompleteRef,\r\n            eventRelation,\r\n        ],\r\n    );\r\n}\r\n\r\ntype Send = () => void;\r\n\r\nfunction handleKeyboardEvent(\r\n    event: KeyboardEvent,\r\n    send: Send,\r\n    initialContent: string | undefined,\r\n    composer: Wysiwyg,\r\n    editor: HTMLElement,\r\n    roomContext: Pick<IRoomState, \"liveTimeline\" | \"timelineRenderingType\" | \"room\">,\r\n    composerContext: ComposerContextState,\r\n    mxClient: MatrixClient | undefined,\r\n    autocompleteRef: React.RefObject<Autocomplete | null>,\r\n): KeyboardEvent | null {\r\n    const { editorStateTransfer } = composerContext;\r\n    const isEditing = Boolean(editorStateTransfer);\r\n    const isEditorModified = isEditing ? initialContent !== composer.content() : composer.content().length !== 0;\r\n    const action = getKeyBindingsManager().getMessageComposerAction(event);\r\n\r\n    // we need autocomplete to take priority when it is open for using enter to select\r\n    const isHandledByAutocomplete = handleEventWithAutocomplete(autocompleteRef, event);\r\n    if (isHandledByAutocomplete) {\r\n        return event;\r\n    }\r\n\r\n    // taking the client from context gives us an client | undefined type, narrow it down\r\n    if (mxClient === undefined) {\r\n        return null;\r\n    }\r\n\r\n    switch (action) {\r\n        case KeyBindingAction.SendMessage:\r\n            send();\r\n            return null;\r\n        case KeyBindingAction.EditPrevMessage: {\r\n            // Or if the caret is not at the beginning of the editor\r\n            // Or the editor is modified\r\n            if (!isCaretAtStart(editor) || isEditorModified) {\r\n                break;\r\n            }\r\n\r\n            const isDispatched = dispatchEditEvent(\r\n                event,\r\n                false,\r\n                editorStateTransfer,\r\n                composerContext,\r\n                roomContext,\r\n                mxClient,\r\n            );\r\n\r\n            if (isDispatched) {\r\n                return null;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case KeyBindingAction.EditNextMessage: {\r\n            // If not in edition\r\n            // Or if the caret is not at the end of the editor\r\n            // Or the editor is modified\r\n            if (!editorStateTransfer || !isCaretAtEnd(editor) || isEditorModified) {\r\n                break;\r\n            }\r\n\r\n            const isDispatched = dispatchEditEvent(\r\n                event,\r\n                true,\r\n                editorStateTransfer,\r\n                composerContext,\r\n                roomContext,\r\n                mxClient,\r\n            );\r\n            if (!isDispatched) {\r\n                endEditing(roomContext);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return event;\r\n}\r\n\r\nfunction dispatchEditEvent(\r\n    event: KeyboardEvent,\r\n    isForward: boolean,\r\n    editorStateTransfer: EditorStateTransfer | undefined,\r\n    composerContext: ComposerContextState,\r\n    roomContext: Pick<IRoomState, \"liveTimeline\" | \"timelineRenderingType\" | \"room\">,\r\n    mxClient: MatrixClient,\r\n): boolean {\r\n    const foundEvents = editorStateTransfer\r\n        ? getEventsFromEditorStateTransfer(editorStateTransfer, roomContext, mxClient)\r\n        : getEventsFromRoom(composerContext, roomContext);\r\n    if (!foundEvents) {\r\n        return false;\r\n    }\r\n\r\n    const newEvent = findEditableEvent({\r\n        events: foundEvents,\r\n        isForward,\r\n        fromEventId: editorStateTransfer?.getEvent().getId(),\r\n        matrixClient: mxClient,\r\n    });\r\n    if (newEvent) {\r\n        dis.dispatch({\r\n            action: Action.EditEvent,\r\n            event: newEvent,\r\n            timelineRenderingType: roomContext.timelineRenderingType,\r\n        });\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\ntype InputEvent = Exclude<WysiwygEvent, KeyboardEvent | ClipboardEvent>;\r\n\r\nfunction handleInputEvent(event: InputEvent, send: Send, isCtrlEnterToSend: boolean): InputEvent | null {\r\n    switch (event.inputType) {\r\n        case \"insertParagraph\":\r\n            if (!isCtrlEnterToSend) {\r\n                send();\r\n                return null;\r\n            }\r\n            break;\r\n        case \"sendMessage\":\r\n            if (isCtrlEnterToSend) {\r\n                send();\r\n                return null;\r\n            }\r\n            break;\r\n    }\r\n\r\n    return event;\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2023 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type MatrixClient, type MatrixEvent, THREAD_RELATION_TYPE } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport type EditorStateTransfer from \"../../../../../utils/EditorStateTransfer\";\r\nimport { type IRoomState } from \"../../../../structures/RoomView\";\r\nimport { type ComposerContextState } from \"../ComposerContext\";\r\n\r\n// From EditMessageComposer private get events(): MatrixEvent[]\r\nexport function getEventsFromEditorStateTransfer(\r\n    editorStateTransfer: EditorStateTransfer,\r\n    roomContext: Pick<IRoomState, \"liveTimeline\">,\r\n    mxClient: MatrixClient,\r\n): MatrixEvent[] | undefined {\r\n    const liveTimelineEvents = roomContext.liveTimeline?.getEvents();\r\n    if (!liveTimelineEvents) {\r\n        return;\r\n    }\r\n\r\n    const roomId = editorStateTransfer.getEvent().getRoomId();\r\n    if (!roomId) {\r\n        return;\r\n    }\r\n\r\n    const room = mxClient.getRoom(roomId);\r\n    if (!room) {\r\n        return;\r\n    }\r\n\r\n    const pendingEvents = room.getPendingEvents();\r\n    const isInThread = Boolean(editorStateTransfer.getEvent().getThread());\r\n    return liveTimelineEvents.concat(isInThread ? [] : pendingEvents);\r\n}\r\n\r\n// From SendMessageComposer private onKeyDown = (event: KeyboardEvent): void\r\nexport function getEventsFromRoom(\r\n    composerContext: ComposerContextState,\r\n    roomContext: Pick<IRoomState, \"liveTimeline\" | \"room\">,\r\n): MatrixEvent[] | undefined {\r\n    const isReplyingToThread = composerContext.eventRelation?.key === THREAD_RELATION_TYPE.name;\r\n    return roomContext.liveTimeline\r\n        ?.getEvents()\r\n        .concat(isReplyingToThread ? [] : roomContext.room?.getPendingEvents() || []);\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { memo, type RefObject, type ReactNode, useEffect, useMemo, useRef } from \"react\";\r\nimport { type IEventRelation } from \"matrix-js-sdk/src/matrix\";\r\nimport { EMOTICON_TO_EMOJI } from \"@matrix-org/emojibase-bindings\";\r\nimport { useWysiwyg, type FormattingFunctions } from \"@vector-im/matrix-wysiwyg\";\r\nimport classNames from \"classnames\";\r\n\r\nimport type Autocomplete from \"../../Autocomplete\";\r\nimport { WysiwygAutocomplete } from \"./WysiwygAutocomplete\";\r\nimport { FormattingButtons } from \"./FormattingButtons\";\r\nimport { Editor } from \"./Editor\";\r\nimport { useInputEventProcessor } from \"../hooks/useInputEventProcessor\";\r\nimport { useSetCursorPosition } from \"../hooks/useSetCursorPosition\";\r\nimport { useIsFocused } from \"../hooks/useIsFocused\";\r\nimport defaultDispatcher from \"../../../../../dispatcher/dispatcher\";\r\nimport { Action } from \"../../../../../dispatcher/actions\";\r\nimport { parsePermalink } from \"../../../../../utils/permalinks/Permalinks\";\r\nimport { isNotNull } from \"../../../../../Typeguards\";\r\nimport { useSettingValue } from \"../../../../../hooks/useSettings\";\r\nimport { useScopedRoomContext } from \"../../../../../contexts/ScopedRoomContext.tsx\";\r\n\r\ninterface WysiwygComposerProps {\r\n    disabled?: boolean;\r\n    onChange: (content: string) => void;\r\n    onSend: () => void;\r\n    placeholder?: string;\r\n    initialContent?: string;\r\n    className?: string;\r\n    leftComponent?: ReactNode;\r\n    rightComponent?: ReactNode;\r\n    children?: (ref: RefObject<HTMLDivElement | null>, wysiwyg: FormattingFunctions) => ReactNode;\r\n    eventRelation?: IEventRelation;\r\n}\r\n\r\nfunction getEmojiSuggestions(enabled: boolean): Map<string, string> {\r\n    const emojiSuggestions = new Map(Array.from(EMOTICON_TO_EMOJI, ([key, value]) => [key, value.unicode]));\r\n    return enabled ? emojiSuggestions : new Map();\r\n}\r\n\r\nexport const WysiwygComposer = memo(function WysiwygComposer({\r\n    disabled = false,\r\n    onChange,\r\n    onSend,\r\n    placeholder,\r\n    initialContent,\r\n    className,\r\n    leftComponent,\r\n    rightComponent,\r\n    children,\r\n    eventRelation,\r\n}: WysiwygComposerProps) {\r\n    const { room } = useScopedRoomContext(\"room\");\r\n    const autocompleteRef = useRef<Autocomplete | null>(null);\r\n\r\n    const inputEventProcessor = useInputEventProcessor(onSend, autocompleteRef, initialContent, eventRelation);\r\n\r\n    const isAutoReplaceEmojiEnabled = useSettingValue(\"MessageComposerInput.autoReplaceEmoji\");\r\n    const emojiSuggestions = useMemo(() => getEmojiSuggestions(isAutoReplaceEmojiEnabled), [isAutoReplaceEmojiEnabled]);\r\n\r\n    const { ref, isWysiwygReady, content, actionStates, wysiwyg, suggestion, messageContent } = useWysiwyg({\r\n        initialContent,\r\n        inputEventProcessor,\r\n        emojiSuggestions,\r\n    });\r\n\r\n    const { isFocused, onFocus } = useIsFocused();\r\n\r\n    const isReady = isWysiwygReady && !disabled;\r\n    const computedPlaceholder = (!content && placeholder) || undefined;\r\n\r\n    useSetCursorPosition(!isReady, ref);\r\n\r\n    useEffect(() => {\r\n        if (!disabled && isNotNull(messageContent)) {\r\n            onChange(messageContent);\r\n        }\r\n    }, [onChange, messageContent, disabled]);\r\n\r\n    useEffect(() => {\r\n        function handleClick(e: Event): void {\r\n            e.preventDefault();\r\n            if (\r\n                e.target &&\r\n                e.target instanceof HTMLAnchorElement &&\r\n                e.target.getAttribute(\"data-mention-type\") === \"user\"\r\n            ) {\r\n                const parsedLink = parsePermalink(e.target.href);\r\n                if (room && parsedLink?.userId)\r\n                    defaultDispatcher.dispatch({\r\n                        action: Action.ViewUser,\r\n                        member: room.getMember(parsedLink.userId),\r\n                    });\r\n            }\r\n        }\r\n\r\n        const mentions: NodeList | undefined = ref.current?.querySelectorAll(\"a[data-mention-type]\");\r\n        if (mentions) {\r\n            mentions.forEach((mention) => mention.addEventListener(\"click\", handleClick));\r\n        }\r\n\r\n        return () => {\r\n            if (mentions) mentions.forEach((mention) => mention.removeEventListener(\"click\", handleClick));\r\n        };\r\n    }, [ref, room, content]);\r\n\r\n    return (\r\n        <div\r\n            data-testid=\"WysiwygComposer\"\r\n            className={classNames(className, { [`${className}-focused`]: isFocused })}\r\n            onFocus={onFocus}\r\n            onBlur={onFocus}\r\n        >\r\n            <WysiwygAutocomplete\r\n                ref={autocompleteRef}\r\n                suggestion={suggestion}\r\n                handleMention={wysiwyg.mention}\r\n                handleAtRoomMention={wysiwyg.mentionAtRoom}\r\n                handleCommand={wysiwyg.command}\r\n            />\r\n            <FormattingButtons composer={wysiwyg} actionStates={actionStates} />\r\n            <Editor\r\n                ref={ref}\r\n                disabled={!isReady}\r\n                leftComponent={leftComponent}\r\n                rightComponent={rightComponent}\r\n                placeholder={computedPlaceholder}\r\n            />\r\n            {children?.(ref, wysiwyg)}\r\n        </div>\r\n    );\r\n});\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type FocusEvent, useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport function useIsFocused(): {\r\n    isFocused: boolean;\r\n    onFocus(event: FocusEvent<HTMLElement>): void;\r\n} {\r\n    const [isFocused, setIsFocused] = useState(false);\r\n    const timeoutIDRef = useRef<number>(undefined);\r\n\r\n    useEffect(() => () => clearTimeout(timeoutIDRef.current), [timeoutIDRef]);\r\n    const onFocus = useCallback(\r\n        (event: FocusEvent<HTMLElement>) => {\r\n            clearTimeout(timeoutIDRef.current);\r\n            if (event.type === \"focus\") {\r\n                setIsFocused(true);\r\n            } else {\r\n                // To avoid a blink when we switch mode between plain text and rich text mode\r\n                // We delay the unfocused action\r\n                timeoutIDRef.current = window.setTimeout(() => setIsFocused(false), 100);\r\n            }\r\n        },\r\n        [setIsFocused, timeoutIDRef],\r\n    );\r\n\r\n    return { isFocused, onFocus };\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type RefObject, useEffect } from \"react\";\r\n\r\nimport { setCursorPositionAtTheEnd } from \"./utils\";\r\n\r\nexport function useSetCursorPosition(disabled: boolean, ref: RefObject<HTMLDivElement | null>): void {\r\n    useEffect(() => {\r\n        if (ref.current && !disabled) {\r\n            setCursorPositionAtTheEnd(ref.current);\r\n        }\r\n    }, [ref, disabled]);\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type RefObject } from \"react\";\r\nimport { type IEventRelation, type MatrixClient } from \"matrix-js-sdk/src/matrix\";\r\nimport { type WysiwygEvent } from \"@vector-im/matrix-wysiwyg\";\r\n\r\nimport { type TimelineRenderingType } from \"../../../../../contexts/RoomContext\";\r\nimport { type IRoomState } from \"../../../../structures/RoomView\";\r\nimport type Autocomplete from \"../../Autocomplete\";\r\nimport { getKeyBindingsManager } from \"../../../../../KeyBindingsManager\";\r\nimport { KeyBindingAction } from \"../../../../../accessibility/KeyboardShortcuts\";\r\nimport { getBlobSafeMimeType } from \"../../../../../utils/blobs\";\r\nimport ContentMessages from \"../../../../../ContentMessages\";\r\nimport { isNotNull } from \"../../../../../Typeguards\";\r\n\r\nexport function focusComposer(\r\n    composerElement: RefObject<HTMLElement | null>,\r\n    renderingType: TimelineRenderingType,\r\n    roomContext: Pick<IRoomState, \"timelineRenderingType\">,\r\n    timeoutId: RefObject<number | null>,\r\n): void {\r\n    if (renderingType === roomContext.timelineRenderingType) {\r\n        // Immediately set the focus, so if you start typing it\r\n        // will appear in the composer\r\n        composerElement.current?.focus();\r\n        // If we call focus immediate, the focus _is_ in the right\r\n        // place, but the cursor is invisible, presumably because\r\n        // some other event is still processing.\r\n        // The following line ensures that the cursor is actually\r\n        // visible in composer.\r\n        if (timeoutId.current) {\r\n            clearTimeout(timeoutId.current);\r\n        }\r\n        timeoutId.current = window.setTimeout(() => composerElement.current?.focus(), 200);\r\n    }\r\n}\r\n\r\nexport function setCursorPositionAtTheEnd(element: HTMLElement): void {\r\n    const range = document.createRange();\r\n    range.selectNodeContents(element);\r\n    range.collapse(false);\r\n    const selection = document.getSelection()!;\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n\r\n    element.focus();\r\n}\r\n\r\n/**\r\n * When the autocomplete modal is open we need to be able to properly\r\n * handle events that are dispatched. This allows the user to move the selection\r\n * in the autocomplete and select using enter.\r\n *\r\n * @param autocompleteRef - a ref to the autocomplete of interest\r\n * @param event - the keyboard event that has been dispatched\r\n * @returns boolean - whether or not the autocomplete has handled the event\r\n */\r\nexport function handleEventWithAutocomplete(\r\n    autocompleteRef: RefObject<Autocomplete | null>,\r\n    // we get a React Keyboard event from plain text composer, a Keyboard Event from the rich text composer\r\n    event: KeyboardEvent | React.KeyboardEvent<HTMLDivElement>,\r\n): boolean {\r\n    const autocompleteIsOpen = autocompleteRef?.current && !autocompleteRef.current.state.hide;\r\n\r\n    if (!autocompleteRef.current || !autocompleteIsOpen) {\r\n        return false;\r\n    }\r\n\r\n    let handled = false;\r\n    const autocompleteAction = getKeyBindingsManager().getAutocompleteAction(event);\r\n    const component = autocompleteRef.current;\r\n\r\n    if (component && component.countCompletions() > 0) {\r\n        switch (autocompleteAction) {\r\n            case KeyBindingAction.ForceCompleteAutocomplete:\r\n            case KeyBindingAction.CompleteAutocomplete:\r\n                autocompleteRef.current.onConfirmCompletion();\r\n                handled = true;\r\n                break;\r\n            case KeyBindingAction.PrevSelectionInAutocomplete:\r\n                autocompleteRef.current.moveSelection(-1);\r\n                handled = true;\r\n                break;\r\n            case KeyBindingAction.NextSelectionInAutocomplete:\r\n                autocompleteRef.current.moveSelection(1);\r\n                handled = true;\r\n                break;\r\n            case KeyBindingAction.CancelAutocomplete:\r\n                autocompleteRef.current.onEscape(event);\r\n                handled = true;\r\n                break;\r\n            default:\r\n                break; // don't return anything, allow event to pass through\r\n        }\r\n    }\r\n\r\n    if (handled) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return handled;\r\n}\r\n\r\n/**\r\n * Takes an event and handles image pasting. Returns a boolean to indicate if it has handled\r\n * the event or not. Must accept either clipboard or input events in order to prevent issue:\r\n * https://github.com/vector-im/element-web/issues/25327\r\n *\r\n * @param event - event to process\r\n * @param data - data from the event to process\r\n * @param roomContext - room in which the event occurs\r\n * @param mxClient - current matrix client\r\n * @param eventRelation - used to send the event to the correct place eg timeline vs thread\r\n * @returns - boolean to show if the event was handled or not\r\n */\r\nexport function handleClipboardEvent(\r\n    event: ClipboardEvent | InputEvent,\r\n    data: DataTransfer | null,\r\n    roomContext: Pick<IRoomState, \"room\" | \"timelineRenderingType\" | \"replyToEvent\">,\r\n    mxClient: MatrixClient,\r\n    eventRelation?: IEventRelation,\r\n): boolean {\r\n    // Logic in this function follows that of `SendMessageComposer.onPaste`\r\n    const { room, timelineRenderingType, replyToEvent } = roomContext;\r\n\r\n    function handleError(error: unknown): void {\r\n        if (error instanceof Error) {\r\n            console.log(error.message);\r\n        } else if (typeof error === \"string\") {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    if (event.type !== \"paste\" || data === null || room === undefined) {\r\n        return false;\r\n    }\r\n\r\n    // Prioritize text on the clipboard over files if RTF is present as Office on macOS puts a bitmap\r\n    // in the clipboard as well as the content being copied. Modern versions of Office seem to not do this anymore.\r\n    // We check text/rtf instead of text/plain as when copy+pasting a file from Finder or Gnome Image Viewer\r\n    // it puts the filename in as text/plain which we want to ignore.\r\n    if (data.files.length && !data.types.includes(\"text/rtf\")) {\r\n        ContentMessages.sharedInstance()\r\n            .sendContentListToRoom(Array.from(data.files), room.roomId, eventRelation, mxClient, timelineRenderingType)\r\n            .catch(handleError);\r\n        return true;\r\n    }\r\n\r\n    // Safari `Insert from iPhone or iPad`\r\n    // data.getData(\"text/html\") returns a string like: <img src=\"blob:https://...\">\r\n    if (data.types.includes(\"text/html\")) {\r\n        const imgElementStr = data.getData(\"text/html\");\r\n        const parser = new DOMParser();\r\n        const imgDoc = parser.parseFromString(imgElementStr, \"text/html\");\r\n\r\n        if (\r\n            imgDoc.getElementsByTagName(\"img\").length !== 1 ||\r\n            !imgDoc.querySelector(\"img\")?.src.startsWith(\"blob:\") ||\r\n            imgDoc.childNodes.length !== 1\r\n        ) {\r\n            handleError(\"Failed to handle pasted content as Safari inserted content\");\r\n            return false;\r\n        }\r\n        const imgSrc = imgDoc.querySelector(\"img\")!.src;\r\n\r\n        fetch(imgSrc)\r\n            .then((response) => {\r\n                response\r\n                    .blob()\r\n                    .then((imgBlob) => {\r\n                        const type = imgBlob.type;\r\n                        const safetype = getBlobSafeMimeType(type);\r\n                        const ext = type.split(\"/\")[1];\r\n                        const parts = response.url.split(\"/\");\r\n                        const filename = parts[parts.length - 1];\r\n                        const file = new File([imgBlob], filename + \".\" + ext, { type: safetype });\r\n                        ContentMessages.sharedInstance()\r\n                            .sendContentToRoom(file, room.roomId, eventRelation, mxClient, replyToEvent)\r\n                            .catch(handleError);\r\n                    })\r\n                    .catch(handleError);\r\n            })\r\n            .catch(handleError);\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Util to determine if an input event or clipboard event must be handled as a clipboard event.\r\n * Due to https://github.com/vector-im/element-web/issues/25327, certain paste events\r\n * must be listenened for with an onBeforeInput handler and so will be caught as input events.\r\n *\r\n * @param event - the event to test, can be a WysiwygEvent if it comes from the rich text editor, or\r\n * input or clipboard events if from the plain text editor\r\n * @returns - true if event should be handled as a clipboard event\r\n */\r\nexport function isEventToHandleAsClipboardEvent(\r\n    event: WysiwygEvent | InputEvent | ClipboardEvent,\r\n): event is InputEvent | ClipboardEvent {\r\n    const isInputEventForClipboard =\r\n        event instanceof InputEvent && event.inputType === \"insertFromPaste\" && isNotNull(event.dataTransfer);\r\n    const isClipboardEvent = event instanceof ClipboardEvent;\r\n\r\n    return isClipboardEvent || isInputEventForClipboard;\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { EventStatus, type MatrixClient } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport { type IRoomState } from \"../../../../structures/RoomView\";\r\nimport dis from \"../../../../../dispatcher/dispatcher\";\r\nimport { Action } from \"../../../../../dispatcher/actions\";\r\nimport type EditorStateTransfer from \"../../../../../utils/EditorStateTransfer\";\r\n\r\nexport function endEditing(roomContext: Pick<IRoomState, \"timelineRenderingType\">): void {\r\n    // todo local storage\r\n    // localStorage.removeItem(this.editorRoomKey);\r\n    // localStorage.removeItem(this.editorStateKey);\r\n\r\n    // close the event editing and focus composer\r\n    dis.dispatch({\r\n        action: Action.EditEvent,\r\n        event: null,\r\n        timelineRenderingType: roomContext.timelineRenderingType,\r\n    });\r\n    dis.dispatch({\r\n        action: Action.FocusSendMessageComposer,\r\n        context: roomContext.timelineRenderingType,\r\n    });\r\n}\r\n\r\nexport function cancelPreviousPendingEdit(mxClient: MatrixClient, editorStateTransfer: EditorStateTransfer): void {\r\n    const originalEvent = editorStateTransfer.getEvent();\r\n    const previousEdit = originalEvent.replacingEvent();\r\n    if (previousEdit && (previousEdit.status === EventStatus.QUEUED || previousEdit.status === EventStatus.NOT_SENT)) {\r\n        mxClient.cancelPendingEvent(previousEdit);\r\n    }\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type SubSelection } from \"../types\";\r\n\r\nexport function setSelection(selection: SubSelection): Promise<void> {\r\n    if (selection.anchorNode && selection.focusNode) {\r\n        const range = new Range();\r\n\r\n        if (selection.isForward) {\r\n            range.setStart(selection.anchorNode, selection.anchorOffset);\r\n            range.setEnd(selection.focusNode, selection.focusOffset);\r\n        } else {\r\n            range.setStart(selection.focusNode, selection.focusOffset);\r\n            range.setEnd(selection.anchorNode, selection.anchorOffset);\r\n        }\r\n        document.getSelection()?.removeAllRanges();\r\n        document.getSelection()?.addRange(range);\r\n    }\r\n\r\n    // Waiting for the next loop to ensure that the selection is effective\r\n    return new Promise((resolve) => setTimeout(resolve, 0));\r\n}\r\n\r\nexport function isSelectionEmpty(): boolean {\r\n    const selection = document.getSelection();\r\n    return Boolean(selection?.isCollapsed);\r\n}\r\n\r\nexport function isCaretAtStart(editor: HTMLElement): boolean {\r\n    const selection = document.getSelection();\r\n\r\n    // No selection or the caret is not at the beginning of the selected element\r\n    if (!selection) {\r\n        return false;\r\n    }\r\n\r\n    // When we are pressing keyboard up in an empty main composer, the selection is on the editor with an anchorOffset at O or 1 (yes, this is strange)\r\n    const isOnFirstElement = selection.anchorNode === editor && selection.anchorOffset <= 1;\r\n    if (isOnFirstElement) {\r\n        return true;\r\n    }\r\n\r\n    // In case of nested html elements (list, code blocks), we are going through all the first child\r\n    let child = editor.firstChild;\r\n    do {\r\n        if (child === selection.anchorNode) {\r\n            return selection.anchorOffset === 0;\r\n        }\r\n    } while ((child = child?.firstChild || null));\r\n\r\n    return false;\r\n}\r\n\r\nexport function isCaretAtEnd(editor: HTMLElement): boolean {\r\n    const selection = document.getSelection();\r\n\r\n    if (!selection) {\r\n        return false;\r\n    }\r\n\r\n    // When we are cycling across all the timeline message with the keyboard\r\n    // The caret is on the last text element but focusNode and anchorNode refers to the editor div\r\n    // In this case, the focusOffset & anchorOffset match the index + 1 of the selected text\r\n    const isOnLastElement = selection.focusNode === editor && selection.focusOffset === editor.childNodes?.length;\r\n    if (isOnLastElement) {\r\n        return true;\r\n    }\r\n\r\n    // In case of nested html elements (list, code blocks), we are going through all the last child\r\n    // The last child of the editor is always a <br> tag, we skip it\r\n    let child: ChildNode | null = editor.childNodes.item(editor.childNodes.length - 2);\r\n    do {\r\n        if (child === selection.focusNode) {\r\n            // Checking that the cursor is at end of the selected text\r\n            return selection.focusOffset === child.textContent?.length;\r\n        }\r\n    } while ((child = child.lastChild));\r\n\r\n    return false;\r\n}\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 Šimon Brandner <simon.bra.ag@gmail.com>\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { type JSX } from \"react\";\r\n\r\nimport { ALTERNATE_KEY_NAME, KEY_ICON } from \"../../../accessibility/KeyboardShortcuts\";\r\nimport { type KeyCombo } from \"../../../KeyBindingsManager\";\r\nimport { IS_MAC, Key } from \"../../../Keyboard\";\r\nimport { _t } from \"../../../languageHandler\";\r\n\r\ninterface IKeyboardKeyProps {\r\n    name: string;\r\n    last?: boolean;\r\n}\r\n\r\nexport const KeyboardKey: React.FC<IKeyboardKeyProps> = ({ name, last }) => {\r\n    const icon = KEY_ICON[name];\r\n    const alternateName = ALTERNATE_KEY_NAME[name];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <kbd> {icon || (alternateName && _t(alternateName)) || name} </kbd>\r\n            {!last && \"+\"}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IKeyboardShortcutProps {\r\n    value: KeyCombo;\r\n    className?: string;\r\n}\r\n\r\nexport const KeyboardShortcut: React.FC<IKeyboardShortcutProps> = ({ value, className = \"mx_KeyboardShortcut\" }) => {\r\n    if (!value) return null;\r\n\r\n    const modifiersElement: JSX.Element[] = [];\r\n    if (value.ctrlOrCmdKey) {\r\n        modifiersElement.push(<KeyboardKey key=\"ctrlOrCmdKey\" name={IS_MAC ? Key.META : Key.CONTROL} />);\r\n    } else if (value.ctrlKey) {\r\n        modifiersElement.push(<KeyboardKey key=\"ctrlKey\" name={Key.CONTROL} />);\r\n    } else if (value.metaKey) {\r\n        modifiersElement.push(<KeyboardKey key=\"metaKey\" name={Key.META} />);\r\n    }\r\n    if (value.altKey) {\r\n        modifiersElement.push(<KeyboardKey key=\"altKey\" name={Key.ALT} />);\r\n    }\r\n    if (value.shiftKey) {\r\n        modifiersElement.push(<KeyboardKey key=\"shiftKey\" name={Key.SHIFT} />);\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            {modifiersElement}\r\n            <KeyboardKey name={value.key} last />\r\n        </div>\r\n    );\r\n};\r\n"],"names":["getDefaultContextValue","defaultValue","_objectSpread","selection","anchorNode","anchorOffset","focusNode","focusOffset","isForward","ComposerContext","createContext","useComposerContext","useContext","displayName","setSelectionContext","composerContext","document","getSelection","range","getRangeAt","startContainer","startOffset","Editor","memo","disabled","placeholder","leftComponent","rightComponent","ref","isExpanded","breakingPoint","setIsExpanded","useState","useEffect","current","editor","resizeObserver","ResizeObserver","entries","requestAnimationFrame","_entries$","height","contentBoxSize","blockSize","observe","unobserve","useIsExpanded","onFocus","onBlur","onInput","isFocused","focusProps","useFocus","onSelectionChange","addEventListener","removeEventListener","useCallback","useSelection","React","className","classNames","mx_WysiwygComposer_Editor_content_placeholder","Boolean","style","contentEditable","role","dir","getRoomFromCompletion","completion","client","roomId","completionId","aliasFromCompletion","roomToReturn","getRoom","startsWith","getRooms","find","r","getCanonicalAlias","getAltAliases","includes","getCSSProperties","url","initialLetter","id","cssProperties","textColor","Avatar","push","join","getMentionAttributes","room","defaultLetterContent","attributes","Map","type","mentionedMember","getMember","name","userId","defaultAvatarUrl","avatarUrl","_Avatar$getInitialLet","set","_mentionedRoom$roomId2","mentionedRoom","_Avatar$getInitialLet2","_mentionedRoom$roomId","_Avatar$getInitialLet3","WysiwygAutocomplete","suggestion","handleMention","handleCommand","handleAtRoomMention","useScopedRoomContext","useMatrixClientContext","autoCompleteQuery","keyChar","text","buildQuery","logger","log","Autocomplete","query","onConfirm","undefined","trim","href","_getRoomFromCompletio","getMentionDisplayText","start","end","BoldIcon","props","xmlns","width","fill","viewBox","children","d","forwardRef","ListBulletedIcon","CodeIcon","IndentDecreaseIcon","IndentIncreaseIcon","InlineCodeIcon","ItalicIcon","ListNumberedIcon","QuoteIcon","StrikethroughIcon","UnderlineIcon","isEmpty","length","LinkModal","composer","isTextEnabled","onFinished","isEditing","hasLinkChanged","setHasLinkChanged","fields","setFields","link","getLink","hasText","isSaveDisabled","BaseDialog","title","_t","hasCancel","onSubmit","async","evt","preventDefault","stopPropagation","Promise","resolve","setTimeout","setSelection","Field","required","autoFocus","label","value","onChange","e","target","onClick","removeLinks","DialogButtons","primaryButton","primaryDisabled","primaryIsSubmit","onCancel","Button","keyCombo","actionState","icon","AccessibleButton","element","mx_FormattingButtons_active","mx_FormattingButtons_Button_hover","mx_FormattingButtons_disabled","caption","KeyboardShortcut","placement","FormattingButtons","actionStates","isInList","unorderedList","orderedList","bold","ctrlOrCmdKey","key","italic","underline","strikeThrough","StrikeThroughIcon","BulletedListIcon","NumberedListIcon","indent","IndentIcon","unindent","UnIndentIcon","quote","inlineCode","codeBlock","CodeBlockIcon","Modal","createDialog","isSelectionEmpty","openLinkModal","LinkIcon","useInputEventProcessor","onSend","autocompleteRef","initialContent","eventRelation","roomContext","mxClient","isCtrlEnterToSend","useSettingValue","event","send","_event$stopPropagatio","_event$preventDefault","call","state","hide","isEventToHandleAsClipboardEvent","data","ClipboardEvent","clipboardData","dataTransfer","handleClipboardEvent","KeyboardEvent","editorStateTransfer","isEditorModified","content","action","getKeyBindingsManager","getMessageComposerAction","isHandledByAutocomplete","handleEventWithAutocomplete","KeyBindingAction","SendMessage","EditPrevMessage","isCaretAtStart","dispatchEditEvent","EditNextMessage","isCaretAtEnd","endEditing","handleKeyboardEvent","inputType","handleInputEvent","foundEvents","_roomContext$liveTime","liveTimelineEvents","liveTimeline","getEvents","getEvent","getRoomId","pendingEvents","getPendingEvents","isInThread","getThread","concat","getEventsFromEditorStateTransfer","_composerContext$even","_roomContext$liveTime2","_roomContext$room","isReplyingToThread","THREAD_RELATION_TYPE","getEventsFromRoom","newEvent","findEditableEvent","events","fromEventId","getId","matrixClient","dis","dispatch","Action","EditEvent","timelineRenderingType","WysiwygComposer","useRef","inputEventProcessor","isAutoReplaceEmojiEnabled","emojiSuggestions","useMemo","enabled","Array","from","EMOTICON_TO_EMOJI","unicode","getEmojiSuggestions","isWysiwygReady","wysiwyg","messageContent","useWysiwyg","useIsFocused","isReady","computedPlaceholder","useSetCursorPosition","isNotNull","_ref$current","handleClick","HTMLAnchorElement","getAttribute","parsedLink","parsePermalink","defaultDispatcher","ViewUser","member","mentions","querySelectorAll","forEach","mention","mentionAtRoom","command","setIsFocused","timeoutIDRef","clearTimeout","window","setCursorPositionAtTheEnd","focusComposer","composerElement","renderingType","timeoutId","_composerElement$curr","focus","_composerElement$curr2","createRange","selectNodeContents","collapse","removeAllRanges","addRange","autocompleteIsOpen","handled","autocompleteAction","getAutocompleteAction","component","countCompletions","ForceCompleteAutocomplete","CompleteAutocomplete","onConfirmCompletion","PrevSelectionInAutocomplete","moveSelection","NextSelectionInAutocomplete","CancelAutocomplete","onEscape","replyToEvent","handleError","error","Error","console","message","files","types","ContentMessages","sharedInstance","sendContentListToRoom","catch","_imgDoc$querySelector","imgElementStr","getData","imgDoc","DOMParser","parseFromString","getElementsByTagName","querySelector","src","childNodes","imgSrc","fetch","then","response","blob","imgBlob","safetype","getBlobSafeMimeType","ext","split","parts","filename","file","File","sendContentToRoom","isInputEventForClipboard","InputEvent","FocusSendMessageComposer","context","cancelPreviousPendingEdit","previousEdit","replacingEvent","status","EventStatus","QUEUED","NOT_SENT","cancelPendingEvent","_document$getSelectio","_document$getSelectio2","Range","setStart","setEnd","isCollapsed","child","firstChild","_child","_editor$childNodes","item","_child$textContent","textContent","lastChild","KeyboardKey","last","KEY_ICON","alternateName","ALTERNATE_KEY_NAME","modifiersElement","IS_MAC","Key","META","CONTROL","ctrlKey","metaKey","altKey","ALT","shiftKey","SHIFT"],"sourceRoot":""}