{"version":3,"file":"bundles/14d44db70ea60b163e50/5914.js","mappings":"ghPAEO,MAAMA,GAAM,EACNC,GAAQ,EACRC,GAAW,EACXC,GAAY,EACZC,GAAO,EACP,GAAS,EACTC,GAAY,EACZC,GAAM,EACNC,GAAS,EACTC,GAAQ,EACR,GAAS,GACTC,GAAa,GACbC,GAAY,GACZC,GAAa,GACbC,GAAM,GACNC,GAAM,GACNC,GAAQ,GACRC,GAAY,GACZC,GAAQ,GACRC,GAAoB,GACpBC,GAAqB,GACrBC,GAAkB,GAClBC,GAAmB,GACnBC,GAAmB,GACnBC,GAAoB,GACpBC,GAAU,GC3BjB,GAAM,EAOL,SAASC,GAAQC,GACpB,OAAOA,GAAQ,IAAUA,GAAQ,EACrC,CAKO,SAASC,GAAWD,GACvB,OACID,GAAQC,IACPA,GAAQ,IAAUA,GAAQ,IAC1BA,GAAQ,IAAUA,GAAQ,GAEnC,CAIO,SAASE,GAAkBF,GAC9B,OAAOA,GAAQ,IAAUA,GAAQ,EACrC,CA2BO,SAASG,GAAYH,GACxB,OAlBG,SAAkBA,GACrB,OAAOE,GAAkBF,IAPtB,SAA2BA,GAC9B,OAAOA,GAAQ,IAAUA,GAAQ,GACrC,CAKsCI,CAAkBJ,EACxD,CAgBWK,CAASL,IAPb,SAAoBA,GACvB,OAAOA,GAAQ,GACnB,CAK6BM,CAAWN,IAAkB,KAATA,CACjD,CAIO,SAASO,GAAOP,GACnB,OAAOG,GAAYH,IAASD,GAAQC,IAAkB,KAATA,CACjD,CAKO,SAASQ,GAAeR,GAC3B,OACKA,GAAQ,GAAUA,GAAQ,GACjB,KAATA,GACAA,GAAQ,IAAUA,GAAQ,IACjB,MAATA,CAET,CAMO,SAASS,GAAUT,GACtB,OAAgB,KAATA,GAA4B,KAATA,GAA4B,KAATA,CACjD,CAIO,SAASU,GAAaV,GACzB,OAAOS,GAAUT,IAAkB,KAATA,GAA4B,IAATA,CACjD,CAGO,SAASW,GAAcC,EAAOC,GAEjC,OAAc,KAAVD,KAKAH,GAAUI,IAAWA,IAAW,GAMxC,CAGO,SAASC,GAAkBF,EAAOC,EAAQE,GAI7C,OAAc,KAAVH,EAIIT,GAAYU,IACD,KAAXA,GACAF,GAAcE,EAAQE,KAK1BZ,GAAYS,IAMF,KAAVA,GAEOD,GAAcC,EAAOC,EAMpC,CAGO,SAASG,GAAcJ,EAAOC,EAAQE,GAKzC,OAAc,KAAVH,GAA8B,KAAVA,EAEhBb,GAAQc,GACD,EAMO,KAAXA,GAAqBd,GAAQgB,GAAS,EAAI,EAIvC,KAAVH,EAEOb,GAAQc,GAAU,EAAI,EAI7Bd,GAAQa,GAED,EAKJ,CACX,CAOO,SAASK,GAAMjB,GAElB,OAAa,QAATA,GAKS,QAATA,EAJO,EAQJ,CACX,CAIA,MAAMkB,GAAW,IAAIC,MAAM,KAEdC,GAAqB,IAKlC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,GAASI,OAAQD,IACjCH,GAASG,IACLX,GAAaW,GAAMD,GACnBrB,GAAQsB,IAPa,MAQrBlB,GAAYkB,IAPa,KAQzBb,GAAea,IAPa,KAQ5BA,GAZmB,IAepB,SAASE,GAAiBvB,GAC7B,OAAOA,EAAO,IAAOkB,GAASlB,GAbD,GAcjC,CC1MA,SAASwB,GAAYC,EAAQC,GACzB,OAAOA,EAASD,EAAOH,OAASG,EAAOE,WAAWD,GAAU,CAChE,CAEO,SAASE,GAAiBH,EAAQC,EAAQ1B,GAC7C,OAAa,KAATA,GAA4D,KAApCwB,GAAYC,EAAQC,EAAS,GAC9C,EAGJ,CACX,CAEO,SAASG,GAAQC,EAASJ,EAAQK,GACrC,IAAI/B,EAAO8B,EAAQH,WAAWD,GAO9B,OAJIxB,GAAkBF,KAClBA,GAAc,IAGXA,IAAS+B,CACpB,CAEO,SAASC,GAAOF,EAASG,EAAOC,EAAKC,GACxC,GAAID,EAAMD,IAAUE,EAAab,OAC7B,OAAO,EAGX,GAAIW,EAAQ,GAAKC,EAAMJ,EAAQR,OAC3B,OAAO,EAGX,IAAK,IAAID,EAAIY,EAAOZ,EAAIa,EAAKb,IAAK,CAC9B,MAAMU,EAAgBI,EAAaR,WAAWN,EAAIY,GAClD,IAAIG,EAAWN,EAAQH,WAAWN,GAOlC,GAJInB,GAAkBkC,KAClBA,GAAsB,IAGtBA,IAAaL,EACb,OAAO,CAEf,CAEA,OAAO,CACX,CAYO,SAASM,GAAkBZ,EAAQC,GACtC,KAAOA,EAASD,EAAOH,QACdZ,GAAae,EAAOE,WAAWD,IADTA,KAM/B,OAAOA,CACX,CAEO,SAASY,GAAqBb,EAAQC,GACzC,KAAOA,EAASD,EAAOH,QACdvB,GAAQ0B,EAAOE,WAAWD,IADJA,KAM/B,OAAOA,CACX,CAGO,SAASa,GAAed,EAAQC,GAMnC,GAAIzB,GAAWuB,GAAYC,GAH3BC,GAAU,GAGkC,IAAK,CAG7C,IAAK,MAAMc,EAAYC,KAAKC,IAAIjB,EAAOH,OAAQI,EAAS,GAAIA,EAASc,GAC5DvC,GAAWuB,GAAYC,EAAQC,IADwCA,KAOhF,MAAM1B,EAAOwB,GAAYC,EAAQC,GAC7BhB,GAAaV,KACb0B,GAAUE,GAAiBH,EAAQC,EAAQ1B,GAEnD,CAEA,OAAO0B,CACX,CAMO,SAASiB,GAAYlB,EAAQC,GAGhC,KAAOA,EAASD,EAAOH,OAAQI,IAAU,CACrC,MAAM1B,EAAOyB,EAAOE,WAAWD,GAG/B,IAAInB,GAAOP,GAAX,CAMA,IAAIW,GAAcX,EAAMwB,GAAYC,EAAQC,EAAS,IAQrD,MANIA,EAASa,GAAed,EAAQC,GAAU,CAL9C,CAYJ,CAEA,OAAOA,CACX,CAGO,SAASkB,GAAcnB,EAAQC,GAClC,IAAI1B,EAAOyB,EAAOE,WAAWD,GA8B7B,GA1Ba,KAAT1B,GAA4B,KAATA,IACnBA,EAAOyB,EAAOE,WAAWD,GAAU,IAInC3B,GAAQC,KACR0B,EAASY,GAAqBb,EAAQC,EAAS,GAC/C1B,EAAOyB,EAAOE,WAAWD,IAIhB,KAAT1B,GAAmBD,GAAQ0B,EAAOE,WAAWD,EAAS,MAUtDA,EAASY,GAAqBb,EAP9BC,GAAU,IAYVG,GAAQJ,EAAQC,EAAQ,KAAc,CACtC,IAAImB,EAAO,EACX7C,EAAOyB,EAAOE,WAAWD,EAAS,GAGrB,KAAT1B,GAA4B,KAATA,IACnB6C,EAAO,EACP7C,EAAOyB,EAAOE,WAAWD,EAAS,IAIlC3B,GAAQC,KAQR0B,EAASY,GAAqBb,EAAQC,EAAS,EAAImB,EAAO,GAElE,CAEA,OAAOnB,CACX,CAKO,SAASoB,GAAsBrB,EAAQC,GAE1C,KAAOA,EAASD,EAAOH,OAAQI,IAAU,CACrC,MAAM1B,EAAOyB,EAAOE,WAAWD,GAI/B,GAAa,KAAT1B,EAAiB,CAEjB0B,IACA,KACJ,CAEIf,GAAcX,EAAMwB,GAAYC,EAAQC,EAAS,MAKjDA,EAASa,GAAed,EAAQC,GAExC,CAEA,OAAOA,CACX,CAIO,SAASqB,GAAcC,GAE1B,GAAuB,IAAnBA,EAAQ1B,SAAiBrB,GAAW+C,EAAQrB,WAAW,IACvD,OAAOqB,EAAQ,GAInB,IAAIhD,EAAOiD,SAASD,EAAS,IAY7B,OATc,IAAThD,GACAA,GAAQ,OAAUA,GAAQ,OAC1BA,EAAO,WAGRA,EAAO,OAIJkD,OAAOC,cAAcnD,EAChC,CC7PA,UACI,YACA,cACA,iBACA,mBACA,aACA,eACA,mBACA,YACA,gBACA,cACA,eACA,mBACA,kBACA,mBACA,YACA,YACA,cACA,kBACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,iBCxBG,SAASoD,GAAYC,EAAS,KAAMC,GACvC,OAAe,OAAXD,GAAmBA,EAAO/B,OAASgC,EAC5B,IAAIC,YAAYd,KAAKe,IAAIF,EAAO,KAJ9B,QAOND,CACX,CCDA,SAASI,GAAuBC,GAC5B,MAAMjC,EAASiC,EAAKjC,OACdkC,EAAelC,EAAOH,OACtBsC,EAAcnC,EAAOH,OAAS,EAAIL,GAAMQ,EAAOE,WAAW,IAAM,EAChEkC,EAAQT,GAAYM,EAAKG,MAAOF,GAChCG,EAAUV,GAAYM,EAAKI,QAASH,GAC1C,IAAII,EAAOL,EAAKM,UACZC,EAASP,EAAKQ,YAElB,IAAK,IAAI7C,EAAIuC,EAAavC,EAAIsC,EAActC,IAAK,CAC7C,MAAMrB,EAAOyB,EAAOE,WAAWN,GAE/BwC,EAAMxC,GAAK0C,EACXD,EAAQzC,GAAK4C,IAjBX,KAmBEjE,GAjBF,KAiBgBA,GAlBhB,KAkB8BA,IAjB9B,KAkBMA,GAAcqB,EAAI,EAAIsC,GApB5B,KAoB4ClC,EAAOE,WAAWN,EAAI,KAC5DA,IACAwC,EAAMxC,GAAK0C,EACXD,EAAQzC,GAAK4C,GAGjBF,IACAE,EAAS,EAEjB,CAEAJ,EAAMF,GAAgBI,EACtBD,EAAQH,GAAgBM,EAExBP,EAAKG,MAAQA,EACbH,EAAKI,QAAUA,EACfJ,EAAKS,UAAW,CACpB,CAEO,MAAMC,GACT,WAAAC,CAAY5C,EAAQmC,EAAaI,EAAWE,GACxCI,KAAKC,UAAU9C,EAAQmC,EAAaI,EAAWE,GAC/CI,KAAKT,MAAQ,KACbS,KAAKR,QAAU,IACnB,CACA,SAAAS,CAAU9C,EAAS,GAAImC,EAAc,EAAGI,EAAY,EAAGE,EAAc,GACjEI,KAAK7C,OAASA,EACd6C,KAAKV,YAAcA,EACnBU,KAAKN,UAAYA,EACjBM,KAAKJ,YAAcA,EACnBI,KAAKH,UAAW,CACpB,CACA,WAAAK,CAAY9C,EAAQ+C,GAKhB,OAJKH,KAAKH,UACNV,GAAuBa,MAGpB,CACH7C,OAAQgD,EACR/C,OAAQ4C,KAAKV,YAAclC,EAC3BqC,KAAMO,KAAKT,MAAMnC,GACjBuC,OAAQK,KAAKR,QAAQpC,GAE7B,CACA,gBAAAgD,CAAiBzC,EAAOC,EAAKuC,GAKzB,OAJKH,KAAKH,UACNV,GAAuBa,MAGpB,CACH7C,OAAQgD,EACRxC,MAAO,CACHP,OAAQ4C,KAAKV,YAAc3B,EAC3B8B,KAAMO,KAAKT,MAAM5B,GACjBgC,OAAQK,KAAKR,QAAQ7B,IAEzBC,IAAK,CACDR,OAAQ4C,KAAKV,YAAc1B,EAC3B6B,KAAMO,KAAKT,MAAM3B,GACjB+B,OAAQK,KAAKR,QAAQ5B,IAGjC,ECpEJ,MAAMyC,GAAc,SACdC,GAAa,GACbC,GAAc,IAAIC,WAAW,IAMnC,SAASC,GAAmBC,GACxB,OAAkC,IAA3BH,GAAYG,EACvB,CAPAH,GAAYpG,IAAiBkB,GAC7BkF,GAAYnF,IAAmBC,GAC/BkF,GAAYrF,IAAqBC,GACjCoF,GAAYjF,IAAoBC,GAMzB,MAAMoF,GACT,WAAAZ,CAAY5C,EAAQyD,GAChBZ,KAAKC,UAAU9C,EAAQyD,EAC3B,CACA,KAAAC,GACIb,KAAKc,KAAM,EACXd,KAAKe,YAAc,EACnBf,KAAKU,UAAY,EACjBV,KAAKgB,WAAahB,KAAKiB,gBACvBjB,KAAKkB,SAAWlB,KAAKiB,eACzB,CACA,SAAAhB,CAAU9C,EAAS,GAAIyD,EAAW,QAG9B,MAAMvB,GAFNlC,EAASyB,OAAOzB,GAAU,KAEEH,OACtBmE,EAAgBrC,GAAYkB,KAAKmB,cAAehE,EAAOH,OAAS,GAChEoE,EAAUtC,GAAYkB,KAAKoB,QAASjE,EAAOH,OAAS,GAC1D,IAAIqE,EAAa,EACbJ,GAAmB,EACnBK,EAAmB,EACnBC,EAAepE,EAAOH,OAG1BgD,KAAKmB,cAAgB,KACrBnB,KAAKoB,QAAU,KACfA,EAAQI,KAAK,GAEbZ,EAASzD,GAAQ,CAACsE,EAAM9D,EAAOC,KAC3B,MAAM8D,EAAQL,IAYd,GATAF,EAAcO,GAAUD,GAAQnB,GAAc1C,GAErB,IAArBqD,IACAA,EAAkBtD,GAItByD,EAAQM,GAASH,EAEbE,IAASH,EAAkB,CAC3B,MAAMK,EAAmBP,EAAQG,GAGjCH,EAAQG,GAAgBG,EAGxBH,EAAeI,EACfL,EAAmBf,GAAYY,EAAcQ,IAAqBrB,GACtE,MAAWG,GAAmBgB,KAE1BF,EAAeG,EACfJ,EAAmBf,GAAYkB,GACnC,IAIJN,EAAcE,GAAepH,IAAOqG,GAAcjB,EAClD+B,EAAQC,GAAcA,EAYtB,IAAK,IAAItE,EAAI,EAAGA,EAAIsE,EAAYtE,IAAK,CACjC,MAAMwE,EAAeH,EAAQrE,GAE7B,GAAIwE,GAAgBxE,EAAG,CACnB,MAAM6E,EAAaR,EAAQG,GAEvBK,IAAe7E,IACfqE,EAAQrE,GAAK6E,EAErB,MAAWL,EAAeF,IACtBD,EAAQrE,GAAKsE,EAErB,CAIArB,KAAK7C,OAASA,EACd6C,KAAKiB,iBAAuC,IAArBA,EAAyB,EAAIA,EACpDjB,KAAKqB,WAAaA,EAClBrB,KAAKmB,cAAgBA,EACrBnB,KAAKoB,QAAUA,EAEfpB,KAAKa,QACLb,KAAK6B,MACT,CAEA,UAAAC,CAAW1E,GAGP,OAFAA,GAAU4C,KAAKe,YAEFf,KAAKqB,WACPrB,KAAKmB,cAAc/D,IAAWkD,GAGlCrG,EACX,CACA,eAAA8H,CAAgBC,GACZ,IAAK,IAAI5E,EAAS4C,KAAKe,WAAY3D,EAAS4C,KAAKqB,WAAYjE,IAAU,CACnE,MAAMsD,EAAYV,KAAKmB,cAAc/D,IAAWkD,GAEhD,GAAII,IAAc9F,IAAc8F,IAAclF,IAC5B,GAAVwG,IACA,OAAOtB,CAGnB,CAEA,OAAOzG,EACX,CACA,YAAAgI,CAAa7E,GAGT,OAFAA,GAAU4C,KAAKe,YAEFf,KAAKqB,WACPrB,KAAKmB,cAAc/D,EAAS,GAAKiD,GAGrCL,KAAK7C,OAAOH,MACvB,CACA,iBAAAkF,CAAkBF,GACd,IAAK,IAAI5E,EAAS4C,KAAKe,WAAY3D,EAAS4C,KAAKqB,WAAYjE,IAAU,CACnE,MAAMsD,EAAYV,KAAKmB,cAAc/D,IAAWkD,GAEhD,GAAII,IAAc9F,IAAc8F,IAAclF,IAC5B,GAAVwG,IACA,OAAO5E,EAAS4C,KAAKe,UAGjC,CAEA,OAAO9G,EACX,CACA,WAAAkI,CAAY/E,EAAQS,GAGhB,OAFAT,GAAU4C,KAAKe,YAEFf,KAAKqB,YACP3D,GACHsC,KAAK7C,OACL6C,KAAKmB,cAAc/D,EAAS,GAAKiD,GACjCL,KAAKmB,cAAc/D,GAAUiD,GAC7BxC,EAKZ,CACA,aAAAuE,CAAcrB,GACV,OAAIA,IAAef,KAAKe,WACbf,KAAKgB,WAGZD,EAAa,EACNA,EAAaf,KAAKqB,WACnBrB,KAAKmB,cAAcJ,EAAa,GAAKV,GACrCL,KAAKmB,cAAcnB,KAAKqB,YAAchB,GAGzCL,KAAKiB,eAChB,CACA,cAAAoB,CAAe1E,GACX,OAAOqC,KAAK7C,OAAOmF,UAAU3E,EAAOqC,KAAKgB,WAC7C,CAEA,aAAAuB,CAAcC,GACV,OAAOxC,KAAKoB,QAAQpB,KAAKe,YAAcyB,CAE3C,CACA,OAAAC,CAAQ/G,EAAM0B,GACV,OAAIA,EAEI4C,KAAK8B,WAAW1E,KAAY3C,IAC5BuF,KAAK7C,OAAOE,WAAW2C,KAAKiC,aAAa7E,MAAa1B,EAK1DsE,KAAKU,YAAcjG,IACnBuF,KAAK7C,OAAOE,WAAW2C,KAAKgB,cAAgBtF,CAEpD,CAEA,IAAAgH,CAAKrB,GACD,IAAIQ,EAAO7B,KAAKe,WAAaM,EAEzBQ,EAAO7B,KAAKqB,YACZrB,KAAKe,WAAac,EAClB7B,KAAKgB,WAAahB,KAAKmB,cAAcU,EAAO,GAAKxB,GACjDwB,EAAO7B,KAAKmB,cAAcU,GAC1B7B,KAAKU,UAAYmB,GAAQvB,GACzBN,KAAKkB,SAAWW,EAAOxB,KAEvBL,KAAKe,WAAaf,KAAKqB,WACvBrB,KAAK6B,OAEb,CACA,IAAAA,GACI,IAAIA,EAAO7B,KAAKe,WAAa,EAEzBc,EAAO7B,KAAKqB,YACZrB,KAAKe,WAAac,EAClB7B,KAAKgB,WAAahB,KAAKkB,SACvBW,EAAO7B,KAAKmB,cAAcU,GAC1B7B,KAAKU,UAAYmB,GAAQvB,GACzBN,KAAKkB,SAAWW,EAAOxB,KAEvBL,KAAKc,KAAM,EACXd,KAAKe,WAAaf,KAAKqB,WACvBrB,KAAKU,UAAYzG,GACjB+F,KAAKgB,WAAahB,KAAKkB,SAAWlB,KAAK7C,OAAOH,OAEtD,CACA,MAAA2F,GACI,KAAO3C,KAAKU,YAAc9F,IAAcoF,KAAKU,YAAclF,IACvDwE,KAAK6B,MAEb,CACA,iBAAAe,CAAkBC,EAAYC,GAC1B,IAAIC,EAASF,EACTjB,EAAa,EACbxE,EAAS,EAEb4F,EACA,KAAOD,EAAS/C,KAAKqB,aACjBO,EAAa5B,KAAKoB,QAAQ2B,KAGtBnB,EAAaiB,IAJYE,IAW7B,OAHA3F,EAAS2F,EAAS,EAAI/C,KAAKmB,cAAc4B,EAAS,GAAK1C,GAAcL,KAAKiB,gBAGlE6B,EAAY9C,KAAK7C,OAAOE,WAAWD,KACvC,KAAK,EACD,MAAM4F,EAEV,KAAK,EACDD,IACA,MAAMC,EAEV,QAEQvC,GAAmBT,KAAKmB,cAAc4B,IAAWzC,MACjDyC,EAASnB,GAKzB5B,KAAK0C,KAAKK,EAAS/C,KAAKe,WAC5B,CAEA,YAAAkC,CAAaC,GACT,IAAK,IAAInG,EAAI,EAAGK,EAAS4C,KAAKiB,gBAAiBlE,EAAIiD,KAAKqB,WAAYtE,IAAK,CACrE,MAAMY,EAAQP,EACR+F,EAAOnD,KAAKmB,cAAcpE,GAC1Ba,EAAMuF,EAAO9C,GAGnBjD,EAASQ,EAETsF,EAJaC,GAAQ7C,GAIZ3C,EAAOC,EAAKb,EACzB,CACJ,CACA,IAAAqG,GACI,MAAMC,EAAS,IAAIxG,MAAMmD,KAAKqB,YAW9B,OATArB,KAAKiD,cAAa,CAACxB,EAAM9D,EAAOC,EAAK8D,KACjC2B,EAAO3B,GAAS,CACZM,IAAKN,EACLD,KAAM,GAAWA,GACjB6B,MAAOtD,KAAK7C,OAAOmF,UAAU3E,EAAOC,GACpCwD,QAASpB,KAAKoB,QAAQM,GACzB,IAGE2B,CACX,EClSG,SAASzC,GAASzD,EAAQoG,GAC7B,SAASrG,EAAYE,GACjB,OAAOA,EAASiC,EAAelC,EAAOE,WAAWD,GAAU,CAC/D,CAGA,SAASoG,IAKL,OAHApG,EAASkB,GAAcnB,EAAQC,GAG3BZ,GAAkBU,EAAYE,GAASF,EAAYE,EAAS,GAAIF,EAAYE,EAAS,KAIrFqE,EAAO,QACPrE,EAASiB,GAAYlB,EAAQC,KAKL,KAAxBF,EAAYE,IAEZqE,EAAO,QACPrE,UAKJqE,EAAO,GACX,CAGA,SAASgC,IACL,MAAMC,EAAkBtG,EAOxB,OAJAA,EAASiB,GAAYlB,EAAQC,GAIzBM,GAAOP,EAAQuG,EAAiBtG,EAAQ,QAAkC,KAAxBF,EAAYE,IAE9DA,EAASW,GAAkBZ,EAAQC,EAAS,GAKhB,KAAxBF,EAAYE,IACY,KAAxBF,EAAYE,IACZqE,EAAO,QACPrE,EAASsG,EAAkB,SA2FvC,WAQI,IANAjC,EAAO,GAGPrE,EAASW,GAAkBZ,EAAQC,GAG5BA,EAASD,EAAOH,OAAQI,IAAU,CACrC,MAAM1B,EAAOyB,EAAOE,WAAWD,GAE/B,OAAQH,GAAiBvB,IAErB,KAAK,GAGD,YADA0B,IASJ,KAAKN,GAOD,OALAM,EAASW,GAAkBZ,EAAQC,GAKP,KAAxBF,EAAYE,IAAsBA,GAAUD,EAAOH,YAC/CI,EAASD,EAAOH,QAChBI,MAORA,EAASoB,GAAsBrB,EAAQC,QACvCqE,EAAO,KAOX,KAAK,GACL,KAAK,GACL,KAAK,GACL,KNnBoB,IMwBhB,OAFArE,EAASoB,GAAsBrB,EAAQC,QACvCqE,EAAO,IAIX,KAAK,GAGD,GAAIpF,GAAcX,EAAMwB,EAAYE,EAAS,IAAK,CAC9CA,EAASa,GAAed,EAAQC,GAAU,EAC1C,KACJ,CAMA,OAFAA,EAASoB,GAAsBrB,EAAQC,QACvCqE,EAAO,IAMnB,CACJ,CAnKQkC,IAMwB,KAAxBzG,EAAYE,IACZqE,EAAO,QACPrE,UAKJqE,EAAO,GACX,CAGA,SAASmC,EAAmBC,GAYxB,IARKA,IACDA,EAAkB3G,EAAYE,MAIlCqE,EAAO,GAGArE,EAASD,EAAOH,OAAQI,IAAU,CACrC,MAAM1B,EAAOyB,EAAOE,WAAWD,GAE/B,OAAQH,GAAiBvB,IAErB,KAAKmI,EAGD,YADAzG,IASJ,KAAKN,GACD,GAAIX,GAAUT,GAKV,OAFA0B,GAAUE,GAAiBH,EAAQC,EAAQ1B,QAC3C+F,EAAO,IAGX,MAGJ,KAAK,GAED,GAAIrE,IAAWD,EAAOH,OAAS,EAC3B,MAGJ,MAAM8G,EAAW5G,EAAYE,EAAS,GAGlCjB,GAAU2H,GACV1G,GAAUE,GAAiBH,EAAQC,EAAS,EAAG0G,GACxCzH,GAAcX,EAAMoI,KAI3B1G,EAASa,GAAed,EAAQC,GAAU,GAO1D,CACJ,CAyFA,MAAMiC,GAFNlC,EAASyB,OAAOzB,GAAU,KAEEH,OAC5B,IAEIyE,EAFA9D,EAAQhB,GAAMO,EAAY,IAC1BE,EAASO,EAKb,KAAOP,EAASiC,GAAc,CAC1B,MAAM3D,EAAOyB,EAAOE,WAAWD,GAE/B,OAAQH,GAAiBvB,IAErB,KAAKoB,GAED2E,EAAO,GACPrE,EAASW,GAAkBZ,EAAQC,EAAS,GAC5C,MAGJ,KAAK,GAEDwG,IACA,MAGJ,KAAK,GAEG3H,GAAOiB,EAAYE,EAAS,KAAOf,GAAca,EAAYE,EAAS,GAAIF,EAAYE,EAAS,KAE/FqE,EAAO,GAQPrE,EAASiB,GAAYlB,EAAQC,EAAS,KAKtCqE,EAAO,GACPrE,KAGJ,MAGJ,KAAK,GAEDwG,IACA,MAGJ,KAAK,GAEDnC,EAAO,GACPrE,IACA,MAGJ,KAAK,GAEDqE,EAAO,GACPrE,IACA,MAGJ,KAAK,GAEGV,GAAchB,EAAMwB,EAAYE,EAAS,GAAIF,EAAYE,EAAS,IAElEoG,KAGA/B,EAAO,GACPrE,KAEJ,MAGJ,KAAK,GAEDqE,EAAO,GACPrE,IACA,MAGJ,KAAK,GAEGV,GAAchB,EAAMwB,EAAYE,EAAS,GAAIF,EAAYE,EAAS,IAClEoG,IAGgC,KAA5BtG,EAAYE,EAAS,IACO,KAA5BF,EAAYE,EAAS,IACrBqE,EAAO,GACPrE,GAAkB,GAGdZ,GAAkBd,EAAMwB,EAAYE,EAAS,GAAIF,EAAYE,EAAS,IAEtEqG,KAGAhC,EAAO,GACPrE,KAIZ,MAGJ,KAAK,GAEGV,GAAchB,EAAMwB,EAAYE,EAAS,GAAIF,EAAYE,EAAS,IAElEoG,KAGA/B,EAAO,GACPrE,KAGJ,MAGJ,KAAK,GAE+B,KAA5BF,EAAYE,EAAS,IAGrBqE,EAAO,GACPrE,EAASD,EAAO4G,QAAQ,KAAM3G,EAAS,GACvCA,GAAqB,IAAZA,EAAgBD,EAAOH,OAASI,EAAS,IAElDqE,EAAO,GACPrE,KAEJ,MAGJ,KAAK,GAEDqE,EAAO,GACPrE,IACA,MAGJ,KAAK,GAEDqE,EAAO,GACPrE,IACA,MAGJ,KAAK,GAE+B,KAA5BF,EAAYE,EAAS,IACO,KAA5BF,EAAYE,EAAS,IACO,KAA5BF,EAAYE,EAAS,IAErBqE,EAAO,GACPrE,GAAkB,IAGlBqE,EAAO,GACPrE,KAGJ,MAGJ,KAAK,GAEGZ,GAAkBU,EAAYE,EAAS,GAAIF,EAAYE,EAAS,GAAIF,EAAYE,EAAS,KAEzFqE,EAAO,GACPrE,EAASiB,GAAYlB,EAAQC,EAAS,KAGtCqE,EAAO,GACPrE,KAGJ,MAGJ,KAAK,GAEDqE,EAAO,GACPrE,IACA,MAGJ,KAAK,GAEGf,GAAcX,EAAMwB,EAAYE,EAAS,IAEzCqG,KAGAhC,EAAO,GACPrE,KAEJ,MAGJ,KAAK,GAEDqE,EAAO,GACPrE,IACA,MAGJ,KAAK,IAEDqE,EAAO,GACPrE,IACA,MAGJ,KAAK,IAEDqE,EAAO,GACPrE,IACA,MAGJ,KN1RiB,IM4RboG,IACA,MAGJ,KN/RqB,IMiSjBC,IACA,MAQJ,QAEIhC,EAAO,GACPrE,IAIRmG,EAAQ9B,EAAM9D,EAAOA,EAAQP,EACjC,CACJ,CCxeA,IAAI4G,GAAkB,KAEf,MAAMC,GACT,iBAAOC,CAAWC,GACd,MAAO,CACHC,KAAM,KACNvC,KAAM,KACNsC,OAER,CAEA,WAAApE,GACIC,KAAKqE,KAAO,KACZrE,KAAKsE,KAAO,KACZtE,KAAK+C,OAAS,IAClB,CACA,UAAAmB,CAAWC,GACP,OAAOF,GAAKC,WAAWC,EAC3B,CAGA,cAAAI,CAAeH,EAAMvC,GACjB,IAAIkB,EAkBJ,OAhBwB,OAApBiB,IACAjB,EAASiB,GACTA,GAAkBA,GAAgBjB,OAClCA,EAAOqB,KAAOA,EACdrB,EAAOlB,KAAOA,EACdkB,EAAOA,OAAS/C,KAAK+C,QAErBA,EAAS,CACLqB,OACAvC,OACAkB,OAAQ/C,KAAK+C,QAIrB/C,KAAK+C,OAASA,EAEPA,CACX,CACA,aAAAyB,GACI,MAAM,OAAEzB,GAAW/C,KAEnBA,KAAK+C,OAASA,EAAOA,OACrBA,EAAOqB,KAAO,KACdrB,EAAOlB,KAAO,KACdkB,EAAOA,OAASiB,GAChBA,GAAkBjB,CACtB,CACA,aAAA0B,CAAcC,EAASC,EAASC,EAASC,GACrC,IAAI,OAAE9B,GAAW/C,KAEjB,KAAkB,OAAX+C,GACCA,EAAOqB,OAASM,IAChB3B,EAAOqB,KAAOO,GAGd5B,EAAOlB,OAAS+C,IAChB7B,EAAOlB,KAAOgD,GAGlB9B,EAASA,EAAOA,MAExB,CACA,EAAE+B,OAAOC,YACL,IAAK,IAAIhC,EAAS/C,KAAKqE,KAAiB,OAAXtB,EAAiBA,EAASA,EAAOlB,WACpDkB,EAAOoB,IAErB,CAGA,QAAInF,GACA,IAAIA,EAAO,EAEX,IAAK,IAAI+D,EAAS/C,KAAKqE,KAAiB,OAAXtB,EAAiBA,EAASA,EAAOlB,KAC1D7C,IAGJ,OAAOA,CACX,CACA,WAAIgG,GACA,OAAqB,OAAdhF,KAAKqE,IAChB,CACA,SAAI/H,GACA,OAAO0D,KAAKqE,MAAQrE,KAAKqE,KAAKF,IAClC,CACA,QAAIc,GACA,OAAOjF,KAAKsE,MAAQtE,KAAKsE,KAAKH,IAClC,CAGA,SAAAe,CAAUC,GACN,IAAIpC,EAAS,KACb/C,KAAKqE,KAAO,KAEZ,IAAK,IAAIF,KAAQgB,EAAO,CACpB,MAAMhC,EAAOc,GAAKC,WAAWC,GAEd,OAAXpB,EACAA,EAAOlB,KAAOsB,EAEdnD,KAAKqE,KAAOlB,EAGhBA,EAAKiB,KAAOrB,EACZA,EAASI,CACb,CAGA,OADAnD,KAAKsE,KAAOvB,EACL/C,IACX,CACA,OAAAoF,GACI,MAAO,IAAIpF,KACf,CACA,MAAAqF,GACI,MAAO,IAAIrF,KACf,CAGA,OAAAsF,CAAQpC,EAAIqC,EAAUvF,MAElB,MAAM+C,EAAS/C,KAAKuE,eAAe,KAAMvE,KAAKqE,MAE9C,KAAuB,OAAhBtB,EAAOlB,MAAe,CACzB,MAAMsB,EAAOJ,EAAOlB,KACpBkB,EAAOlB,KAAOsB,EAAKtB,KACnBqB,EAAGsC,KAAKD,EAASpC,EAAKgB,KAAMhB,EAAMnD,KACtC,CAGAA,KAAKwE,eACT,CACA,YAAAiB,CAAavC,EAAIqC,EAAUvF,MAEvB,MAAM+C,EAAS/C,KAAKuE,eAAevE,KAAKsE,KAAM,MAE9C,KAAuB,OAAhBvB,EAAOqB,MAAe,CACzB,MAAMjB,EAAOJ,EAAOqB,KACpBrB,EAAOqB,KAAOjB,EAAKiB,KACnBlB,EAAGsC,KAAKD,EAASpC,EAAKgB,KAAMhB,EAAMnD,KACtC,CAGAA,KAAKwE,eACT,CACA,MAAAkB,CAAOxC,EAAIyC,EAAcJ,EAAUvF,MAE/B,IAEImD,EAFAJ,EAAS/C,KAAKuE,eAAe,KAAMvE,KAAKqE,MACxCuB,EAAMD,EAGV,KAAuB,OAAhB5C,EAAOlB,MACVsB,EAAOJ,EAAOlB,KACdkB,EAAOlB,KAAOsB,EAAKtB,KAEnB+D,EAAM1C,EAAGsC,KAAKD,EAASK,EAAKzC,EAAKgB,KAAMhB,EAAMnD,MAMjD,OAFAA,KAAKwE,gBAEEoB,CACX,CACA,WAAAC,CAAY3C,EAAIyC,EAAcJ,EAAUvF,MAEpC,IAEImD,EAFAJ,EAAS/C,KAAKuE,eAAevE,KAAKsE,KAAM,MACxCsB,EAAMD,EAGV,KAAuB,OAAhB5C,EAAOqB,MACVjB,EAAOJ,EAAOqB,KACdrB,EAAOqB,KAAOjB,EAAKiB,KAEnBwB,EAAM1C,EAAGsC,KAAKD,EAASK,EAAKzC,EAAKgB,KAAMhB,EAAMnD,MAMjD,OAFAA,KAAKwE,gBAEEoB,CACX,CACA,IAAAE,CAAK5C,EAAIqC,EAAUvF,MACf,IAAK,IAAI+C,EAAS/C,KAAKqE,KAAiB,OAAXtB,EAAiBA,EAASA,EAAOlB,KAC1D,GAAIqB,EAAGsC,KAAKD,EAASxC,EAAOoB,KAAMpB,EAAQ/C,MACtC,OAAO,EAIf,OAAO,CACX,CACA,GAAA+F,CAAI7C,EAAIqC,EAAUvF,MACd,MAAMgG,EAAS,IAAI/B,GAEnB,IAAK,IAAIlB,EAAS/C,KAAKqE,KAAiB,OAAXtB,EAAiBA,EAASA,EAAOlB,KAC1DmE,EAAOC,WAAW/C,EAAGsC,KAAKD,EAASxC,EAAOoB,KAAMpB,EAAQ/C,OAG5D,OAAOgG,CACX,CACA,MAAAE,CAAOhD,EAAIqC,EAAUvF,MACjB,MAAMgG,EAAS,IAAI/B,GAEnB,IAAK,IAAIlB,EAAS/C,KAAKqE,KAAiB,OAAXtB,EAAiBA,EAASA,EAAOlB,KACtDqB,EAAGsC,KAAKD,EAASxC,EAAOoB,KAAMpB,EAAQ/C,OACtCgG,EAAOC,WAAWlD,EAAOoB,MAIjC,OAAO6B,CACX,CAEA,SAAAG,CAAUxI,EAAOuF,EAAIqC,EAAUvF,MAC3B,GAAc,OAAVrC,EACA,OAIJ,MAAMoF,EAAS/C,KAAKuE,eAAe,KAAM5G,GAEzC,KAAuB,OAAhBoF,EAAOlB,MAAe,CACzB,MAAMsB,EAAOJ,EAAOlB,KAEpB,GADAkB,EAAOlB,KAAOsB,EAAKtB,KACfqB,EAAGsC,KAAKD,EAASpC,EAAKgB,KAAMhB,EAAMnD,MAClC,KAER,CAGAA,KAAKwE,eACT,CACA,SAAA4B,CAAUzI,EAAOuF,EAAIqC,EAAUvF,MAC3B,GAAc,OAAVrC,EACA,OAIJ,MAAMoF,EAAS/C,KAAKuE,eAAe5G,EAAO,MAE1C,KAAuB,OAAhBoF,EAAOqB,MAAe,CACzB,MAAMjB,EAAOJ,EAAOqB,KAEpB,GADArB,EAAOqB,KAAOjB,EAAKiB,KACflB,EAAGsC,KAAKD,EAASpC,EAAKgB,KAAMhB,EAAMnD,MAClC,KAER,CAGAA,KAAKwE,eACT,CAGA,KAAA6B,GACIrG,KAAKqE,KAAO,KACZrE,KAAKsE,KAAO,IAChB,CACA,IAAAgC,GACI,MAAMN,EAAS,IAAI/B,GAEnB,IAAK,IAAIE,KAAQnE,KACbgG,EAAOC,WAAW9B,GAGtB,OAAO6B,CACX,CACA,OAAAO,CAAQpD,GAoBJ,OAhBAnD,KAAKyE,cAAc,KAAMtB,EAAMnD,KAAKqE,KAAMlB,GAGxB,OAAdnD,KAAKqE,MAELrE,KAAKqE,KAAKD,KAAOjB,EAEjBA,EAAKtB,KAAO7B,KAAKqE,MAIjBrE,KAAKsE,KAAOnB,EAIhBnD,KAAKqE,KAAOlB,EACLnD,IACX,CACA,WAAAwG,CAAYrC,GACR,OAAOnE,KAAKuG,QAAQtC,GAAKC,WAAWC,GACxC,CACA,MAAAsC,CAAOtD,GACH,OAAOnD,KAAK0G,OAAOvD,EACvB,CACA,UAAA8C,CAAW9B,GACP,OAAOnE,KAAK0G,OAAOzC,GAAKC,WAAWC,GACvC,CACA,MAAAuC,CAAOvD,EAAMwD,EAAS,MAClB,GAAe,OAAXA,EAMA,GAFA3G,KAAKyE,cAAckC,EAAOvC,KAAMjB,EAAMwD,EAAQxD,GAE1B,OAAhBwD,EAAOvC,KAAe,CAEtB,GAAIpE,KAAKqE,OAASsC,EACd,MAAM,IAAIC,MAAM,iCAIpB5G,KAAKqE,KAAOlB,EACZwD,EAAOvC,KAAOjB,EACdA,EAAKtB,KAAO8E,EACZ3G,KAAKyE,cAAc,KAAMtB,EAC7B,MAEIwD,EAAOvC,KAAKvC,KAAOsB,EACnBA,EAAKiB,KAAOuC,EAAOvC,KACnBuC,EAAOvC,KAAOjB,EACdA,EAAKtB,KAAO8E,OAMhB3G,KAAKyE,cAAczE,KAAKsE,KAAMnB,EAAM,KAAMA,GAGxB,OAAdnD,KAAKsE,MAELtE,KAAKsE,KAAKzC,KAAOsB,EAEjBA,EAAKiB,KAAOpE,KAAKsE,MAIjBtE,KAAKqE,KAAOlB,EAIhBnD,KAAKsE,KAAOnB,EAGhB,OAAOnD,IACX,CACA,UAAA6G,CAAW1C,EAAMwC,GACb,OAAO3G,KAAK0G,OAAOzC,GAAKC,WAAWC,GAAOwC,EAC9C,CACA,MAAAG,CAAO3D,GAMH,GAFAnD,KAAKyE,cAActB,EAAMA,EAAKiB,KAAMjB,EAAMA,EAAKtB,MAE7B,OAAdsB,EAAKiB,KACLjB,EAAKiB,KAAKvC,KAAOsB,EAAKtB,SACnB,CACH,GAAI7B,KAAKqE,OAASlB,EACd,MAAM,IAAIyD,MAAM,+BAGpB5G,KAAKqE,KAAOlB,EAAKtB,IACrB,CAEA,GAAkB,OAAdsB,EAAKtB,KACLsB,EAAKtB,KAAKuC,KAAOjB,EAAKiB,SACnB,CACH,GAAIpE,KAAKsE,OAASnB,EACd,MAAM,IAAIyD,MAAM,+BAGpB5G,KAAKsE,KAAOnB,EAAKiB,IACrB,CAKA,OAHAjB,EAAKiB,KAAO,KACZjB,EAAKtB,KAAO,KAELsB,CACX,CACA,IAAA4D,CAAK5C,GACDnE,KAAK0G,OAAOzC,GAAKC,WAAWC,GAChC,CACA,GAAA6C,GACI,OAAqB,OAAdhH,KAAKsE,KAAgBtE,KAAK8G,OAAO9G,KAAKsE,MAAQ,IACzD,CACA,OAAA2C,CAAQ9C,GACJnE,KAAKuG,QAAQtC,GAAKC,WAAWC,GACjC,CACA,KAAA+C,GACI,OAAqB,OAAdlH,KAAKqE,KAAgBrE,KAAK8G,OAAO9G,KAAKqE,MAAQ,IACzD,CACA,WAAA8C,CAAYC,GACR,OAAOpH,KAAKqH,WAAWD,EAAMpH,KAAKqE,KACtC,CACA,UAAAiD,CAAWF,GACP,OAAOpH,KAAKqH,WAAWD,EAC3B,CACA,UAAAC,CAAWD,EAAMT,GAEb,OAAkB,OAAdS,EAAK/C,OAILsC,SACA3G,KAAKyE,cAAckC,EAAOvC,KAAMgD,EAAK9C,KAAMqC,EAAQS,EAAK/C,MAGpC,OAAhBsC,EAAOvC,MAEPuC,EAAOvC,KAAKvC,KAAOuF,EAAK/C,KACxB+C,EAAK/C,KAAKD,KAAOuC,EAAOvC,MAExBpE,KAAKqE,KAAO+C,EAAK/C,KAGrBsC,EAAOvC,KAAOgD,EAAK9C,KACnB8C,EAAK9C,KAAKzC,KAAO8E,IAEjB3G,KAAKyE,cAAczE,KAAKsE,KAAM8C,EAAK9C,KAAM,KAAM8C,EAAK/C,MAGlC,OAAdrE,KAAKsE,MAILtE,KAAKsE,KAAKzC,KAAOuF,EAAK/C,KAEtB+C,EAAK/C,KAAKD,KAAOpE,KAAKsE,MAItBtE,KAAKqE,KAAO+C,EAAK/C,KAIrBrE,KAAKsE,KAAO8C,EAAK9C,MAGrB8C,EAAK/C,KAAO,KACZ+C,EAAK9C,KAAO,MAvCDtE,IAyCf,CACA,OAAAuH,CAAQC,EAASC,GACT,SAAUA,EACVzH,KAAKqH,WAAWI,EAAeD,GAE/BxH,KAAK0G,OAAOe,EAAeD,GAG/BxH,KAAK8G,OAAOU,EAChB,ECndG,SAASE,GAAkBC,EAAMC,GAGpC,MAAMC,EAAQC,OAAOC,OAAOC,YAAYC,WAClCC,EAAa,IAAItB,MAEvB,OAAOkB,OAAOK,OAAON,EAAO,CACxBF,OACAC,UACA,SAAIQ,GACA,OAAQF,EAAWE,OAAS,IAAIb,QAAQ,eAAgB,GAAGI,MAASC,MACxE,GAER,CCXA,MAEMS,GAAkB,OAExB,SAASC,IAAe,OAAEnL,EAAM,KAAEsC,EAAI,OAAEE,EAAM,SAAE4I,EAAQ,WAAEC,GAAcC,GACpE,SAASC,EAAa/K,EAAOC,GACzB,OAAO2B,EACFoJ,MAAMhL,EAAOC,GACbmI,KAAI,CAACtG,EAAMuC,IACRpD,OAAOjB,EAAQqE,EAAM,GAAG4G,SAASC,GAAgB,KAAOpJ,IAC1DqJ,KAAK,KACf,CAEA,MAEMvJ,GAFW,KAAKwJ,OAAO5K,KAAKe,IAAIqJ,EAAW,EAAG,IACjC,IAAIQ,OAAO5K,KAAKe,IAAIsJ,EAAa,EAAG,IAChBrL,GAAQ6L,MAAM,eAC/CtJ,EAAYvB,KAAKe,IAAI,EAAGO,EAAOgJ,GAAc,EAC7CQ,EAAU9K,KAAKC,IAAIqB,EAAOgJ,EAAYlJ,EAAMvC,OAAS,GACrD6L,EAAe1K,KAAKe,IAAI,EAAGN,OAAOqK,GAASjM,QAAU,EAC3D,IAAIkM,EAAU,GAGdvJ,GAAU,GAAgCJ,EAAME,EAAO,GAAG0J,OAAO,EAAGxJ,EAAS,GAAGyJ,MAAM,QAAU,IAAIpM,QAtBhF,MAyBhBkM,EAAUvJ,EAxBQ,GAwBqB,EACvCA,EAAS0J,IAGb,IAAK,IAAItM,EAAI2C,EAAW3C,GAAKkM,EAASlM,IAC9BA,GAAK,GAAKA,EAAIwC,EAAMvC,SACpBuC,EAAMxC,GAAKwC,EAAMxC,GAAGwK,QAAQ,MAAOc,IACnC9I,EAAMxC,IACDmM,EAAU,GAAK3J,EAAMxC,GAAGC,OAASkM,EAAU,IAAW,IACvD3J,EAAMxC,GAAGoM,OAAOD,EAASI,KACxB/J,EAAMxC,GAAGC,OAASkM,EAnCX,IAmCuC,EAAI,IAAW,KAI1E,MAAO,CACHR,EAAahJ,EAAWD,GACxB,IAAI5C,MAAM8C,EAASkJ,EAAe,GAAGC,KAAK,KAAO,IACjDJ,EAAajJ,EAAMwJ,IACrB/C,OAAOqD,SACJT,KAAK,MACLvB,QAAQ,oBAAqB,IAC7BA,QAAQ,oBAAqB,GACtC,CAEO,SAAS,GAAYK,EAASzK,EAAQC,EAAQqC,EAAME,EAAQ4I,EAAW,EAAGC,EAAa,GAiB1F,OAhBcV,OAAOK,OAAOT,GAAkB,cAAeE,GAAU,CACnEzK,SACAC,SACAqC,OACAE,SACA2I,eAAeG,GACJH,GAAe,CAAEnL,SAAQsC,OAAME,SAAQ4I,WAAUC,cAAcgB,MAAMf,GAAc,EAAIA,GAElG,oBAAIgB,GACA,MACI,gBAAgB7B,MAChBU,GAAe,CAAEnL,SAAQsC,OAAME,SAAQ4I,WAAUC,cAAc,EAEvE,GAIR,CCnEO,SAASkB,GAAaC,GACzB,MAAMC,EAAW5J,KAAK6J,aACtB,IAAIC,GAAQ,EACZ,MAAMC,EAAU,CACZJ,cAGJ,MAAQ3J,KAAKc,KAAK,CACd,OAAQd,KAAKU,WACT,KAAKlF,GACDwE,KAAK6B,OACL,SAEJ,KAAKjH,GACDkP,GAAQ,EACR9J,KAAK6B,OACL,SAGR,IAAImI,EAAQL,EAAWM,QAAQzE,KAAKxF,KAAM+J,GAE1C,QAAcG,IAAVF,EACA,MAGAF,IACIH,EAAWQ,cACXR,EAAWQ,aAAa3E,KAAKxF,KAAMgK,EAAOJ,EAAUG,GAExDD,GAAQ,GAGZF,EAAS7C,KAAKiD,EAClB,CAMA,OAJIF,GAASH,EAAWQ,cACpBR,EAAWQ,aAAa3E,KAAKxF,KAAM,KAAM4J,EAAUG,GAGhDH,CACX,CClBA,MAAMQ,GAAO,OAOb,SAASC,GAAmB1C,GACxB,OAAO,WACH,OAAO3H,KAAK2H,IAChB,CACJ,CAEA,SAAS2C,GAAiBC,GACtB,MAAMvE,EAAS8B,OAAOC,OAAO,MAE7B,IAAK,MAAMJ,KAAQG,OAAO0C,KAAKD,GAAO,CAClC,MAAMpH,EAAOoH,EAAK5C,GACZzE,EAAKC,EAAKsH,OAAStH,EAErBD,IACA8C,EAAO2B,GAAQzE,EAEvB,CAEA,OAAO8C,CACX,CA+BO,SAAS0E,GAAaC,GACzB,IAAIxN,EAAS,GACTgD,EAAW,YACXyK,GAAgB,EAChBC,EAAeT,GACfU,GAAoB,EAExB,MAAMC,EAAc,IAAIjL,GAClBkL,EAASlD,OAAOK,OAAO,IAAIxH,GArCrC,SAAuBgK,GACnB,MAAMM,EAAc,CAChBlB,QAASjC,OAAOC,OAAO,MACvBmD,SAAUpD,OAAOK,OAAOL,OAAOC,OAAO,MAAO4C,EAAOO,UACpDC,MAAOrD,OAAOK,OAAOL,OAAOC,OAAO,MAAO4C,EAAOQ,OACjDC,OAAQd,GAAiBK,EAAOS,QAChCC,OAAQf,GAAiBK,EAAOU,QAChCC,KAAMhB,GAAiBK,EAAOW,OAGlC,IAAK,MAAO3D,EAAMoC,KAAYjC,OAAOyD,QAAQZ,EAAOa,cAChD,cAAezB,GACX,IAAK,WACDkB,EAAYlB,QAAQpC,GAAQoC,EAC5B,MAEJ,IAAK,SACDkB,EAAYlB,QAAQpC,GAAQ0C,GAAmBN,GAK3D,MAAO,CACHY,OAAQM,KACLA,KACAA,EAAYK,KAEvB,CAUoDG,CAAcd,GAAU,CAAC,GAAI,CACzEe,oBAAoB,EACpBC,kBAAkB,EAClBC,YAAY,EACZC,qBAAqB,EAErBnC,aAAY,GAEZoC,uBAAwB,IAAM,EAC9BC,6BAA6BrQ,GAtEZ,MAuENA,EAA4B,EAAI,EAE3CsQ,wCAAwCtQ,GAzEvB,MA0ENA,GA3ED,KA2E8BA,EAAqB,EAAI,EAEjEuQ,uCAAuCvQ,GA/EvB,KAgFLA,GA9ED,KA8E6BA,EAAqB,EAAI,EAEhEwQ,8BAA8BxQ,GAhFpB,KAiFCA,EAAqB,EAAI,EAGpCmO,WAAU,IACC,IAAI5F,GAEfkI,qBAAqBb,IACV,IAAIrH,IAAOgC,WAAWqF,GAEjCc,iBAAiBhF,GACNA,GAAQA,EAAK9K,MAExB+P,gBAAgBjF,GACLA,GAAQA,EAAKnC,KAGxB,iBAAAqH,CAAkBC,EAAUC,GACxB,MAAMC,EAAazM,KAAKe,WAExB,IACI,OAAOwL,EAAS/G,KAAKxF,KACzB,CAAE,MAAO0M,GACL,GAAI5B,EACA,MAAM4B,EAGV1M,KAAK0C,KAAK+J,EAAazM,KAAKe,YAC5B,MAAM4L,EAAeH,EAAShH,KAAKxF,MAMnC,OAJA8K,GAAoB,EACpBD,EAAa6B,EAAGC,GAChB7B,GAAoB,EAEb6B,CACX,CACJ,EAEA,eAAAC,CAAgBxP,GACZ,IAAIqE,EAEJ,GAEI,GADAA,EAAOzB,KAAK8B,WAAW1E,KACnBqE,IAAS7G,IAAc6G,IAASjG,GAChC,OAAOiG,QA1Hd,IA4HQA,GAET,OA9HC,CA+HL,EAEApE,WAAWD,GACAA,GAAU,GAAKA,EAASD,EAAOH,OAASG,EAAOE,WAAWD,GAAU,EAE/EkF,UAAS,CAACuK,EAAaC,IACZ3P,EAAOmF,UAAUuK,EAAaC,GAEzC,cAAAzK,CAAe1E,GACX,OAAOqC,KAAK7C,OAAOmF,UAAU3E,EAAOqC,KAAKgB,WAC7C,EAEAzD,QAAO,CAACH,EAAQ2P,IACLxP,GAAQJ,EAAQC,EAAQ2P,GAEnCrP,OAAM,CAACmP,EAAaC,EAAWE,IACpBtP,GAAOP,EAAQ0P,EAAaC,EAAWE,GAGlD,OAAAC,CAAQvM,GACJ,MAAM/C,EAAQqC,KAAKgB,WAInB,OAFAhB,KAAKkN,IAAIxM,GAEFV,KAAKqC,eAAe1E,EAC/B,EACA,mBAAAwP,GACI,MAAMxF,EAAOxK,EAAOmF,UAAUtC,KAAKgB,WAAYhB,KAAKkB,SAAW,GAI/D,OAFAlB,KAAKkN,IAAI/S,IAEFwN,CACX,EACA,aAAArJ,CAAcmD,GACV,MAAM2L,EAASjQ,EAAOmF,UAAUtC,KAAKgB,WAAY1C,GAAcnB,EAAQ6C,KAAKgB,aAI5E,OAFAhB,KAAKkN,IAAIzL,GAEF2L,CACX,EAEA,GAAAF,CAAIxM,GACA,GAAIV,KAAKU,YAAcA,EAAW,CAC9B,MAAM2M,EAAY,GAAW3M,GAAWiI,MAAM,GAAI,GAAGpB,QAAQ,KAAM,KAAKA,QAAQ,MAAM+F,GAAKA,EAAEC,gBAC7F,IAAI3F,EAAU,GAAG,YAAY4F,KAAKH,GAAa,IAAIA,KAAeA,gBAC9DjQ,EAAS4C,KAAKgB,WAGlB,OAAQN,GACJ,KAAKxG,GAEG8F,KAAKU,YAAcvG,IAAiB6F,KAAKU,YAAcnG,IACvD6C,EAAS4C,KAAKkB,SAAW,EACzB0G,EAAU,6CAEVA,EAAU,yBAEd,MAEJ,KAAKvN,GACG2F,KAAKyC,QA9Ld,MA+LSzC,KAAK6B,OACLzE,IACAwK,EAAU,oBAEd,MAEJ,KAAKlN,GACGsF,KAAKU,YAAc,KACnBtD,EAAS4C,KAAKkB,SACd0G,EAAU,4BAKtB5H,KAAK6H,MAAMD,EAASxK,EACxB,CAEA4C,KAAK6B,MACT,EACA,QAAA4L,CAAS9F,GACD3H,KAAKU,YAAcxG,KAAuC,IAA9B8F,KAAKmC,YAAY,EAAGwF,IAChD3H,KAAK6H,MAAM,eAAeF,kBAG9B3H,KAAK6B,MACT,EACA,QAAA6L,CAAShS,GACAsE,KAAKyC,QAAQ/G,IACdsE,KAAK6H,MAAM,UAAUjJ,OAAO+O,aAAajS,mBAG7CsE,KAAK6B,MACT,EAEA3B,YAAW,CAACvC,EAAOC,IACXgN,EACOG,EAAY3K,iBACfzC,EACAC,EACAuC,GAID,KAEX,mBAAAyN,CAAoBxG,GAChB,GAAIwD,EAAe,CACf,MAAMvG,EAAOrE,KAAKoM,iBAAiBhF,GAC7B9C,EAAOtE,KAAKqM,gBAAgBjF,GAClC,OAAO2D,EAAY3K,iBACN,OAATiE,EAAgBA,EAAKwJ,IAAIlQ,MAAMP,OAAS2N,EAAYzL,YAAcU,KAAKgB,WAC9D,OAATsD,EAAgBA,EAAKuJ,IAAIjQ,IAAIR,OAAS2N,EAAYzL,YAAcU,KAAKgB,WACrEb,EAER,CAEA,OAAO,IACX,EAEA,KAAA0H,CAAMD,EAASxK,GACX,MAAM0Q,OAA6B,IAAX1Q,GAA0BA,EAASD,EAAOH,OAC5D+N,EAAY7K,YAAY9C,GACxB4C,KAAKc,IACDiK,EAAY7K,YV9N3B,SAA6B/C,EAAQC,GACxC,KAAOA,GAAU,GACRhB,GAAae,EAAOE,WAAWD,IADpBA,KAMpB,OAAOA,EAAS,CACpB,CUsN8C2Q,CAAoB5Q,EAAQA,EAAOH,OAAS,IACpE+N,EAAY7K,YAAYF,KAAKgB,YAEvC,MAAM,IAAI,GACN4G,GAAW,mBACXzK,EACA2Q,EAAS1Q,OACT0Q,EAASrO,KACTqO,EAASnO,OACToL,EAAYrL,UACZqL,EAAYnL,YAEpB,IAqDJ,OAAOkI,OAAOK,QAlDA,SAAS6F,EAASC,GAC5B9Q,EAAS6Q,EACTC,EAAUA,GAAW,CAAC,EAEtBjD,EAAO/K,UAAU9C,EAAQyD,IACzBmK,EAAY9K,UACR9C,EACA8Q,EAAQ7Q,OACR6Q,EAAQxO,KACRwO,EAAQtO,QAGZQ,EAAW8N,EAAQ9N,UAAY,YAC/ByK,EAAgBrB,QAAQ0E,EAAQC,WAChCrD,EAA+C,mBAAzBoD,EAAQpD,aAA8BoD,EAAQpD,aAAeT,GACnFU,GAAoB,EAEpBE,EAAOU,qBAAqB,uBAAwBuC,IAAU1E,QAAQ0E,EAAQvC,oBAC9EV,EAAOW,mBAAmB,qBAAsBsC,IAAU1E,QAAQ0E,EAAQtC,kBAC1EX,EAAOY,aAAa,eAAgBqC,IAAU1E,QAAQ0E,EAAQrC,YAC9DZ,EAAOa,oBAAsB,wBAAyBoC,GAAU1E,QAAQ0E,EAAQpC,qBAEhF,MAAM,QAAE9B,EAAU,UAAS,UAAEoE,GAAcF,EAE3C,GAAIlE,KAAWiB,EAAOjB,UAAY,EAC9B,MAAM,IAAInD,MAAM,oBAAsBmD,EAAU,KAG3B,mBAAdoE,GACPnD,EAAO/H,cAAa,CAACxB,EAAM9D,EAAOC,KAC9B,GAAI6D,IAASjG,GAAS,CAClB,MAAMqS,EAAM7C,EAAO9K,YAAYvC,EAAOC,GAChCwQ,EAAQ1Q,GAAOP,EAAQS,EAAM,EAAGA,EAAK,MACrCT,EAAOwL,MAAMhL,EAAQ,EAAGC,EAAM,GAC9BT,EAAOwL,MAAMhL,EAAQ,EAAGC,GAE9BuQ,EAAUC,EAAOP,EACrB,KAIR,MAAMQ,EAAMrD,EAAOjB,QAAQA,GAASvE,KAAKwF,EAAQiD,GAMjD,OAJKjD,EAAOlK,KACRkK,EAAOnD,QAGJwG,CACX,GAE4B,CACxBrG,YAAW,GACX2C,OAAQK,EAAOL,QAEvB,C,qEC3VA,MAAM2D,GAAa,IAAIC,IAAI,CAAC,SAAU,WAAY,gBCiBlD,MAGM7S,GAAO,CAAC+F,EAAM2M,KAKhB,GAJI3M,IAAShH,KACTgH,EAAO2M,GAGS,iBAAT3M,EAAmB,CAC1B,MAAMsL,EAAWtL,EAAKpE,WAAW,GACjC,OAAO0P,EAAW,IAAO,MAASA,GAAY,CAClD,CAEA,OAAOtL,CAAI,EAST+M,GAAY,CACd,CAACtU,GAAOA,IACR,CAACA,GAAOC,IACR,CAACD,GAAOK,IACR,CAACL,GAAOM,IACR,CAACN,GAAO,KACR,CAACA,GAAO,IACR,CAACA,GAAOQ,IACR,CAACR,GAAOS,IACR,CAACT,GAAOY,IACR,CAACZ,GAAOkB,IAER,CAAChB,GAAWF,IACZ,CAACE,GAAWD,IACZ,CAACC,GAAWG,IACZ,CAACH,GAAWI,IACZ,CAACJ,GAAW,KACZ,CAACA,GAAW,IACZ,CAACA,GAAWM,IACZ,CAACN,GAAWO,IACZ,CAACP,GAAWU,IAEZ,CAACT,GAAMH,IACP,CAACG,GAAMF,IACP,CAACE,GAAME,IACP,CAACF,GAAMG,IACP,CAACH,GAAM,KACP,CAACA,GAAM,IACP,CAACA,GAAMK,IACP,CAACL,GAAMM,IACP,CAACN,GAAMS,IAEP,CAACH,GAAWT,IACZ,CAACS,GAAWR,IACZ,CAACQ,GAAWJ,IACZ,CAACI,GAAWH,IACZ,CAACG,GAAW,KACZ,CAACA,GAAW,IACZ,CAACA,GAAWD,IACZ,CAACC,GAAWA,IACZ,CAACA,GAAWG,IAEZ,CAAC,IAAKZ,IACN,CAAC,IAAKC,IACN,CAAC,IAAKI,IACN,CAAC,IAAKC,IACN,CAAC,IAAK,KACN,CAAC,IAAK,IACN,CAAC,IAAKE,IACN,CAAC,IAAKC,IACN,CAAC,IAAKG,IAEN,CAAC,IAAKZ,IACN,CAAC,IAAKC,IACN,CAAC,IAAKI,IACN,CAAC,IAAKC,IACN,CAAC,IAAK,KACN,CAAC,IAAK,IACN,CAAC,IAAKE,IACN,CAAC,IAAKC,IACN,CAAC,IAAKG,IAEN,CAAC,GAAaZ,IACd,CAAC,GAAaC,IACd,CAAC,GAAaI,IACd,CAAC,GAAaC,IACd,CAAC,GAAa,IACd,CAAC,GAAaE,IACd,CAAC,GAAaC,IACd,CAAC,GAAa,KACd,CAAC,GAAaG,IAEd,CAAC,IAAKZ,IACN,CAAC,IAAKC,IACN,CAAC,IAAKI,IACN,CAAC,IAAKC,IACN,CAAC,IAAK,KACN,CAAC,IAAKM,IAEN,CAAC,IAAK,IACN,CAAC,IAAKJ,IACN,CAAC,IAAKC,IAEN,CAAC,IAAK,IACN,CAAC,IAAKD,IACN,CAAC,IAAKC,IAEN,CAAC,IAAK,MAGJ8T,GAAYD,GAAUE,OAAO,CAC/B,CAACxU,GAAOG,IAER,CAACM,GAAWN,IAEZ,CAACA,GAAMA,IAEP,CAACD,GAAWgB,IACZ,CAAChB,GAAW,IACZ,CAACA,GAAWW,IAEZ,CAACL,GAAYA,IACb,CAACA,GAAYC,IACb,CAACD,GAAYP,IACb,CAACO,GAAY,KAEb,CAACW,GAAkBnB,IACnB,CAACmB,GAAkBlB,IACnB,CAACkB,GAAkBX,IACnB,CAACW,GAAkBV,IACnB,CAACU,GAAkBhB,IACnB,CAACgB,GAAkB,OAGvB,SAASsT,GAAUC,GACf,MAAMC,EAAuB,IAAIN,IAC7BK,EAAM7I,KAAI,EAAE3B,EAAMvC,KAAWnG,GAAK0I,IAAS,GAAK1I,GAAKmG,MAGzD,OAAO,SAASiN,EAAUrN,EAAM2M,GAC5B,MAAMtK,EAAWpI,GAAK+F,EAAM2M,GACtBW,EAAeX,EAAM/Q,WAAW,GActC,OA5JY,KAgJP0R,GACGtN,IAASvH,IACTuH,IAAStH,IACTsH,IAAS3G,IApJR,KAqJJiU,EACKF,EAAqBG,IAAIF,GAAY,GAAKC,GAAgB,GAC1DF,EAAqBG,IAAIF,GAAY,GAAKhL,KAGhD9D,KAAKiP,KAAK,IAAKrU,IAAY,GAGxBkJ,CACX,CACJ,CAEO,MAAMoL,GAAOP,GAAUH,IACjBW,GAAOR,GAAUF,IC/K9B,SAASW,GAAgB9D,EAAM+D,GAC3B,GAAyB,mBAAdA,EAeX/D,EAAK1B,SAAStE,QAAQtF,KAAKsL,KAAMtL,UAfjC,CACI,IAAIoE,EAAO,KAEXkH,EAAK1B,SAAStE,SAAQgG,IACL,OAATlH,GACAiL,EAAU7J,KAAKxF,KAAMoE,GAGzBpE,KAAKsL,KAAKA,GACVlH,EAAOkH,CAAI,GAInB,CAGJ,CAEA,SAASgE,GAAahM,GAClB1C,GAAS0C,GAAO,CAAC7B,EAAM9D,EAAOC,KAC1BoC,KAAKuP,MAAM9N,EAAM6B,EAAMqF,MAAMhL,EAAOC,GAAK,GAEjD,CAEO,SAAS4R,GAAgB7E,GAC5B,MAAM8E,EAAQ,IAAIC,IAElB,IAAK,IAAK/H,EAAMxE,KAAS2E,OAAOyD,QAAQZ,EAAOW,MAAO,CAGhC,mBAFPnI,EAAKwM,UAAYxM,IAGxBsM,EAAMG,IAAIjI,EAAMxE,EAAKwM,UAAYxM,EAEzC,CAEA,OAAO,SAASmI,EAAM2C,GAClB,IAAIlP,EAAS,GACT+P,EAAW,EACXe,EAAW,CACX,IAAAvE,CAAKA,GACD,IAAImE,EAAMT,IAAI1D,EAAK7J,MAGf,MAAM,IAAImF,MAAM,sBAAwB0E,EAAK7J,MAF7CgO,EAAMK,IAAIxE,EAAK7J,MAAM+D,KAAKuK,EAAWzE,EAI7C,EACA0E,YAAa,GACb,KAAAT,CAAM9N,EAAM2M,GACRU,EAAW9O,KAAKgQ,YAAYlB,EAAUrN,EAAM2M,GAE5CpO,KAAKiP,KAAKb,EAAO3M,GAAM,GAEnBA,IAAShH,IAvDN,KAuDe2T,EAAM/Q,WAAW,IACnC2C,KAAKiP,KAAK,KAAMrU,IAAY,EAEpC,EACA,IAAAqU,CAAKb,GACDrP,GAAUqP,CACd,EACApI,OAAM,IACKjH,GAIXkP,IACiC,mBAAtBA,EAAQgC,YACfJ,EAAW5B,EAAQgC,UAAUJ,IAG7B5B,EAAQiC,YACRL,EFzET,SAA2BA,GAC9B,MAAM9J,EAAM,IAAI,KACVoK,EAAY,CACd1Q,KAAM,EACNE,OAAQ,GAENyQ,EAAW,CACb3Q,KAAM,EACNE,OAAQ,GAEN0Q,EAAqB,CACvB5Q,KAAM,EACNE,OAAQ,GAEN2Q,EAAmB,CACrBH,UAAWE,GAEf,IAAI5Q,EAAO,EACPE,EAAS,EACT4Q,GAAsB,EAE1B,MAAMC,EAAmBX,EAASvE,KAClCuE,EAASvE,KAAO,SAASA,GACrB,GAAIA,EAAKuC,KAAOvC,EAAKuC,IAAIlQ,OAAS2Q,GAAWU,IAAI1D,EAAK7J,MAAO,CACzD,MAAMgP,EAAWnF,EAAKuC,IAAIlQ,MAAM8B,KAC1BiR,EAAapF,EAAKuC,IAAIlQ,MAAMgC,OAAS,EAEvCyQ,EAAS3Q,OAASgR,GAClBL,EAASzQ,SAAW+Q,IACpBN,EAAS3Q,KAAOgR,EAChBL,EAASzQ,OAAS+Q,EAElBP,EAAU1Q,KAAOA,EACjB0Q,EAAUxQ,OAASA,EAEf4Q,IACAA,GAAsB,EAClBJ,EAAU1Q,OAAS4Q,EAAmB5Q,MACtC0Q,EAAUxQ,SAAW0Q,EAAmB1Q,QACxCoG,EAAI4K,WAAWL,IAIvBC,GAAsB,EACtBxK,EAAI4K,WAAW,CACXxT,OAAQmO,EAAKuC,IAAI1Q,OACjBiT,WACAD,cAGZ,CAEAK,EAAiBhL,KAAKxF,KAAMsL,GAExBiF,GAAuBjC,GAAWU,IAAI1D,EAAK7J,QAC3C4O,EAAmB5Q,KAAOA,EAC1B4Q,EAAmB1Q,OAASA,EAEpC,EAEA,MAAMiR,EAAmBf,EAASZ,KAClCY,EAASZ,KAAO,SAASb,EAAO3M,EAAMoP,GAClC,IAAK,IAAI9T,EAAI,EAAGA,EAAIqR,EAAMpR,OAAQD,IACF,KAAxBqR,EAAM/Q,WAAWN,IACjB0C,IACAE,EAAS,GAETA,IAIRiR,EAAiBxC,EAAO3M,EAAMoP,EAClC,EAEA,MAAMC,EAAqBjB,EAAS7J,OAYpC,OAXA6J,EAAS7J,OAAS,WAKd,OAJIuK,GACAxK,EAAI4K,WAAWL,GAGZ,CACHS,IAAKD,IACL/K,MAER,EAEO8J,CACX,CEd2BmB,CAAkBnB,IAG7B5B,EAAQgD,QAAQ,IAChBpB,EAASG,YAAc,EAAY/B,EAAQgD,QAInD,MAAMlB,EAAY,CACdzE,KAAOA,GAASuE,EAASvE,KAAKA,GAC9B1B,SAAUwF,GACVG,MAAO,CAAC9N,EAAM2M,IAAUyB,EAASN,MAAM9N,EAAM2M,GAC7CxN,SAAU0O,IAKd,OAFAO,EAASvE,KAAKA,GAEPuE,EAAS7J,QACpB,CACJ,CChGA,MAAQkL,eAAc,IAAKpJ,OAAOG,UAC5BkJ,GAAO,WAAY,EAEzB,SAASC,GAAehD,GACpB,MAAwB,mBAAVA,EAAuBA,EAAQ+C,EACjD,CAEA,SAASE,GAAcnO,EAAIzB,GACvB,OAAO,SAAS6J,EAAMnI,EAAMiE,GACpBkE,EAAK7J,OAASA,GACdyB,EAAGsC,KAAKxF,KAAMsL,EAAMnI,EAAMiE,EAElC,CACJ,CAEA,SAASkK,GAAwB3J,EAAM4J,GACnC,MAAMC,EAAYD,EAASC,UACrBC,EAAU,GAEhB,IAAK,MAAMC,KAAOF,EAAW,CACzB,IAA4C,IAAxC,GAAehM,KAAKgM,EAAWE,GAC/B,SAGJ,IAAIC,EAAaH,EAAUE,GAC3B,MAAME,EAAS,CACXjK,KAAM+J,EACNjQ,MAAM,EACNoQ,UAAU,GAGThV,MAAMiV,QAAQH,KACfA,EAAa,CAACA,IAGlB,IAAK,MAAMI,KAAaJ,EACF,OAAdI,EACAH,EAAOC,UAAW,EACU,iBAAdE,EACdH,EAAOnQ,KAAO,OACP5E,MAAMiV,QAAQC,KACrBH,EAAOnQ,KAAO,QAIlBmQ,EAAOnQ,MACPgQ,EAAQ1K,KAAK6K,EAErB,CAEA,OAAIH,EAAQzU,OACD,CACH+M,QAASwH,EAASS,YAClBC,OAAQR,GAIT,IACX,CAoBA,SAASS,GAAmBvH,EAAQwH,GAChC,MAAMF,EAAStH,EAAOsH,OAAOtJ,QACvByJ,EAAczH,EAAOZ,QACrBsI,EAAoC,iBAAhBD,EAM1B,OAJID,GACAF,EAAOE,UAGJ,SAAS7G,EAAMvB,EAASuI,EAAMC,GACjC,IAAIC,EAEAH,IACAG,EAAmBzI,EAAQqI,GAC3BrI,EAAQqI,GAAe9G,GAG3B,IAAK,MAAMmH,KAASR,EAAQ,CACxB,MAAMS,EAAMpH,EAAKmH,EAAM9K,MAEvB,IAAK8K,EAAMZ,UAAYa,EACnB,GAAmB,SAAfD,EAAMhR,KAAiB,CAKvB,GAJkB0Q,EACZO,EAAI7M,YAAY0M,GAAa,GAC7BG,EAAIhN,OAAO6M,GAAa,GAG1B,OAAO,CAEf,MAAO,GAAID,EAAKI,GACZ,OAAO,CAGnB,CAEIL,IACAtI,EAAQqI,GAAeI,EAE/B,CACJ,CAEA,SAASG,IAAsB,WAC3BC,EAAU,OACVC,EAAM,KACNC,EAAI,MACJC,EAAK,gBACLC,IAEA,MAAO,CACHH,OAAQ,CACJD,aACAC,SACAC,OACAC,SAEJD,KAAM,CACFF,aACAC,SACAC,OACAC,SAEJE,YAAa,CACTL,aACAC,SACAC,OACAC,QACAC,mBAGZ,CAEO,SAASE,GAAavI,GACzB,MAAM8E,EA1FV,SAA4B9E,GACxB,MAAM8E,EAAQ,CAAC,EAEf,IAAK,MAAM9H,KAAQgD,EAAOW,KACtB,GAAI,GAAe9F,KAAKmF,EAAOW,KAAM3D,GAAO,CACxC,MAAM4J,EAAW5G,EAAOW,KAAK3D,GAE7B,IAAK4J,EAASC,UACV,MAAM,IAAI5K,MAAM,gCAAkCe,EAAO,0BAG7D8H,EAAM9H,GAAQ2J,GAAwB3J,EAAM4J,EAChD,CAGJ,OAAO9B,CACX,CA0EkB0D,CAAmBxI,GAC3ByI,EAAmB,CAAC,EACpBC,EAAmB,CAAC,EACpBC,EAAYxO,OAAO,cACnByO,EAAWzO,OAAO,aAExB,IAAK,MAAM6C,KAAQ8H,EACX,GAAejK,KAAKiK,EAAO9H,IAAyB,OAAhB8H,EAAM9H,KAC1CyL,EAAiBzL,GAAQuK,GAAmBzC,EAAM9H,IAAO,GACzD0L,EAAiB1L,GAAQuK,GAAmBzC,EAAM9H,IAAO,IAIjE,MAAM6L,EAAgCb,GAAsBS,GACtDK,EAAgCd,GAAsBU,GAEtDf,EAAO,SAASoB,EAAMzF,GACxB,SAAS0F,EAASrI,EAAMnI,EAAMiE,GAC1B,MAAMwM,EAAWC,EAAMrO,KAAKuE,EAASuB,EAAMnI,EAAMiE,GAEjD,OAAIwM,IAAaN,GAIbM,IAAaL,OAIbO,EAAU5C,eAAe5F,EAAK7J,QAC1BqS,EAAUxI,EAAK7J,MAAM6J,EAAMvB,EAAS4J,EAAUpB,KAKlDwB,EAAMvO,KAAKuE,EAASuB,EAAMnI,EAAMiE,KAAUkM,EAKlD,CAEA,IAAIO,EAAQ1C,GACR4C,EAAQ5C,GACR2C,EAAYV,EACZb,EAAc,CAACyB,EAAK7P,EAAMhB,EAAMiE,IAAS4M,GAAOL,EAASxP,EAAMhB,EAAMiE,GACzE,MAAM2C,EAAU,CACZkK,MAAOX,EACP5Q,KAAM6Q,EAENG,OACAQ,WAAY,KACZ9I,OAAQ,KACR+I,cAAe,KACfC,KAAM,KACNC,SAAU,KACVC,MAAO,KACPC,YAAa,KACbC,SAAU,MAGd,GAAuB,mBAAZvG,EACP4F,EAAQ5F,OACL,GAAIA,IACP4F,EAAQzC,GAAenD,EAAQ4F,OAC/BE,EAAQ3C,GAAenD,EAAQ8F,OAE3B9F,EAAQkE,UACR2B,EAAYT,GAGZpF,EAAQwG,OAAO,CACf,GAAIjB,EAA8BtC,eAAejD,EAAQwG,OACrDX,EAAY7F,EAAQkE,QACdsB,EAA8BxF,EAAQwG,OACtCjB,EAA8BvF,EAAQwG,YACzC,IAAKhF,EAAMyB,eAAejD,EAAQwG,OACrC,MAAM,IAAI7N,MAAM,cAAgBqH,EAAQwG,MAAQ,oCAAsC3M,OAAO0C,KAAKiF,GAAOiF,OAAO5L,KAAK,MAAQ,KAGjI+K,EAAQxC,GAAcwC,EAAO5F,EAAQwG,OACrCV,EAAQ1C,GAAc0C,EAAO9F,EAAQwG,MACzC,CAGJ,GAAIZ,IAAU1C,IAAQ4C,IAAU5C,GAC5B,MAAM,IAAIvK,MAAM,+EAGpB+M,EAASD,EACb,EA8CA,OA5CApB,EAAK2B,MAAQX,EACbhB,EAAK5P,KAAO6Q,EAEZjB,EAAKqC,KAAO,SAAStG,EAAKnL,GACtB,IAAI0R,EAAQ,KASZ,OAPAtC,EAAKjE,GAAK,SAAS/C,EAAMnI,EAAMiE,GAC3B,GAAIlE,EAAGsC,KAAKxF,KAAMsL,EAAMnI,EAAMiE,GAE1B,OADAwN,EAAQtJ,EACDgI,CAEf,IAEOsB,CACX,EAEAtC,EAAKuC,SAAW,SAASxG,EAAKnL,GAC1B,IAAI0R,EAAQ,KAYZ,OAVAtC,EAAKjE,EAAK,CACN8D,SAAS,EACT,KAAA0B,CAAMvI,EAAMnI,EAAMiE,GACd,GAAIlE,EAAGsC,KAAKxF,KAAMsL,EAAMnI,EAAMiE,GAE1B,OADAwN,EAAQtJ,EACDgI,CAEf,IAGGsB,CACX,EAEAtC,EAAKwC,QAAU,SAASzG,EAAKnL,GACzB,MAAM0R,EAAQ,GAQd,OANAtC,EAAKjE,GAAK,SAAS/C,EAAMnI,EAAMiE,GACvBlE,EAAGsC,KAAKxF,KAAMsL,EAAMnI,EAAMiE,IAC1BwN,EAAM7N,KAAKuE,EAEnB,IAEOsJ,CACX,EAEOtC,CACX,CC9RA,SAAS,GAAKlE,GACV,OAAOA,CACX,CA2DA,SAAS2G,GAAiBzJ,EAAM0J,EAAUC,EAAaC,GACnD,IAAIlP,EAEJ,OAAQsF,EAAK7J,MACT,IAAK,QACDuE,EAlBZ,SAA0BsF,EAAM0J,EAAUC,EAAaC,GACnD,MAAMC,EAAiC,MAApB7J,EAAK6J,YAAsBD,EAAU5J,EAAK6J,WAAa,IAAM7J,EAAK6J,WAAa,IAC5FnP,EAASsF,EAAK8J,MACfrP,KAAIsP,GAAQN,GAAiBM,EAAML,EAAUC,EAAaC,KAC1DpM,KAAKqM,GAEV,OAAI7J,EAAKgK,UAAYL,GACTC,GAAyB,MAAdlP,EAAO,GAAa,IAAM,MAAQA,GAAUkP,EAAU,IAAM,MAG5ElP,CACX,CAQgBuP,CAAiBjK,EAAM0J,EAAUC,EAAaC,IAC7C5J,EAAKkK,cAAgB,IAAM,IAChC,MAEJ,IAAK,aAED,OACIT,GAAiBzJ,EAAK+J,KAAML,EAAUC,EAAaC,GACnDF,EAvEhB,SAA4BS,GACxB,MAAM,IAAErX,EAAG,IAAEc,EAAG,MAAEwW,GAAUD,EAE5B,OAAY,IAARrX,GAAqB,IAARc,EACNwW,EAAQ,KAAO,IAGd,IAARtX,GAAqB,IAARc,EACN,IAGC,IAARd,GAAqB,IAARc,EACNwW,EAAQ,IAAM,IAGb,IAARtX,GAAqB,IAARc,EACN,IAINwW,EAAQ,IAAM,KACdtX,IAAQc,EACH,IAAMd,EAAM,IACZ,IAAMA,EAAM,KAAe,IAARc,EAAYA,EAAM,IAAM,IAGzD,CA6CyByW,CAAmBrK,GAAOA,GAG3C,IAAK,UACDtF,EAAS,iBAAmB+O,GAAiBzJ,EAAK+J,KAAML,EAAUC,EAAaC,GAAW,KAC1F,MAEJ,IAAK,OACDlP,EAAS,IAAMsF,EAAK3D,MAAQ2D,EAAKsK,KAAOZ,EAnDpD,SAA0B1J,GACtB,GACS,UADDA,EAAK7J,KAEL,MACI,MACc,OAAb6J,EAAKlN,IAAe,KAAOkN,EAAKlN,KACjC,KACc,OAAbkN,EAAKpM,IAAe,IAAMoM,EAAKpM,KAChC,IAIJ,MAAM,IAAI0H,MAAM,sBAAwB0E,EAAK7J,KAAO,IAEhE,CAqC6DoU,CAAiBvK,EAAKsK,MAAOtK,EAAKsK,MAAQ,IAAM,IACjG,MAEJ,IAAK,WACD5P,EAAS,KAAQsF,EAAK3D,KAAO,KAC7B,MAEJ,IAAK,UACD3B,EAASsF,EAAK3D,KACd,MAEJ,IAAK,YACD3B,EAAS,IAAMsF,EAAK3D,KACpB,MAEJ,IAAK,WACD3B,EAASsF,EAAK3D,KAAO,IACrB,MAEJ,IAAK,SACL,IAAK,QACD3B,EAASsF,EAAK8C,MACd,MAEJ,IAAK,QACDpI,EAAS,IACT,MAEJ,QACI,MAAM,IAAIY,MAAM,sBAAwB0E,EAAK7J,KAAO,KAG5D,OAAOuT,EAAShP,EAAQsF,EAC5B,CAEO,SAASqE,GAASrE,EAAM2C,GAC3B,IAAI+G,EAAW,GACXC,GAAc,EACdC,GAAU,EAYd,MAVuB,mBAAZjH,EACP+G,EAAW/G,EACJA,IACPgH,EAAc1L,QAAQ0E,EAAQgH,aAC9BC,EAAU3L,QAAQ0E,EAAQiH,SACM,mBAArBjH,EAAQ+G,WACfA,EAAW/G,EAAQ+G,WAIpBD,GAAiBzJ,EAAM0J,EAAUC,EAAaC,EACzD,CCnIA,MAAMY,GAAa,CAAE1Y,OAAQ,EAAGqC,KAAM,EAAGE,OAAQ,GAoDjD,SAASoW,GAAQzK,EAAM0K,GACnB,MAAM5H,EAAQ9C,GAAQA,EAAKuC,KAAOvC,EAAKuC,IAAImI,GAE3C,OAAI5H,EACO,SAAUA,EAAQ6H,GAAS7H,GAASA,EAGxC,IACX,CAEA,SAAS6H,IAAS,OAAE7Y,EAAM,KAAEqC,EAAI,OAAEE,GAAUuW,GACxC,MAAMrI,EAAM,CACRzQ,SACAqC,OACAE,UAGJ,GAAIuW,EAAO,CACP,MAAM3W,EAAQ2W,EAAMlN,MAAM,eAE1B6E,EAAIzQ,QAAU8Y,EAAMlZ,OACpB6Q,EAAIpO,MAAQF,EAAMvC,OAAS,EAC3B6Q,EAAIlO,OAA0B,IAAjBJ,EAAMvC,OAAe6Q,EAAIlO,OAASuW,EAAMlZ,OAASuC,EAAMyH,MAAMhK,OAAS,CACvF,CAEA,OAAO6Q,CACX,CAEO,MAAMsI,GAAuB,SAAS1U,EAAM2U,GAC/C,MAAMvO,EAAQH,GACV,uBACAjG,GAAQ2U,EAAgB,KAAOA,EAAgB,IAAM,KAKzD,OAFAvO,EAAMwO,UAAYD,EAEXvO,CACX,EAEayO,GAAmB,SAAS1O,EAAS2O,EAAQjL,EAAMkL,GAC5D,MAAM3O,EAAQH,GAAkB,mBAAoBE,IAC9C,IACFmJ,EAAG,eACH0F,EAAc,eACdC,EAAc,MACd/Y,EAAK,IACLC,GAhGR,SAAwB4Y,EAAalL,GACjC,MAAMjI,EAASmT,EAAYnT,OACrBsT,EAAeH,EAAYG,aAC3BC,EAAeD,EAAetT,EAAOrG,QAASqG,EAAOsT,GAAcrL,MAAe,KAClFuL,EAAUD,IAAiBtL,EAAOsL,EAAe,KACvD,IAIIjZ,EACAC,EALA6Y,EAAiB,EACjBC,EAAiB,EACjBnL,EAAU,EACVwF,EAAM,GAIV,IAAK,IAAIhU,EAAI,EAAGA,EAAIsG,EAAOrG,OAAQD,IAAK,CACpC,MAAMwS,EAAQlM,EAAOtG,GAAGqR,MAEpBrR,IAAM4Z,IACND,EAAiBnH,EAAMvS,OACvByZ,EAAiB1F,EAAI/T,QAGT,OAAZ6Z,GAAoBxT,EAAOtG,GAAGuO,OAASuL,IACnC9Z,GAAK4Z,EACLpL,IAEAA,EAAU,GAIlBwF,GAAOxB,CACX,CAYA,OAVIoH,IAAiBtT,EAAOrG,QAAUuO,EAAU,GAC5C5N,EAAQoY,GAAQc,GAAWvL,EAAM,QAAU2K,GAASH,GAAY/E,GAChEnT,EAAMqY,GAAStY,KAEfA,EAAQoY,GAAQc,EAAS,UACrBZ,GAASF,GAAQzK,EAAM,UAAYwK,GAAY/E,EAAIpI,MAAM,EAAG8N,IAChE7Y,EAAMmY,GAAQc,EAAS,QACnBZ,GAAStY,EAAOoT,EAAI5H,OAAOsN,EAAgBC,KAG5C,CACH3F,MACA0F,iBACAC,iBACA/Y,QACAC,MAER,CAiDQkZ,CAAeN,EAAalL,GAmBhC,OAjBAzD,EAAMkP,WAAanP,EACnBC,EAAM0O,OAASA,EAAS5G,GAAS4G,GAAU,YAC3C1O,EAAMkJ,IAAMA,EACZlJ,EAAM4O,eAAiBA,EACvB5O,EAAM6O,eAAiBA,EACvB7O,EAAMD,QAAUA,iBACGC,EAAM0O,OADT3O,gBAEImJ,GAAO,kBAFXnJ,eAGG,IAAI/K,MAAMgL,EAAM4O,eAAiB,GAAG3N,KAAK,KAAO,IAEnEhB,OAAOK,OAAON,EAAOlK,GACrBkK,EAAMgG,IAAM,CACR1Q,OAASmO,GAAQA,EAAKuC,KAAOvC,EAAKuC,IAAI1Q,QAAW,YACjDQ,QACAC,OAGGiK,CACX,EC1HMmP,GAAW,IAAItH,IACfuH,GAAa,IAAIvH,IACjB,GAAc,GAEPwH,GA+Bb,SAA8BA,GAC1B,GAAIF,GAAShI,IAAIkI,GACb,OAAOF,GAASlH,IAAIoH,GAGxB,MAAMvP,EAAOuP,EAAQC,cACrB,IAAIC,EAAaJ,GAASlH,IAAInI,GAE9B,QAAmBuC,IAAfkN,EAA0B,CAC1B,MAAMC,EAASC,GAAiB3P,EAAM,GAChC4P,EAAUF,EAAoC,GAA3BG,GAAgB7P,EAAM,GAC/CyP,EAAatP,OAAO2P,OAAO,CACvBC,SAAU/P,EAAKwB,OAAOoO,EAAOva,QAC7B2K,OACAgQ,OAAQJ,EACRA,SACAF,UAER,CAIA,OAFAL,GAASpH,IAAIsH,EAASE,GAEfA,CACX,EArDa,GAuDb,SAA+BQ,GAC3B,GAAIX,GAAWjI,IAAI4I,GACf,OAAOX,GAAWnH,IAAI8H,GAG1B,IAAIjQ,EAAOiQ,EACPC,EAAOD,EAAS,GAEP,MAATC,EACAA,EAAuB,MAAhBD,EAAS,GAAa,KAAO,IACpB,MAATC,GACS,MAATA,GACS,MAATA,GACS,MAATA,GACS,MAATA,GACS,MAATA,IACPA,EAAO,IAGX,MAAMR,EAASC,GAAiB3P,EAAMkQ,EAAK7a,QAG3C,IAAKqa,IACD1P,EAAOA,EAAKwP,cACRF,GAAWjI,IAAIrH,IAAO,CACtB,MAAMyP,EAAaH,GAAWnH,IAAInI,GAElC,OADAsP,GAAWrH,IAAIgI,EAAUR,GAClBA,CACX,CAGJ,MAAMG,EAAUF,EAA8C,GAArCG,GAAgB7P,EAAMkQ,EAAK7a,QAC9C2a,EAAShQ,EAAKwB,OAAO,EAAG0O,EAAK7a,OAASua,EAAOva,QAC7Coa,EAAatP,OAAO2P,OAAO,CAC7BC,SAAU/P,EAAKwB,OAAOwO,EAAO3a,QAC7B2K,KAAMA,EAAKwB,OAAO0O,EAAK7a,QACvB6a,OACAN,SACAI,SACAN,WAKJ,OAFAJ,GAAWrH,IAAIgI,EAAUR,GAElBA,CACX,EAnGaU,GAAeN,GACrB,SAASF,GAAiBtK,EAAK5P,GAGlC,OAFAA,EAASA,GAAU,EAEZ4P,EAAIhQ,OAASI,GAAU,GACvB4P,EAAI3P,WAAWD,KAAY,IAC3B4P,EAAI3P,WAAWD,EAAS,KAAO,EAC1C,CAEA,SAASoa,GAAgBxK,EAAK5P,GAI1B,GAHAA,EAASA,GAAU,EAGf4P,EAAIhQ,OAASI,GAAU,GAEnB4P,EAAI3P,WAAWD,KAAY,IAC3B4P,EAAI3P,WAAWD,EAAS,KAAO,GAAa,CAE5C,MAAM2a,EAAkB/K,EAAIjJ,QAAQ,IAAK3G,EAAS,GAElD,IAAyB,IAArB2a,EACA,OAAO/K,EAAI1K,UAAUlF,EAAQ2a,EAAkB,EAEvD,CAGJ,MAAO,EACX,CChCO,MAAMC,GAAkB,CAC3B,UACA,UACA,QACA,SACA,gBCME,GAAc,GAEdC,IAAgB,EAGtB,SAASxV,GAAQ8M,EAAO7T,GACpB,OAAiB,OAAV6T,GAAkBA,EAAM9N,OAAShH,IAAS8U,EAAMnB,MAAM/Q,WAAW,KAAO3B,CACnF,CAEA,SAASiH,GAAO4M,EAAOnS,EAAQ8a,GAC3B,KAAiB,OAAV3I,IAAmBA,EAAM9N,OAAS7G,IAAc2U,EAAM9N,OAASjG,KAClE+T,EAAQ2I,IAAe9a,GAG3B,OAAOA,CACX,CAEA,SAAS+a,GAAa5I,EAAO6I,EAAaC,EAAcjb,GACpD,IAAKmS,EACD,OAAO,EAGX,MAAM7T,EAAO6T,EAAMnB,MAAM/Q,WAAW+a,GAEpC,GAzBa,KAyBT1c,GAAqBA,IAAS,GAAa,CAC3C,GAAI2c,EAEA,OAAO,EAEXD,GACJ,CAEA,KAAOA,EAAc7I,EAAMnB,MAAMpR,OAAQob,IACrC,IAAK3c,GAAQ8T,EAAMnB,MAAM/Q,WAAW+a,IAEhC,OAAO,EAIf,OAAOhb,EAAS,CACpB,CAIA,SAASkb,GAAS/I,EAAOgJ,EAASL,GAC9B,IAAI3Z,GAAO,EACPnB,EAASuF,GAAO4M,EAAOgJ,EAASL,GAIpC,GAAc,QAFd3I,EAAQ2I,EAAa9a,IAGjB,OAAOmb,EAGX,GAAIhJ,EAAM9N,OAAS,GAAa,CAC5B,IAAIgB,GAAQ8M,EAxDH,MAwDuB9M,GAAQ8M,EAAO,IAS3C,OAAOgJ,EAJP,GAJAha,GAAO,EACPnB,EAASuF,GAAOuV,IAAe9a,GAASA,EAAQ8a,GAGlC,QAFd3I,EAAQ2I,EAAa9a,KAECmS,EAAM9N,OAAS,GACjC,OAAO,CAKnB,CAEA,IAAKlD,EAAM,CACP,MAAM7C,EAAO6T,EAAMnB,MAAM/Q,WAAW,GACpC,GAvES,KAuEL3B,GAAqBA,IAAS,GAE9B,OAAO,CAEf,CAEA,OAAOyc,GAAa5I,EAAOhR,EAAO,EAAI,EAAGA,EAAMnB,EACnD,CC3EA,SAAS,GAAQmS,EAAO7T,GACpB,OAAiB,OAAV6T,GAAkBA,EAAM9N,OAAShH,IAAS8U,EAAMnB,MAAM/Q,WAAW,KAAO3B,CACnF,CAMA,SAAS8c,GAAYjJ,EAAOnS,EAAQqb,GAChC,IAAIC,EAAS,EAEb,IAAK,IAAIlW,EAAMpF,EAAQoF,EAAM+M,EAAMnB,MAAMpR,OAAQwF,IAAO,CACpD,MAAM9G,EAAO6T,EAAMnB,MAAM/Q,WAAWmF,GAEpC,GAlBY,KAkBR9G,GAAwB+c,GAAwB,IAAXC,EAErC,OADAF,GAAYjJ,EAAOnS,EAASsb,EAAS,GAAG,GACjC,EAGX,IAAK/c,GAAWD,GACZ,OAAO,EAGX,KAAMgd,EAAS,EACX,OAAO,CAEf,CAEA,OAAOA,CACX,CAEA,SAASC,GAAyBC,EAAU5b,EAAQkb,GAChD,IAAKU,EACD,OAAO,EAGX,KAAO,GAAQV,EAAalb,GAvCX,KAuCmC,CAChD,KAAM4b,EAAW,EACb,OAAO,EAGX5b,GACJ,CAEA,OAAOA,CACX,CCvBA,MAAM6b,GAAoB,CAAC,QAAS,aAAc,iBAC5C,GAAc,IAAInJ,IAAI,CACxB,CAACvV,GAAekB,IAChB,CAACD,GAAiBC,IAClB,CAACH,GAAmBC,IACpB,CAACG,GAAkBC,MAIvB,SAAS8B,GAAW2P,EAAKtL,GACrB,OAAOA,EAAQsL,EAAIhQ,OAASgQ,EAAI3P,WAAWqE,GAAS,CACxD,CAEA,SAASoX,GAAMC,EAAQC,GACnB,OAAOtb,GAAOqb,EAAQ,EAAGA,EAAO/b,OAAQgc,EAC5C,CAEA,SAASC,GAASF,EAAQC,GACtB,IAAK,IAAIjc,EAAI,EAAGA,EAAIic,EAAShc,OAAQD,IACjC,GAAI+b,GAAMC,EAAQC,EAASjc,IACvB,OAAO,EAIf,OAAO,CACX,CAGA,SAASmc,GAAgBlM,EAAK5P,GAC1B,OAAIA,IAAW4P,EAAIhQ,OAAS,IAKI,KAA5BK,GAAW2P,EAAK5P,IAChB3B,GAAQ4B,GAAW2P,EAAK5P,EAAS,IAEzC,CAEA,SAAS+b,GAAWvD,EAAMxH,EAAOgL,GAC7B,GAAIxD,GAAsB,UAAdA,EAAKnU,KAAkB,CAC/B,MAAM4X,EAAMC,YACGpP,IAAXkP,GAAwBA,IAAWhL,EAAMpR,OACnCoR,EAAMjF,OAAO,EAAGiQ,GAChBhL,GAGV,GAAI5E,MAAM6P,GACN,OAAO,EAKX,GAAiB,OAAbzD,EAAKxX,KAAgBib,EAAMzD,EAAKxX,KAA2B,iBAAbwX,EAAKxX,IACnD,OAAO,EAKX,GAAiB,OAAbwX,EAAK1W,KAAgBma,EAAMzD,EAAK1W,KAA2B,iBAAb0W,EAAK1W,IACnD,OAAO,CAEf,CAEA,OAAO,CACX,CA6CA,SAASqa,GAAK1X,GACV,OAAO,SAAS0N,EAAO2I,EAActC,GACjC,OAAc,OAAVrG,EACO,EAGPA,EAAM9N,OAAStH,IAAiB8e,GAAS1J,EAAMnB,MAAOyK,IAjDlE,SAAyBtJ,EAAO2I,GAC5B,IAAI5W,EAAmB,EACnBkY,EAAe,GACfxc,EAAS,EAGbyc,EACA,EAAG,CACC,OAAQlK,EAAM9N,MACV,KAAKlG,GACL,KAAKF,GACL,KAAKF,GACD,GAAIoU,EAAM9N,OAASH,EACf,MAAMmY,EAKV,GAFAnY,EAAmBkY,EAAaxS,MAEJ,IAAxBwS,EAAaxc,OAAc,CAC3BA,IACA,MAAMyc,CACV,CAEA,MAEJ,KAAKtf,GACL,KAAKiB,GACL,KAAKF,GACL,KAAKI,GACDke,EAAazS,KAAKzF,GAClBA,EAAmB,GAAYwO,IAAIP,EAAM9N,MAIjDzE,GACJ,OAASuS,EAAQ2I,EAAalb,IAE9B,OAAOA,CACX,CAYmB0c,CAAgBnK,EAAO2I,GAG3BrW,EAAK0N,EAAO2I,EAActC,EACrC,CACJ,CAEA,SAASlV,GAAUiZ,GACf,OAAO,SAASpK,GACZ,OAAc,OAAVA,GAAkBA,EAAM9N,OAASkY,EAC1B,EAGJ,CACX,CACJ,CA0CA,SAASC,GAAYrK,GACjB,OAAc,OAAVA,GAAkBA,EAAM9N,OAASvH,IAKF,KAA/BmD,GAAWkS,EAAMnB,MAAO,IAAgD,KAA/B/Q,GAAWkS,EAAMnB,MAAO,GAJ1D,EAQJ,CACX,CA6KA,SAASyL,GAAUpY,GAKf,OAJIA,IACAA,EAAO,IAAI8M,IAAI9M,IAGZ,SAAS8N,EAAO2I,EAActC,GACjC,GAAc,OAAVrG,GAAkBA,EAAM9N,OAAS9G,GACjC,OAAO,EAGX,MAAMmf,EAAYxb,GAAciR,EAAMnB,MAAO,GAG7C,GAAa,OAAT3M,EAAe,CAEf,MAAMsY,EAAuBxK,EAAMnB,MAAMrK,QAAQ,KAAM+V,GACjDE,GAAiC,IAA1BD,GAAgCb,GAAgB3J,EAAMnB,MAAO2L,GAEpExK,EAAMnB,MAAM9L,UAAUwX,EAAWC,GADjCxK,EAAMnB,MAAMjF,OAAO2Q,GAGzB,IAAqC,IAAjCrY,EAAKuN,IAAIgL,EAAK7C,eACd,OAAO,CAEf,CAGA,OAAIgC,GAAWvD,EAAMrG,EAAMnB,MAAO0L,GACvB,EAGJ,CACX,CACJ,CA8BA,SAASG,GAAKpY,GAOV,MANoB,mBAATA,IACPA,EAAO,WACH,OAAO,CACX,GAGG,SAAS0N,EAAO2I,EAActC,GACjC,OAAc,OAAVrG,GAAkBA,EAAM9N,OAAS,IACL,IAAxB6X,OAAO/J,EAAMnB,OACN,EAIRvM,EAAK0N,EAAO2I,EAActC,EACrC,CACJ,CAqDO,MAAMsE,GAAa,CACtB,cAAexZ,GAAUxG,IACzB,iBAAkBwG,GAAUvG,IAC5B,mBAAoBuG,GAAUtG,IAC9B,aAAcsG,GAAUrG,IACxB,eAAgBqG,GAAU,IAC1B,mBAAoBA,GAAUpG,IAC9B,YAAaoG,GAAUnG,IACvB,gBAAiBmG,GAAUlG,IAC3B,cAAekG,GAAUjG,IACzB,eAAgBiG,GAAU,IAC1B,mBAAoBA,GAAUhG,IAC9B,kBAAmBgG,GAAU/F,IAC7B,mBAAoB+F,GAAU9F,IAC9B,YAAa8F,GAAU7F,IACvB,YAAa6F,GAAU5F,IACvB,cAAe4F,GAAU3F,IACzB,kBAAmB2F,GAAU1F,IAC7B,cAAe0F,GAAUzF,IACzB,UAAWyF,GAAUxF,IACrB,UAAWwF,GAAUvF,IACrB,UAAWuF,GAAUtF,IACrB,UAAWsF,GAAUrF,IACrB,UAAWqF,GAAUpF,IACrB,UAAWoF,GAAUnF,KAIZ4e,GAAkB,CAE3B,OAAUzZ,GAAU,IACpB,MAASA,GAAUxG,IAGnB,WAAcqf,IA7HlB,SAAoBhK,EAAO2I,EAActC,GAErC,OAAc,OAAVrG,GAAkBA,EAAM9N,OAAS/G,IAKjCye,GAAWvD,EAAMrG,EAAMnB,MAAOmB,EAAMnB,MAAMpR,OAAS,GAJ5C,EAQJ,CACX,IAoHI,KAAQid,KACR,OAAUV,IArFd,SAAgBhK,EAAO2I,EAActC,GACjC,GAAc,OAAVrG,EACA,OAAO,EAGX,MAAMuK,EAAYxb,GAAciR,EAAMnB,MAAO,GAE7C,OADiB0L,IAAcvK,EAAMnB,MAAMpR,QACzBkc,GAAgB3J,EAAMnB,MAAO0L,GAK3CX,GAAWvD,EAAMrG,EAAMnB,MAAO0L,GACvB,EAGJ,EARI,CASf,IAqEI,QAAWP,IAjEf,SAAiBhK,EAAO2I,EAActC,GAElC,GAAc,OAAVrG,GAAkBA,EAAM9N,OAAS,GACjC,OAAO,EAIX,IAAI1E,EAAmC,KAA/BM,GAAWkS,EAAMnB,MAAO,IACO,KAA/B/Q,GAAWkS,EAAMnB,MAAO,GAAgB,EAAI,EAGpD,KAAOrR,EAAIwS,EAAMnB,MAAMpR,OAAQD,IAC3B,IAAKtB,GAAQ4B,GAAWkS,EAAMnB,MAAOrR,IACjC,OAAO,EAKf,OAAIoc,GAAWvD,EAAMrG,EAAMnB,MAAOrR,GACvB,EAGJ,CACX,IA6CI,eAlYJ,SAAqBwS,GACjB,GAAc,OAAVA,GAAkBA,EAAM9N,OAASvH,GACjC,OAAO,EAGX,MAAMyN,EAAO4H,EAAMnB,MAAM+I,cAGzB,OAAI8B,GAAStR,EAAMqQ,KAKfc,GAAMnR,EAAM,WAJL,EAcJ,CACX,EA2WI,eAAgBiS,GAChB,uBAtVJ,SAA4BrK,GAExB,OAAKqK,GAAYrK,GAKG,OAAhBA,EAAMnB,MACC,EAGJ,EARI,CASf,EA2UI,YArUJ,SAAkBmB,GACd,GAAc,OAAVA,GAAkBA,EAAM9N,OAASpH,GACjC,OAAO,EAGX,MAAM2C,EAASuS,EAAMnB,MAAMpR,OAG3B,GAAe,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,EAChD,OAAO,EAGX,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IACxB,IAAKpB,GAAW0B,GAAWkS,EAAMnB,MAAOrR,IACpC,OAAO,EAIf,OAAO,CACX,EAmTI,cAjTJ,SAAoBwS,GAChB,OAAc,OAAVA,GAAkBA,EAAM9N,OAASpH,GAC1B,EAGNmC,GAAkBa,GAAWkS,EAAMnB,MAAO,GAAI/Q,GAAWkS,EAAMnB,MAAO,GAAI/Q,GAAWkS,EAAMnB,MAAO,IAIhG,EAHI,CAIf,EAwSI,YFheW,SAAiBmB,EAAO2I,GAEnC,IAAI9a,EAAS,EAEb,IAAKmS,EACD,OAAO,EAIX,GAAIA,EAAM9N,OAAS,GACf,OAAO0W,GAAa5I,EAAO,EAvFhB,MAuF+BnS,GAQzC,GAAImS,EAAM9N,OAASvH,IAASqV,EAAMnB,MAAM/Q,WAAW,KAAO,GAAa,CAExE,IAAKE,GAAQgS,EAAMnB,MAAO,EAnGxB,KAoGE,OAAO,EAGX,OAAQmB,EAAMnB,MAAMpR,QAIhB,KAAK,EACD,OAAOsb,GAASJ,IAAe9a,GAASA,EAAQ8a,GAGpD,KAAK,EACD,OAAI3I,EAAMnB,MAAM/Q,WAAW,KAAO,GACvB,GAGXD,EAASuF,GAAOuV,IAAe9a,GAASA,EAAQ8a,GAGzCC,GAFP5I,EAAQ2I,EAAa9a,GAEM,EAAG6a,GAAe7a,IAGjD,QACI,OAAImS,EAAMnB,MAAM/Q,WAAW,KAAO,GACvB,EAGJ8a,GAAa5I,EAAO,EAAG0I,GAAe7a,GAEzD,MAOK,GAAImS,EAAM9N,OAASvH,IAAUuI,GAAQ8M,EA1I7B,KA0IiD2I,EAAa9a,EAAS,GAAGqE,OAASvH,GAAQ,CAMpG,GAJIqV,EAAM9N,OAASvH,KACfqV,EAAQ2I,IAAe9a,IAGb,OAAVmS,IAAmBhS,GAAQgS,EAAMnB,MAAO,EA9I1C,KA+IE,OAAO,EAGX,OAAQmB,EAAMnB,MAAMpR,QAIhB,KAAK,EACD,OAAOsb,GAASJ,IAAe9a,GAASA,EAAQ8a,GAGpD,KAAK,EACD,OAAI3I,EAAMnB,MAAM/Q,WAAW,KAAO,GACvB,GAGXD,EAASuF,GAAOuV,IAAe9a,GAASA,EAAQ8a,GAGzCC,GAFP5I,EAAQ2I,EAAa9a,GAEM,EAAG6a,GAAe7a,IAGjD,QACI,OAAImS,EAAMnB,MAAM/Q,WAAW,KAAO,GACvB,EAGJ8a,GAAa5I,EAAO,EAAG0I,GAAe7a,GAEzD,MAOK,GAAImS,EAAM9N,OAAS9G,GAAW,CAC/B,IAAIe,EAAO6T,EAAMnB,MAAM/Q,WAAW,GAC9BkB,EAvLK,KAuLE7C,GAAqBA,IAAS,GAAc,EAAI,EACvDqB,EAAIwB,EAER,KAAOxB,EAAIwS,EAAMnB,MAAMpR,QACdvB,GAAQ8T,EAAMnB,MAAM/Q,WAAWN,IADTA,KAM/B,OAAIA,IAAMwB,EAEC,EAGNhB,GAAQgS,EAAMnB,MAAOrR,EAnMxB,KA0MEA,EAAI,IAAMwS,EAAMnB,MAAMpR,OACfsb,GAASJ,IAAe9a,GAASA,EAAQ8a,GAE5C3I,EAAMnB,MAAM/Q,WAAWN,EAAI,KAAO,GAC3B,EAIPA,EAAI,IAAMwS,EAAMnB,MAAMpR,QACtBI,EAASuF,GAAOuV,IAAe9a,GAASA,EAAQ8a,GAGzCC,GAFP5I,EAAQ2I,EAAa9a,GAEM,EAAG6a,GAAe7a,IAItC+a,GAAa5I,EAAOxS,EAAI,EAAGkb,GAAe7a,GAtB9C,CAyBf,CAEA,OAAO,CACX,EEgVI,OD7eW,SAAgBmS,EAAO2I,GAClC,IAAIlb,EAAS,EAGb,GAAc,OAAVuS,GAAkBA,EAAM9N,OAASvH,KAAUqD,GAAQgS,EAAMnB,MAAO,EAxE9D,KAyEF,OAAO,EAIX,GAAc,QADdmB,EAAQ2I,IAAelb,IAEnB,OAAO,EAKX,GAAI,GAAQuS,EAtFC,IAwFT,OAAc,QADdA,EAAQ2I,IAAelb,IAEZ,EAGPuS,EAAM9N,OAASvH,GAERye,GAAyBH,GAAYjJ,EAAO,GAAG,KAASvS,EAAQkb,GAGvE,GAAQ3I,EA/FC,IAiGFoJ,GAAyB,IAAK3b,EAAQkb,GAI1C,EAMX,GAAI3I,EAAM9N,OAAS,GAAa,CAC5B,MAAM2Y,EAAoB5B,GAAYjJ,EAAO,GAAG,GAChD,OAA0B,IAAtB6K,EACO,EAIG,QADd7K,EAAQ2I,IAAelb,IAGZA,EAGPuS,EAAM9N,OAAS9G,IAAa4U,EAAM9N,OAAS,GAhHvD,SAAoB8N,EAAO7T,GACvB,OAAO6T,EAAMnB,MAAM/Q,WAAW,KAAO3B,CACzC,CAiHiB2e,CAAW9K,EA3HR,KA2HgCiJ,GAAYjJ,EAAO,GAAG,GAIvDvS,EAAS,EAHL,EAOR2b,GAAyByB,EAAmBpd,EAAQkb,EAC/D,CAGA,OAAI3I,EAAM9N,OAAS9G,GACRge,GAAyBH,GAAYjJ,EAAO,GAAG,KAASvS,EAAQkb,GAGpE,CACX,ECwaI,oBAtSJ,SAA0B3I,EAAO2I,GAC7B,IAAK3I,EACD,OAAO,EAGX,IAAIjO,EAAmB,EACnBkY,EAAe,GACfxc,EAAS,EAIbyc,EACA,EAAG,CACC,OAAQlK,EAAM9N,MAEV,KAAKnH,GACL,KAAKE,GACD,MAAMif,EAGV,KAAKle,GACL,KAAKF,GACL,KAAKF,GACD,GAAIoU,EAAM9N,OAASH,EACf,MAAMmY,EAGVnY,EAAmBkY,EAAaxS,MAChC,MAGJ,KAAKhM,GACD,GAAyB,IAArBsG,EACA,MAAMmY,EAGV,MAGJ,KAAKhf,GACD,GAAyB,IAArB6G,GAA0C,MAAhBiO,EAAMnB,MAChC,MAAMqL,EAGV,MAEJ,KAAKtf,GACL,KAAKiB,GACL,KAAKF,GACL,KAAKI,GACDke,EAAazS,KAAKzF,GAClBA,EAAmB,GAAYwO,IAAIP,EAAM9N,MAIjDzE,GACJ,OAASuS,EAAQ2I,EAAalb,IAE9B,OAAOA,CACX,EA4OI,YAtOJ,SAAkBuS,EAAO2I,GACrB,IAAK3I,EACD,OAAO,EAGX,IAAIjO,EAAmB,EACnBkY,EAAe,GACfxc,EAAS,EAIbyc,EACA,EAAG,CACC,OAAQlK,EAAM9N,MAEV,KAAKnH,GACL,KAAKE,GACD,MAAMif,EAGV,KAAKle,GACL,KAAKF,GACL,KAAKF,GACD,GAAIoU,EAAM9N,OAASH,EACf,MAAMmY,EAGVnY,EAAmBkY,EAAaxS,MAChC,MAEJ,KAAK7M,GACL,KAAKiB,GACL,KAAKF,GACL,KAAKI,GACDke,EAAazS,KAAKzF,GAClBA,EAAmB,GAAYwO,IAAIP,EAAM9N,MAIjDzE,GACJ,OAASuS,EAAQ2I,EAAalb,IAE9B,OAAOA,CACX,GA0MO,SAASsd,GAAqBC,GACjC,MAAM,MACFC,EAAK,QACLC,EAAO,UACPC,EAAS,KACTC,EAAI,OACJ3d,EAAM,WACN4d,EAAU,UACVC,EAAS,KACTC,GACAP,GAAS,CAAC,EAEd,MAAO,CACH,UAAahB,GAAKM,GAAU,OAC5B,MAASN,GAAKM,GAAUW,IACxB,QAAWjB,GAAKM,GAAUY,IAC1B,UAAalB,GAAKM,GAAUa,IAC5B,KAAQnB,GAAKM,GAAUc,IACvB,OAAUpB,GAAKU,GAAKJ,GAAU7c,KAC9B,WAAcuc,GAAKM,GAAUe,IAC7B,UAAarB,GAAKM,GAAUgB,IAC5B,KAAQtB,GAAKM,GAAUiB,IAE/B,CCrmBO,MAAM,GAAS,CAElB,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAEnC,KAAM,MACN,KAAM,MACN,MAAO,OACP,KAAM,MACN,KAAM,MACN,KAAM,MAEN,KAAM,MAAO,MAAO,MACpB,KAAM,MAAO,MAAO,MACpB,KAAM,MAAO,MAAO,MACpB,KAAM,MAAO,MAAO,MACpB,OAAQ,QAAS,QAAS,QAC1B,OAAQ,QAAS,QAAS,QAE1B,MAAO,MAAO,MAAO,MAAO,QAAS,SAE5BN,GAAQ,CAAC,MAAO,OAAQ,MAAO,QAC/BM,GAAO,CAAC,IAAK,MACbJ,GAAY,CAAC,KAAM,OACnBE,GAAa,CAAC,MAAO,OAAQ,OAAQ,KACrCD,GAAO,CAAC,MACRF,GAAU,CAAC,MACXI,GAAY,CAAC,MCxBnB,SAAS,GAAYjT,EAASmT,EAAO3d,GACxC,OAAO0K,OAAOK,OAAOT,GAAkB,cAAeE,GAAU,CAC5DmT,QACA3d,SACA2Z,WAAYnP,EACZA,QAASA,SACEmT,EADFnT,OAEE,IAAI/K,OAAOO,GAAU2d,EAAM/d,QAAU,GAAG8L,KAAK,KAAO,KAEvE,CCTA,MAKMkS,GAAY,IAAIxa,WAAW,KAAKuF,KAAI,CAACkV,EAAGjZ,IAC1C,gBAAgBwL,KAAK5O,OAAO+O,aAAa3L,IAAQ,EAAI,IAGlD,MAAMkZ,GACT,WAAAnb,CAAYiN,GACRhN,KAAKgN,IAAMA,EACXhN,KAAKwC,IAAM,CACf,CAEA,UAAAnF,CAAWmF,GACP,OAAOA,EAAMxC,KAAKgN,IAAIhQ,OAASgD,KAAKgN,IAAI3P,WAAWmF,GAAO,CAC9D,CACA,QAAAuK,GACI,OAAO/M,KAAK3C,WAAW2C,KAAKwC,IAChC,CACA,cAAA2Y,CAAezf,EAAOsE,KAAK+M,YACvB,OAAOrR,EAAO,KAA2B,IAApBsf,GAAUtf,EACnC,CACA,YAAAqT,GACI,OAAO/O,KAAK3C,WAAW2C,KAAKwC,IAAM,EACtC,CACA,aAAA4Y,CAAc5Y,GACV,OAAOxC,KAAK3C,WAAW2C,KAAKqb,UAAU7Y,GAC1C,CACA,MAAA8Y,GACItb,KAAKwC,IAAMxC,KAAKqb,UAAUrb,KAAKwC,IACnC,CACA,SAAA6Y,CAAU7Y,GACN,KAAOA,EAAMxC,KAAKgN,IAAIhQ,OAAQwF,IAAO,CACjC,MAAM9G,EAAOsE,KAAKgN,IAAI3P,WAAWmF,GACjC,GAjCF,KAiCM9G,GAnCN,KAmCoBA,GAlCpB,KAkCkCA,GAhC9B,KAgC4CA,GApC9C,IAoCgEA,EAC5D,KAER,CAEA,OAAO8G,CACX,CACA,cAAA+Y,CAAe3d,GACX,OAAOoC,KAAKgN,IAAI1K,UAAUtC,KAAKwC,IAAKxC,KAAKwC,IAAM5E,EACnD,CACA,GAAAsP,CAAIxR,GACIsE,KAAK+M,aAAerR,GACpBsE,KAAK6H,MAAM,WAAajJ,OAAO+O,aAAajS,GAAQ,KAGxDsE,KAAKwC,KACT,CACA,IAAAgZ,GACI,OAAOxb,KAAKwC,IAAMxC,KAAKgN,IAAIhQ,OAASgD,KAAKgN,IAAIyO,OAAOzb,KAAKwC,OAAS,EACtE,CACA,KAAAqF,CAAMD,GACF,MAAM,IAAI,GAAYA,EAAS5H,KAAKgN,IAAKhN,KAAKwC,IAClD,CAEA,UAAAkZ,GACI,OAAO1b,KAAKub,eAAevb,KAAKqb,UAAUrb,KAAKwC,KACnD,CACA,QAAAmZ,GACI,IAAI/d,EAAMoC,KAAKwC,IAEf,KAAO5E,EAAMoC,KAAKgN,IAAIhQ,OAAQY,IAAO,CACjC,MAAMlC,EAAOsE,KAAKgN,IAAI3P,WAAWO,GACjC,GAAIlC,GAAQ,KAA2B,IAApBsf,GAAUtf,GACzB,KAER,CAMA,OAJIsE,KAAKwC,MAAQ5E,GACboC,KAAK6H,MAAM,oBAGR7H,KAAKub,eAAe3d,EAC/B,CACA,UAAAge,GACI,IAAIhe,EAAMoC,KAAKwC,IAEf,KAAO5E,EAAMoC,KAAKgN,IAAIhQ,OAAQY,IAAO,CACjC,MAAMlC,EAAOsE,KAAKgN,IAAI3P,WAAWO,GAEjC,GAAIlC,EAAO,IAAMA,EAAO,GACpB,KAER,CAMA,OAJIsE,KAAKwC,MAAQ5E,GACboC,KAAK6H,MAAM,mBAGR7H,KAAKub,eAAe3d,EAC/B,CACA,UAAAie,GACI,MAAMje,EAAMoC,KAAKgN,IAAIjJ,QAAQ,IAAM/D,KAAKwC,IAAM,GAO9C,OALa,IAAT5E,IACAoC,KAAKwC,IAAMxC,KAAKgN,IAAIhQ,OACpBgD,KAAK6H,MAAM,yBAGR7H,KAAKub,eAAe3d,EAAM,EACrC,ECzGJ,MAAM,GAAM,EACN,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAQ,GACR,GAAkB,GAClB,GAAa,GACbke,GAAY,GACZC,GAAa,GACbC,GAAkB,GAClBC,GAAmB,GACnBC,GAAW,GACX,GAAW,GACXC,GAAQ,GACRC,GAAa,GACbC,GAAe,GACfC,GAAkB,GAClB,GAAe,GACfC,GAAe,GACfC,GAAoB,GACpBC,GAAqB,GACrB,GAAmB,IACnBC,GAAe,IACfC,GAAoB,IACpBC,GAAW,KACXC,GAAwB,CAC1B,IAAK,EACL,KAAM,EACN,KAAM,EACN,IAAK,GAGT,SAASC,GAAoBC,GACzB,IAAI3e,EAAM,KACNc,EAAM,KAsBV,OApBA6d,EAAQ7P,IAAI,IACZ6P,EAAQzB,SAERld,EAAM2e,EAAQnB,WAAWmB,GACzBA,EAAQzB,SAEJyB,EAAQhQ,aAAeoP,IACvBY,EAAQva,MACRua,EAAQzB,SAEJyB,EAAQhQ,aAAe4P,KACvBzd,EAAM6d,EAAQnB,WAAWmB,GACzBA,EAAQzB,WAGZpc,EAAMd,EAGV2e,EAAQ7P,IAAIyP,IAEL,CACHve,IAAKkb,OAAOlb,GACZc,IAAKA,EAAMoa,OAAOpa,GAAO,EAEjC,CAgFA,SAAS8d,GAAgBD,EAASzR,GAC9B,MAAMmK,EA/EV,SAAwBsH,GACpB,IAAIE,EAAQ,KACRvH,GAAQ,EAEZ,OAAQqH,EAAQhQ,YACZ,KAAKmP,GACDa,EAAQva,MAERya,EAAQ,CACJ7e,IAAK,EACLc,IAAK,GAGT,MAEJ,KAAK,GACD6d,EAAQva,MAERya,EAAQ,CACJ7e,IAAK,EACLc,IAAK,GAGT,MAEJ,KAAK,GACD6d,EAAQva,MAERya,EAAQ,CACJ7e,IAAK,EACLc,IAAK,GAGT,MAEJ,KAAK,GACD6d,EAAQva,MAERkT,GAAQ,EAEJqH,EAAQhQ,aAAe,GACvBkQ,EAAQH,GAAoBC,GACrBA,EAAQhQ,aAAe,IAK9BgQ,EAAQva,MACRya,EAAQ,CACJ7e,IAAK,EACLc,IAAK,IAGT+d,EAAQ,CACJ7e,IAAK,EACLc,IAAK,GAIb,MAEJ,KAAK,GACD+d,EAAQH,GAAoBC,GAC5B,MAEJ,QACI,OAAO,KAGf,MAAO,CACHtb,KAAM,aACNiU,QACAtX,IAAK6e,EAAM7e,IACXc,IAAK+d,EAAM/d,IACXmW,KAAM,KAEd,CAGuB6H,CAAeH,GAElC,OAAmB,OAAftH,GACAA,EAAWJ,KAAO/J,EAWdyR,EAAQhQ,aAAe,IACvBgQ,EAAQ1f,WAAW0f,EAAQva,IAAM,KAAO,GACjCwa,GAAgBD,EAAStH,GAG7BA,GAGJnK,CACX,CAEA,SAAS6R,GAAWJ,GAChB,MAAMK,EAAKL,EAAQvB,OAEnB,MAAW,KAAP4B,EACO,KAGJJ,GAAgBD,EAAS,CAC5Btb,KAAM,QACN2M,MAAOgP,GAEf,CA+EA,SAASC,GAASN,GACd,IAAIpV,EACAiO,EAAO,KAMX,GAJAmH,EAAQ7P,IAAImP,IACZ1U,EAAOoV,EAAQpB,WAGF,iBAAThU,EAAyB,CACzBoV,EAAQ7P,IAAIsP,IAEZ,MAAMc,EAAgBC,GAAkBR,EAASN,IAKjD,OAHAM,EAAQ7P,IAAIuP,IACZM,EAAQ7P,IAAIoP,IAELU,GAAgBD,EAAS,CAC5Btb,KAAM,UACN4T,KAAqC,IAA/BiI,EAAclI,MAAMpY,OACpBsgB,EAAclI,MAAM,GACpBkI,GAEd,CAeA,OAbIP,EAAQhQ,aAAeiP,IACvBe,EAAQhO,iBAAmBkN,KAC3Bc,EAAQva,KAAO,EACfmF,GAAQ,MAGRoV,EAAQ1f,WAAW0f,EAAQ1B,UAAU0B,EAAQva,QAAUga,KACvDO,EAAQzB,SACR1F,EArFR,SAAuBmH,GAEnB,IAAI3e,EAAM,KACNc,EAAM,KACNX,EAAO,EA0CX,OAxCAwe,EAAQ7P,IAAIsP,IAERO,EAAQhQ,aAAeqP,KACvBW,EAAQvB,OACRjd,GAAQ,IAGC,GAATA,GAAcwe,EAAQhQ,aAAe6P,GACrCG,EAAQvB,QAERpd,EAAMG,EAAO+a,OAAOyD,EAAQnB,WAAWmB,IAEnCA,EAAQ5B,mBACR/c,GAAO2e,EAAQpB,aAIvBoB,EAAQzB,SACRyB,EAAQ7P,IAAIiP,IACZY,EAAQzB,SAEJyB,EAAQhQ,aAAe6P,GACvBG,EAAQvB,QAERjd,EAAO,EAEHwe,EAAQhQ,aAAeqP,KACvBW,EAAQvB,OACRjd,GAAQ,GAGZW,EAAMX,EAAO+a,OAAOyD,EAAQnB,WAAWmB,IAEnCA,EAAQ5B,mBACRjc,GAAO6d,EAAQpB,aAIvBoB,EAAQ7P,IAAIuP,IAEL,CACHhb,KAAM,QACNrD,MACAc,MAER,CAkCese,CAAcT,IAGzBA,EAAQ7P,IAAIoP,IAELU,GAAgBD,EAAS,CAC5Btb,KAAM,OACNkG,OACAiO,QAER,CAoBA,SAAS6H,GAAarI,EAAOsI,GACzB,SAASC,EAAYvI,EAAOD,GACxB,MAAO,CACH1T,KAAM,QACN2T,QACAD,aACAK,eAAe,EACfF,UAAU,EAElB,CAEA,IAAIH,EAKJ,IAHAuI,EAAc5V,OAAO0C,KAAKkT,GACrBhJ,MAAK,CAACkJ,EAAGC,IAAMhB,GAAsBe,GAAKf,GAAsBgB,KAE9DH,EAAY1gB,OAAS,GAAG,CAC3BmY,EAAauI,EAAYxW,QAEzB,IAAInK,EAAI,EACJ+gB,EAAgB,EAEpB,KAAO/gB,EAAIqY,EAAMpY,OAAQD,IAAK,CAC1B,MAAMsY,EAAOD,EAAMrY,GAED,eAAdsY,EAAK5T,OACD4T,EAAKjH,QAAU+G,IACQ,IAAnB2I,IACAA,EAAgB/gB,EAAI,GAExBqY,EAAM2I,OAAOhhB,EAAG,GAChBA,OAEuB,IAAnB+gB,GAAwB/gB,EAAI+gB,EAAgB,IAC5C1I,EAAM2I,OACFD,EACA/gB,EAAI+gB,EACJH,EAAYvI,EAAMzM,MAAMmV,EAAe/gB,GAAIoY,IAE/CpY,EAAI+gB,EAAgB,GAExBA,GAAiB,GAG7B,EAEuB,IAAnBA,GAAwBJ,EAAY1gB,QACpCoY,EAAM2I,OACFD,EACA/gB,EAAI+gB,EACJH,EAAYvI,EAAMzM,MAAMmV,EAAe/gB,GAAIoY,GAGvD,CAEA,OAAOA,CACX,CAEA,SAASoI,GAAkBR,EAASiB,GAChC,MAAMN,EAAc5V,OAAOC,OAAO,MAC5BqN,EAAQ,GACd,IAAI7F,EACA0O,EAAY,KACZC,EAAenB,EAAQva,IAE3B,KAAOua,EAAQhQ,aAAeiR,IAAiBzO,EAAQiM,GAAKuB,EAASiB,KAC9C,WAAfzO,EAAM9N,OACa,eAAf8N,EAAM9N,MAEY,OAAdwc,GAAyC,eAAnBA,EAAUxc,OAChCsb,EAAQva,IAAM0b,EACdnB,EAAQlV,MAAM,0BAGlB6V,EAAYnO,EAAMnB,QAAS,GACN,OAAd6P,GAAyC,eAAnBA,EAAUxc,OACvCic,EAAY,MAAO,EACnBtI,EAAMrO,KAAK,CACPtF,KAAM,aACN2M,MAAO,OAIfgH,EAAMrO,KAAKwI,GACX0O,EAAY1O,EACZ2O,EAAenB,EAAQva,KAU/B,OALkB,OAAdyb,GAAyC,eAAnBA,EAAUxc,OAChCsb,EAAQva,KAAO0b,EACfnB,EAAQlV,MAAM,0BAGX,CACHpG,KAAM,QACN2T,QACAD,WAAYsI,GAAarI,EAAOsI,IAAgB,IAChDlI,eAAe,EACfF,UAAU,EAElB,CAmBA,SAASkG,GAAKuB,EAASiB,GACnB,IAAItiB,EAAOqhB,EAAQhQ,WAEnB,OAAQrR,GACJ,KAAK+gB,GAED,MAEJ,KAAKD,GACD,OAAOQ,GAAgBD,EA1BnC,SAAmBA,EAASiB,GACxB,IAAIhY,EAaJ,OAXA+W,EAAQ7P,IAAIsP,IACZxW,EAASuX,GAAkBR,EAASiB,GACpCjB,EAAQ7P,IAAIuP,IAEZzW,EAAOsP,UAAW,EAEdyH,EAAQhQ,aAAe,KACvBgQ,EAAQva,MACRwD,EAAOwP,eAAgB,GAGpBxP,CACX,CAW4CmY,CAAUpB,EAASiB,IAEvD,KAAK3B,GACD,OAAOU,EAAQhO,iBAAmBgN,GAhR9C,SAAsBgB,GAClB,IAAIpV,EAUJ,OARAoV,EAAQ7P,IAAImP,IACZU,EAAQ7P,IAAI6O,IAEZpU,EAAOoV,EAAQpB,WAEfoB,EAAQ7P,IAAI6O,IACZgB,EAAQ7P,IAAIoP,IAELU,GAAgBD,EAAS,CAC5Btb,KAAM,WACNkG,QAER,CAkQkByW,CAAarB,GACbM,GAASN,GAEnB,KAAKL,GACD,MAAO,CACHjb,KAAM,aACN2M,MAAO2O,EAAQxB,eACXwB,EAAQva,KAAOua,EAAQhO,iBAAmB2N,GAAe,EAAI,KAIzE,KAAKZ,GAID,OAHAiB,EAAQva,MACRua,EAAQ7P,IAAI4O,IAEL,CACHra,KAAM,aACN2M,MAAO,MAGf,KAAK+N,GAED,OADAY,EAAQva,MACD,CACHf,KAAM,SAGd,KAAKsa,GACD,OAAOiB,GAAgBD,EAAS,CAC5Btb,KAAM,SACN2M,MAAO2O,EAAQlB,eAGvB,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACD,MAAO,CACHpa,KAAM,SACN2M,MAAO2O,EAAQrB,cAGvB,KAAKa,GAGD,OAFA7gB,EAAOqhB,EAAQhO,eAEXgO,EAAQ5B,eAAezf,IACvBqhB,EAAQva,MACD,CACHf,KAAM,YACNkG,KAAMoV,EAAQpB,aAIfwB,GAAWJ,GAEtB,KAAKb,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAED,MAEJ,KAAK,GAKD,GAFAxgB,EAAOqhB,EAAQhO,eAEXrT,EAAO,IAAMA,EAAO,GACpB,OAAOyhB,GAAWJ,GAGtB,MAEJ,QACI,OAAIA,EAAQ5B,eAAezf,GAnOvC,SAA+BqhB,GAC3B,MAAMpV,EAAOoV,EAAQpB,WAErB,OAAIoB,EAAQhQ,aAAeiP,IACvBe,EAAQva,MAED,CACHf,KAAM,WACNkG,SAIDqV,GAAgBD,EAAS,CAC5Btb,KAAM,UACNkG,QAER,CAoNuB0W,CAAsBtB,GAG1BI,GAAWJ,GAE9B,CAEO,SAAStS,GAAMtN,GAClB,MAAM4f,EAAU,IAAI7B,GAAQ/d,GACtB6I,EAASuX,GAAkBR,GAOjC,OALIA,EAAQva,MAAQrF,EAAOH,QACvB+f,EAAQlV,MAAM,oBAIU,IAAxB7B,EAAOoP,MAAMpY,QAAyC,UAAzBgJ,EAAOoP,MAAM,GAAG3T,KACtCuE,EAAOoP,MAAM,GAGjBpP,CACX,CCviBA,MAAM,GAAO,WAAY,EAEzB,SAAS,GAAeoI,GACpB,MAAwB,mBAAVA,EAAuBA,EAAQ,EACjD,CAEO,SAASkE,GAAKhH,EAAM2C,EAASlE,GA+BhC,IAAI8J,EAAQ,GACRE,EAAQ,GASZ,GAPuB,mBAAZ9F,EACP4F,EAAQ5F,EACDA,IACP4F,EAAQ,GAAe5F,EAAQ4F,OAC/BE,EAAQ,GAAe9F,EAAQ8F,QAG/BF,IAAU,IAAQE,IAAU,GAC5B,MAAM,IAAInN,MAAM,gFAzCpB,SAAS0L,EAAKhH,GAGV,OAFAuI,EAAMrO,KAAKuE,EAASuB,GAEZA,EAAK7J,MACT,IAAK,QACD6J,EAAK8J,MAAM9P,QAAQgN,GACnB,MAEJ,IAAK,aACL,IAAK,UACDA,EAAKhH,EAAK+J,MACV,MAEJ,IAAK,OACL,IAAK,WACL,IAAK,UACL,IAAK,YACL,IAAK,WACL,IAAK,SACL,IAAK,QACL,IAAK,QACD,MAEJ,QACI,MAAM,IAAIzO,MAAM,iBAAmB0E,EAAK7J,MAGhDsS,EAAMvO,KAAKuE,EAASuB,EACxB,CAgBAgH,CAAKhH,EACT,CClDA,MAAMgT,GAAc,CAChB,SAAArO,CAAUJ,GACN,MAAMxM,EAAS,GACf,IAAIkb,EAAU,KAEd,MAAO,IACA1O,EACH,IAAAvE,CAAKA,GACD,MAAMkT,EAAMD,EACZA,EAAUjT,EACVuE,EAASvE,KAAK9F,KAAKxF,KAAMsL,GACzBiT,EAAUC,CACd,EACA,IAAAvP,CAAKb,EAAO3M,EAAMoP,GACdxN,EAAO0D,KAAK,CACRtF,OACA2M,QACA9C,KAAMuF,EAAO,KAAO0N,GAE5B,EACAvY,OAAM,IACK3C,EAGnB,GAiBW,YAAS+K,EAAOmI,GAC3B,MAAqB,iBAAVnI,EAff,SAAwBpB,GACpB,MAAM3J,EAAS,GAUf,OARAzC,GAASoM,GAAK,CAACvL,EAAM9D,EAAOC,IACxByF,EAAO0D,KAAK,CACRtF,OACA2M,MAAOpB,EAAIrE,MAAMhL,EAAOC,GACxB0N,KAAM,SAIPjI,CACX,CAIeob,CAAerQ,GAGnBmI,EAAO5G,SAASvB,EAAOkQ,GAClC,CC/CO,MAAMI,GAAQ,CAAEjd,KAAM,SAChBkd,GAAW,CAAEld,KAAM,YACnBmd,GAAiB,CAAEnd,KAAM,iBAKtC,SAASod,GAAgBzV,EAAO0V,EAAYC,GAExC,OAAID,IAAeJ,IAASK,IAAeJ,IAIvCvV,IAAUsV,IAASI,IAAeJ,IAASK,IAAeL,GAHnDtV,GAOQ,OAAfA,EAAM3H,MAAiB2H,EAAM4V,OAASL,IAAYG,IAAeJ,KACjEI,EAAa1V,EAAM6V,KACnB7V,EAAQA,EAAMA,OAGX,CACH3H,KAAM,KACN2H,QACA6V,KAAMH,EACNE,KAAMD,GAEd,CAEA,SAASG,GAAevX,GACpB,OACIA,EAAK3K,OAAS,GA5BE,KA6BhB2K,EAAKtK,WAAWsK,EAAK3K,OAAS,IA5Bb,KA6BjB2K,EAAKtK,WAAWsK,EAAK3K,OAAS,EAEtC,CAEA,SAASmiB,GAAgB9J,GACrB,MACkB,YAAdA,EAAK5T,MACS,cAAd4T,EAAK5T,MACS,aAAd4T,EAAK5T,MACS,SAAd4T,EAAK5T,MAAmByd,GAAe7J,EAAK1N,KAEpD,CAEA,SAASyX,GAAUhK,EAAOD,EAAa,IAAKG,GAAW,GACnD,MAAO,CACH7T,KAAM,QACN2T,QACAD,aACAK,eAAe,EACfF,WAER,CAEA,SAAS+J,GAAmB/T,EAAMgU,EAAcC,EAAU,IAAIhR,KAC1D,IAAKgR,EAAQvQ,IAAI1D,GAGb,OAFAiU,EAAQC,IAAIlU,GAEJA,EAAK7J,MACT,IAAK,KACD6J,EAAKlC,MAAQiW,GAAmB/T,EAAKlC,MAAOkW,EAAcC,GAC1DjU,EAAK2T,KAAOI,GAAmB/T,EAAK2T,KAAMK,EAAcC,GACxDjU,EAAK0T,KAAOK,GAAmB/T,EAAK0T,KAAMM,EAAcC,GACxD,MAEJ,IAAK,OACD,OAAOD,EAAahU,EAAK3D,OAAS2D,EAI9C,OAAOA,CACX,CAEA,SAASmU,GAAqBtK,EAAYC,EAAOsK,GAC7C,OAAQvK,GACJ,IAAK,IAAK,CAYN,IAAInP,EAAS0Y,GAEb,IAAK,IAAI3hB,EAAIqY,EAAMpY,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAGxCiJ,EAAS6Y,GAFIzJ,EAAMrY,GAIfiJ,EACA2Y,GAER,CAEA,OAAO3Y,CACX,CAEA,IAAK,IAAK,CAaN,IAAIA,EAAS2Y,GACT5Y,EAAM,KAEV,IAAK,IAAIhJ,EAAIqY,EAAMpY,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACxC,IAAIsY,EAAOD,EAAMrY,GAGjB,GAAIoiB,GAAgB9J,KACJ,OAARtP,GAAgBhJ,EAAI,GAAKoiB,GAAgB/J,EAAMrY,EAAI,MACnDgJ,EAAM+B,OAAOC,OAAO,MACpB/B,EAAS6Y,GACL,CACIpd,KAAM,OACNsE,OAEJ2Y,GACA1Y,IAII,OAARD,GAAc,CACd,MAAM2L,GAAOwN,GAAe7J,EAAK1N,MAAQ0N,EAAK1N,KAAKgB,MAAM,GAAI,GAAK0M,EAAK1N,MAAMwP,cAC7E,GAAIzF,KAAO3L,IAAQ,EAAO,CACtBA,EAAI2L,GAAO2D,EACX,QACJ,CACJ,CAGJtP,EAAM,KAGNC,EAAS6Y,GACLxJ,EACAqJ,GACA1Y,EAER,CAEA,OAAOA,CACX,CAEA,IAAK,KAAM,CAMP,GAAIoP,EAAMpY,OAAS,EACf,MAAO,CACHyE,KAAM,YACN2T,QACAuK,KAAK,GA2Bb,IAAI3Z,EAAS2Y,GAEb,IAAK,IAAI5hB,EAAIqY,EAAMpY,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACxC,MAAMsY,EAAOD,EAAMrY,GACnB,IAAI6iB,EAGAA,EADAxK,EAAMpY,OAAS,EACFyiB,GACTtK,EACAC,EAAMlP,QAAO,SAAS2Z,GAClB,OAAOA,IAAiBxK,CAC5B,KACA,GAGSqJ,GAGjB1Y,EAAS6Y,GACLxJ,EACAuK,EACA5Z,EAER,CAEA,OAAOA,CACX,CAEA,IAAK,KAAM,CAMP,GAAIoP,EAAMpY,OAAS,EACf,MAAO,CACHyE,KAAM,YACN2T,QACAuK,KAAK,GA2Bb,IAAI3Z,EAAS0Z,EAAwBhB,GAAQC,GAE7C,IAAK,IAAI5hB,EAAIqY,EAAMpY,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACxC,MAAMsY,EAAOD,EAAMrY,GACnB,IAAI6iB,EAGAA,EADAxK,EAAMpY,OAAS,EACFyiB,GACTtK,EACAC,EAAMlP,QAAO,SAAS2Z,GAClB,OAAOA,IAAiBxK,CAC5B,KACA,GAGSqJ,GAGjB1Y,EAAS6Y,GACLxJ,EACAuK,EACA5Z,EAER,CAEA,OAAOA,CACX,EAER,CAuFA,SAAS8Z,GAAwBxU,GAC7B,GAAoB,mBAATA,EACP,MAAO,CACH7J,KAAM,UACNyB,GAAIoI,GAIZ,OAAQA,EAAK7J,MACT,IAAK,QAAS,CACV,IAAIuE,EAASyZ,GACTnU,EAAK6J,WACL7J,EAAK8J,MAAMrP,IAAI+Z,KACf,GAWJ,OARIxU,EAAKkK,gBACLxP,EAAS6Y,GACL7Y,EACA4Y,GACAD,KAID3Y,CACX,CAEA,IAAK,aACD,OAjHZ,SAAmCsF,GAC/B,IAAItF,EAAS0Y,GACTqB,EAAYD,GAAwBxU,EAAK+J,MAE7C,GAAiB,IAAb/J,EAAKpM,IAEL6gB,EAAYlB,GACRkB,EACAnB,GACAD,IAKJ3Y,EAAS6Y,GACLkB,EACA,KACApB,IAGJ3Y,EAAOiZ,KAAOJ,GACVH,GACAA,GACA1Y,GAGAsF,EAAKoK,QACL1P,EAAOiZ,KAAKD,KAAOH,GACf,CAAEpd,KAAM,QAAS8U,OAAQjL,GACzBtF,EACA2Y,UAKR,IAAK,IAAI5hB,EAAIuO,EAAKlN,KAAO,EAAGrB,GAAKuO,EAAKpM,IAAKnC,IACnCuO,EAAKoK,OAAS1P,IAAW0Y,KACzB1Y,EAAS6Y,GACL,CAAEpd,KAAM,QAAS8U,OAAQjL,GACzBtF,EACA2Y,KAIR3Y,EAAS6Y,GACLkB,EACAlB,GACIH,GACAA,GACA1Y,GAEJ2Y,IAKZ,GAAiB,IAAbrT,EAAKlN,IAEL4H,EAAS6Y,GACLH,GACAA,GACA1Y,QAIJ,IAAK,IAAIjJ,EAAI,EAAGA,EAAIuO,EAAKlN,IAAM,EAAGrB,IAC1BuO,EAAKoK,OAAS1P,IAAW0Y,KACzB1Y,EAAS6Y,GACL,CAAEpd,KAAM,QAAS8U,OAAQjL,GACzBtF,EACA2Y,KAIR3Y,EAAS6Y,GACLkB,EACA/Z,EACA2Y,IAKZ,OAAO3Y,CACX,CA8BmBga,CAA0B1U,GAGrC,IAAK,UAAW,CACZ,MAAM+J,EAAOyK,GAAwBxU,EAAK+J,MAEpC4K,EAAYH,GAAwBV,GAAU,CAChDA,GAAU,CACN,CAAE3d,KAAM,UAAWkG,KAAM,OACzB,CAAElG,KAAM,OAAQkG,KAAM,oBAE1ByX,GAAU,CACN,CAAE3d,KAAM,OAAQkG,KAAM,kBACtByX,GAAU,CACN,CAAE3d,KAAM,aAAciU,OAAO,EAAOtX,IAAK,EAAGc,IAAK,EAAGmW,KAAM+J,GAAU,CAChE,CAAE3d,KAAM,UAAWkG,KAAM,OACzB,CAAElG,KAAM,OAAQkG,KAAM,qBAE1B,CAAElG,KAAM,aAAciU,OAAO,EAAOtX,IAAK,EAAGc,IAAK,EAAGmW,KAAM+J,GAAU,CAChE,CAAE3d,KAAM,UAAWkG,KAAM,MACzB,CAAElG,KAAM,OAAQkG,KAAM,sBAE3B,QAER,MAEGuY,EAAeJ,GACjBV,GAAU,CACN,CAAE3d,KAAM,OAAQkG,KAAM,SACtByX,GAAU,CACN,CAAE3d,KAAM,QAAS2M,MAAO,KACxB,CAAE3M,KAAM,OAAQkG,KAAM,SACtB,CAAElG,KAAM,QAAS2M,MAAO,OAE5B,CAAE3M,KAAM,OAAQkG,KAAM,qBACvB,MAMP,OAHA0X,GAAmBa,EAAc,CAAE,QAAS7K,EAAM,QAAS4K,IAC3DZ,GAAmBY,EAAW,CAAE,iBAAkBC,IAE3CD,CACX,CAEA,IAAK,OACL,IAAK,WACD,MAAO,CACHxe,KAAM6J,EAAK7J,KACXkG,KAAM2D,EAAK3D,KACX4O,OAAQjL,GAGhB,IAAK,UACD,MAAO,CACH7J,KAAM6J,EAAK7J,KACXkG,KAAM2D,EAAK3D,KAAKwP,cAChBZ,OAAQjL,GAGhB,IAAK,YACD,MAAO,CACH7J,KAAM6J,EAAK7J,KACXkG,KAAM,IAAM2D,EAAK3D,KAAKwP,cACtBZ,OAAQjL,GAGhB,IAAK,WACD,MAAO,CACH7J,KAAM6J,EAAK7J,KACXkG,KAAM2D,EAAK3D,KAAKwP,cAAgB,IAChCZ,OAAQjL,GAGhB,IAAK,SAED,OAA0B,IAAtBA,EAAK8C,MAAMpR,OACJ,CACHyE,KAAM,QACN2M,MAAO9C,EAAK8C,MAAMqN,OAAO,GACzBlF,OAAQjL,GAKT,CACH7J,KAAM6J,EAAK7J,KACX2M,MAAO9C,EAAK8C,MAAMjF,OAAO,EAAGmC,EAAK8C,MAAMpR,OAAS,GAAGuK,QAAQ,OAAQ,KACnEgP,OAAQjL,GAGhB,IAAK,QACD,MAAO,CACH7J,KAAM6J,EAAK7J,KACX2M,MAAO9C,EAAK8C,MACZmI,OAAQjL,GAGhB,IAAK,QACD,MAAO,CACH7J,KAAM6J,EAAK7J,KACX8U,OAAQjL,GAGhB,QACI,MAAM,IAAI1E,MAAM,qBAAsB0E,EAAK7J,MAEvD,CAEO,SAAS0e,GAAgBC,EAAY1N,GAKxC,MAJ0B,iBAAf0N,IACPA,EAAa3V,GAAM2V,IAGhB,CACH3e,KAAM,aACN2H,MAAO0W,GAAwBM,GAC/B7J,OAAQ7D,GAAO,KACfvV,OAAQijB,EAEhB,CC3gBA,MAAQlP,eAAc,IAAKpJ,OAAOG,UAM5BoY,GAAoB,QAKnB,IAAIC,GAAsB,EAEjC,SAASC,GAAYnZ,GACjB,IAAIhD,EAAO,KACPvC,EAAO,KACPsB,EAAOiE,EAEX,KAAgB,OAATjE,GACHtB,EAAOsB,EAAKiB,KACZjB,EAAKiB,KAAOA,EACZA,EAAOjB,EACPA,EAAOtB,EAGX,OAAOuC,CACX,CAEA,SAASoc,GAA+BhjB,EAASK,GAC7C,GAAIL,EAAQR,SAAWa,EAAab,OAChC,OAAO,EAGX,IAAK,IAAID,EAAI,EAAGA,EAAIS,EAAQR,OAAQD,IAAK,CACrC,MAAMU,EAAgBI,EAAaR,WAAWN,GAC9C,IAAIe,EAAWN,EAAQH,WAAWN,GAOlC,GAJIe,GAAY,IAAUA,GAAY,KAClCA,GAAsB,IAGtBA,IAAaL,EACb,OAAO,CAEf,CAEA,OAAO,CACX,CAYA,SAASgjB,GAAoBlR,GACzB,OAAc,OAAVA,IAKAA,EAAM9N,OAAS,IACf8N,EAAM9N,OAAS,IACf8N,EAAM9N,OAAS,IACf8N,EAAM9N,OAAS,IACf8N,EAAM9N,OAAS,IApBvB,SAA4B8N,GACxB,OAAIA,EAAM9N,OAAS,IAMI,MAAhB8N,EAAMnB,KACjB,CAaQsS,CAAmBnR,GAE3B,CAEA,SAASoR,GAAkBpR,GACvB,OAAc,OAAVA,IAKAA,EAAM9N,OAAS,IACf8N,EAAM9N,OAAS,IACf8N,EAAM9N,OAAS,IACd8N,EAAM9N,OAAS,IAA8B,MAAhB8N,EAAMnB,MAE5C,CAEA,SAASwS,GAAcvd,EAAQwd,EAAOC,GAClC,SAASC,IACL,GACIhgB,IACAwO,EAAQxO,EAAasC,EAAOrG,OAASqG,EAAOtC,GAAc,WAC3C,OAAVwO,IAAmBA,EAAM9N,OAAS,IAAmB8N,EAAM9N,OAAS,IACjF,CAEA,SAASyW,EAAa9a,GAClB,MAAM4jB,EAAYjgB,EAAa3D,EAE/B,OAAO4jB,EAAY3d,EAAOrG,OAASqG,EAAO2d,GAAa,IAC3D,CAEA,SAASC,EAAwBC,EAAW9c,GACxC,MAAO,CACH8c,YACAC,aACAC,cACAC,YACAtgB,aACAqD,OAER,CAEA,SAASkd,EAAcJ,GACnBG,EAAY,CACRH,YACAC,aACAC,cACAhd,KAAMid,EAEd,CAEA,SAASE,EAAcL,GACnBM,EAAYP,EAAwBC,EAAWM,EACnD,CAEA,SAASC,IACLN,EAAa,CACT1f,KA9HE,EA+HF8U,OAAQsK,EAAMtK,OACdhH,QACAnL,KAAM+c,GAGVJ,IACAW,EAAc,KAEV3gB,EAAa4V,IACbA,EAAe5V,EAEvB,CAiBA,SAAS4gB,IAEDR,EA5JQ,IA2JRA,EAAW1f,KACE0f,EAAW/c,KAEX,CACT3C,KA9JK,EA+JL8U,OAAQ6K,EAAY7K,OACpBhH,MAAO4R,EAAW5R,MAClBnL,KAAM+c,GAIdC,EAAcA,EAAYhd,IAC9B,CAEA,IAAIgd,EAAc,KACdC,EAAY,KACZG,EAAY,KAKZE,EAAc,KAEdE,EAAiB,EACjBC,EAAa,KAEbtS,EAAQ,KACRxO,GAAc,EACd4V,EAAe,EACfwK,EAAa,CACb1f,KA3LK,EA4LL8U,OAAQ,KACRhH,MAAO,KACPnL,KAAM,MAKV,IAFA2c,IAEsB,OAAfc,KAAyBD,EA1LZ,MA4MhB,OAAQf,EAAMpf,MACV,IAAK,QACD,GAAkB,OAAd4f,EAAoB,CAEpB,GAAc,OAAV9R,IAEIxO,IAAesC,EAAOrG,OAAS,GAAsB,QAAhBuS,EAAMnB,OAAmC,QAAhBmB,EAAMnB,OAAkB,CACtFyS,EAAQlC,GACR,KACJ,CAIJkD,EAAaxB,GACb,KACJ,CAMA,IAHAQ,EAAQQ,EAAUH,aAGJtC,GAAgB,CAC1B,GAAIyC,EAAUF,aAAeA,EAAY,CACrCN,EAAQlC,GACR,KACJ,CACIkC,EAAQnC,EAEhB,CAGA,KAAO2C,EAAUD,cAAgBA,GAC7BO,IAIJN,EAAYA,EAAUjd,KACtB,MAEJ,IAAK,WAED,GAAoB,OAAhBsd,IAAwC,IAAhBA,GAEN,OAAdF,GAAsBzgB,EAAaygB,EAAUzgB,cAE7CygB,EAAYE,EACZA,GAAc,QAEf,GAAkB,OAAdF,EAAoB,CAG3BK,EAlQS,WAmQT,KACJ,CAGAhB,EAAQW,EAAUN,UAGlBG,EAAYG,EAAUH,UACtBD,EAAcI,EAAUJ,YACxBD,EAAaK,EAAUL,WACvBpgB,EAAaygB,EAAUzgB,WACvBwO,EAAQxO,EAAasC,EAAOrG,OAASqG,EAAOtC,GAAc,KAG1DygB,EAAYA,EAAUpd,KACtB,MAEJ,IAAK,aACDyc,EAAQA,EAAMzX,MACd,MAEJ,IAAK,KAGGyX,EAAM7B,OAASL,IACf4C,EAAcV,EAAM7B,MAGpB6B,EAAM5B,OAASP,IACf4C,EAAcT,EAAM5B,MAGxB4B,EAAQA,EAAMzX,MACd,MAEJ,IAAK,YACDyX,EAAQ,CACJpf,KAAM,kBACN8U,OAAQsK,EACRnf,MAAO,EACPogB,KAAM,GAEV,MAEJ,IAAK,kBAAmB,CACpB,MAAM1M,EAAQyL,EAAMtK,OAAOnB,MAE3B,GAAIyL,EAAMnf,QAAU0T,EAAMpY,OAAQ,CAE9B,GAAmB,IAAf6jB,EAAMiB,MAAcjB,EAAMtK,OAAOoJ,IAAK,CACtCkB,EAAQlC,GACR,KACJ,CAGAkC,EAAQnC,GACR,KACJ,CAGA,GAAImC,EAAMiB,QAAU,GAAK1M,EAAMpY,QAAU,EAAG,CACxC6jB,EAAQnC,GACR,KACJ,CAEA,KAAOmC,EAAMnf,MAAQ0T,EAAMpY,OAAQ6jB,EAAMnf,QAAS,CAC9C,MAAMqgB,EAAY,GAAKlB,EAAMnf,MAE7B,KAAKmf,EAAMiB,KAAOC,GAAkB,CAGhCR,EAAcV,GACdS,EAAc,CACV7f,KAAM,eACN8U,OAAQsK,EAAMtK,OACduL,KAAMjB,EAAMiB,KAAOC,IAIvBlB,EAAQzL,EAAMyL,EAAMnf,SACpB,KACJ,CACJ,CACA,KACJ,CAEA,IAAK,eACDmf,EAAQ,CACJpf,KAAM,kBACN8U,OAAQsK,EAAMtK,OACd7U,MAAO,EACPogB,KAAMjB,EAAMiB,MAEhB,MAEJ,IAAK,OACD,GAAc,OAAVvS,EAAgB,CAChB,IAAI5H,EAAO4H,EAAMnB,MAAM+I,cAOvB,IAJ4B,IAAxBxP,EAAK5D,QAAQ,QACb4D,EAAOA,EAAKJ,QAAQ,YAAa,KAGjC,GAAe/B,KAAKqb,EAAM9a,IAAK4B,GAAO,CACtCkZ,EAAQA,EAAM9a,IAAI4B,GAClB,KACJ,CACJ,CAEAkZ,EAAQlC,GACR,MAEJ,IAAK,UAAW,CACZ,MAAM/I,EAAuB,OAAhBwL,EAAuBA,EAAYxL,KAAO,KACjDoM,EAAiBjhB,EAAa5C,KAAK8jB,MAAMpB,EAAM3d,GAAGqM,EAAO2I,EAActC,IAE7E,IAAKpM,MAAMwY,IAAmBA,EAAiBjhB,EAAY,CACvD,KAAOA,EAAaihB,GAChBP,IAGJZ,EAAQnC,EACZ,MACImC,EAAQlC,GAGZ,KACJ,CAEA,IAAK,OACL,IAAK,WAAY,CACb,MAAMuD,EAA4B,SAAfrB,EAAMpf,KAAkB,QAAU,aAC/C0gB,EAAa,GAAe3c,KAAKsb,EAAUoB,GAAcpB,EAASoB,GAAYrB,EAAMlZ,MAAQ,KAElG,IAAKwa,IAAeA,EAAW/Y,MAC3B,MAAM,IAAIxC,MACN,0BACgB,SAAfia,EAAMpf,KACD,IAAMof,EAAMlZ,KAAO,IACnB,KAAQkZ,EAAMlZ,KAAO,OAKnC,IAAoB,IAAhB+Z,GAAmC,OAAVnS,GAAiC,SAAfsR,EAAMpf,KAAiB,CAYlE,GAPoB,iBAAfof,EAAMlZ,MAA2B4H,EAAM9N,OAAS,IAKjC,WAAfof,EAAMlZ,MAAqC,MAAhB4H,EAAMnB,MAEb,CACD,OAAhBsT,IACAA,EAAcT,EAAwBJ,EAAOW,IAGjDX,EAAQlC,GACR,KACJ,CACJ,CAhSRyC,EAAc,CACV7K,OAAQsK,EAAMtK,OACdX,KAAMiL,EAAMtK,OAAOX,MAAyB,OAAhBwL,GAAwBA,EAAYxL,MAAS,KACzExR,KAAMgd,GAGVD,EAAa,CACT1f,KAnJQ,EAoJR8U,OAAQsK,EAAMtK,OACdhH,MAAO4R,EAAW5R,MAClBnL,KAAM+c,GAyRFN,EAAQsB,EAAWC,UAAYD,EAAW/Y,MAC1C,KACJ,CAEA,IAAK,UAAW,CACZ,MAAMzB,EAAOkZ,EAAMlZ,KAEnB,GAAc,OAAV4H,EAAgB,CAChB,IAAI8S,EAAc9S,EAAMnB,MAOxB,IAJmC,IAA/BiU,EAAYte,QAAQ,QACpBse,EAAcA,EAAY9a,QAAQ,YAAa,KAG/CiZ,GAA+B6B,EAAa1a,GAAO,CACnD8Z,IACAZ,EAAQnC,GACR,KACJ,CACJ,CAEAmC,EAAQlC,GACR,KACJ,CAEA,IAAK,YACL,IAAK,WACD,GAAc,OAAVpP,GAAkBiR,GAA+BjR,EAAMnB,MAAOyS,EAAMlZ,MAAO,CAC3E8Z,IACAZ,EAAQnC,GACR,KACJ,CAEAmC,EAAQlC,GACR,MAEJ,IAAK,QACD,GAAc,OAAVpP,GAAkBA,EAAMnB,QAAUyS,EAAMzS,MAAO,CAC/CqT,IACAZ,EAAQnC,GACR,KACJ,CAEAmC,EAAQlC,GACR,MAEJ,IAAK,QACa,OAAVpP,GAAkBA,EAAM9N,OAAS,GAC7Bgf,GAAoBU,EAAW5R,OAC/BsR,EAAQlC,IAER8C,IACAZ,EAAQF,GAAkBpR,GAASoP,GAAWD,IAGlDmC,EAAQJ,GAAoBU,EAAW5R,QAAUoR,GAAkBpR,GAASmP,GAAQC,GAGxF,MAEJ,IAAK,SACD,IAAI2D,EAAS,GACTN,EAAiBjhB,EAErB,KAAOihB,EAAiB3e,EAAOrG,QAAUslB,EAAOtlB,OAAS6jB,EAAMzS,MAAMpR,OAAQglB,IACzEM,GAAUjf,EAAO2e,GAAgB5T,MAGrC,GAAIoS,GAA+B8B,EAAQzB,EAAMzS,OAAQ,CACrD,KAAOrN,EAAaihB,GAChBP,IAGJZ,EAAQnC,EACZ,MACImC,EAAQlC,GAGZ,MAEJ,QACI,MAAM,IAAI/X,MAAM,sBAAwBia,EAAMpf,MAM1D,OAFA6e,IAAuBsB,EAEfC,GACJ,KAAK,KACDU,QAAQC,KAAK,gDACbX,EArgBwB,wGAsgBxBV,EAAa,KACb,MAEJ,KAAKd,GACD,KAAuB,OAAhBe,GACHO,IAEJ,MAEJ,QACIR,EAAa,KAGrB,MAAO,CACH9d,SACAof,OAAQZ,EACRa,WAAYd,EACZxY,MAAO+X,EACPxK,eAER,CAmCO,SAASgM,GAAYtf,EAAQuf,EAAY9B,GAC5C,MAAMtK,EAAcoK,GAAcvd,EAAQuf,EAAY9B,GAAY,CAAC,GAEnE,GAA0B,OAAtBtK,EAAYpN,MACZ,OAAOoN,EAGX,IAAIrT,EAAOqT,EAAYpN,MACnBhK,EAAOoX,EAAYpN,MAAQ,CAC3BmN,OAAQqM,EAAWrM,QAAU,KAC7BnN,MAAO,IAEX,MAAMyZ,EAAY,CAACzjB,GAMnB,IAHA+D,EAAOod,GAAYpd,GAAMiB,KAGT,OAATjB,GAAe,CAClB,OAAQA,EAAK1B,MACT,KAtlBQ,EAulBJrC,EAAKgK,MAAMrC,KAAK3H,EAAO,CACnBmX,OAAQpT,EAAKoT,OACbnN,MAAO,KAEXyZ,EAAU9b,KAAK3H,GACf,MAEJ,KA7lBS,EA8lBLyjB,EAAU7b,MACV5H,EAAOyjB,EAAUA,EAAU7lB,OAAS,GACpC,MAEJ,QACIoC,EAAKgK,MAAMrC,KAAK,CACZwP,OAAQpT,EAAKoT,QAAU,KACvBhH,MAAOpM,EAAKoM,MAAMnB,MAClB9C,KAAMnI,EAAKoM,MAAMjE,OAI7BnI,EAAOA,EAAKiB,IAChB,CAEA,OAAOoS,CACX,CCrnBO,SAASsM,GAASxX,GACrB,SAASyX,EAAiBxM,GACtB,OAAe,OAAXA,IAKgB,SAAhBA,EAAO9U,MACS,aAAhB8U,EAAO9U,MACS,YAAhB8U,EAAO9U,KAEf,CAyBA,IAAIuE,EAAS,KAMb,OAJqB,OAAjBhG,KAAKgjB,SAzBT,SAASC,EAAShD,GACd,GAAIpjB,MAAMiV,QAAQmO,EAAU7W,QAExB,IAAK,IAAIrM,EAAI,EAAGA,EAAIkjB,EAAU7W,MAAMpM,OAAQD,IACxC,GAAIkmB,EAAShD,EAAU7W,MAAMrM,IAKzB,OAJIgmB,EAAiB9C,EAAU1J,SAC3BvQ,EAAOiB,QAAQgZ,EAAU1J,SAGtB,OAGZ,GAAI0J,EAAU3U,OAASA,EAK1B,OAJAtF,EAAS+c,EAAiB9C,EAAU1J,QAC9B,CAAC0J,EAAU1J,QACX,IAEC,EAGX,OAAO,CACX,CAKI0M,CAASjjB,KAAKgjB,SAGXhd,CACX,CAEO,SAASkd,GAAO5X,EAAM7J,GACzB,OAAO0hB,GAASnjB,KAAMsL,GAAMlC,GAAwB,SAAfA,EAAM3H,MAAmB2H,EAAMzB,OAASlG,GACjF,CAEO,SAAS2hB,GAAW9X,EAAMsM,GAC7B,OAAOuL,GAASnjB,KAAMsL,GAAMlC,GAAwB,aAAfA,EAAM3H,MAAuB2H,EAAMzB,OAASiQ,GACrF,CAEO,SAASyL,GAAU/X,GACtB,OAAO6X,GAASnjB,KAAMsL,GAAMlC,GAAwB,YAAfA,EAAM3H,MAC/C,CAEA,SAAS0hB,GAAS/Z,EAAOkC,EAAMpI,GAC3B,MAAMogB,EAAQR,GAAStd,KAAK4D,EAAOkC,GAEnC,OAAc,OAAVgY,GAIGA,EAAMxd,KAAK5C,EACtB,CC/DA,SAASqgB,GAAkBtD,GACvB,MAAI,SAAUA,EACHA,EAAU3U,KAGdiY,GAAkBtD,EAAU7W,MAAM,GAC7C,CAEA,SAASoa,GAAiBvD,GACtB,MAAI,SAAUA,EACHA,EAAU3U,KAGdkY,GAAiBvD,EAAU7W,MAAM6W,EAAU7W,MAAMpM,OAAS,GACrE,CAEO,SAASymB,GAAeC,EAAOrV,EAAKjF,EAAO3H,EAAMkG,GAmCpD,MAAMgc,EAAY,GAMlB,OAJsB,OAAlBva,EAAM4Z,SApCV,SAASY,EAAc3D,GACnB,GAAyB,OAArBA,EAAU1J,QACV0J,EAAU1J,OAAO9U,OAASA,GAC1Bwe,EAAU1J,OAAO5O,OAASA,EAAM,CAChC,MAAMhK,EAAQ4lB,GAAkBtD,GAC1BriB,EAAM4lB,GAAiBvD,GAE7ByD,EAAMnN,OAAOjE,KAAKjE,GAAK,SAAS/C,EAAMnI,EAAMiE,GACxC,GAAIkE,IAAS3N,EAAO,CAChB,MAAMkmB,EAAQ,IAAI5f,GAElB,EAAG,CAGC,GAFA4f,EAAM5d,WAAW9C,EAAKgB,MAElBhB,EAAKgB,OAASvG,EACd,MAGJuF,EAAOA,EAAKtB,IAChB,OAAkB,OAATsB,GAETwgB,EAAU5c,KAAK,CACX+c,OAAQ1c,EACRyc,SAER,CACJ,GACJ,CAEIhnB,MAAMiV,QAAQmO,EAAU7W,QACxB6W,EAAU7W,MAAM9D,QAAQse,EAEhC,CAKIA,CAAcxa,EAAM4Z,SAGjBW,CACX,CC1DA,MAAQzS,eAAc,IAAKpJ,OAAOG,UAElC,SAAS8b,GAAc3V,GAEnB,MACqB,iBAAVA,GACP4V,SAAS5V,IACTjQ,KAAK8jB,MAAM7T,KAAWA,GACtBA,GAAS,CAEjB,CAEA,SAAS6V,GAAgBpW,GACrB,OACItE,QAAQsE,IACRkW,GAAclW,EAAIzQ,SAClB2mB,GAAclW,EAAIpO,OAClBskB,GAAclW,EAAIlO,OAE1B,CAEA,SAASukB,GAA2BziB,EAAMwQ,GACtC,OAAO,SAAmB3G,EAAMkX,GAC5B,IAAKlX,GAAQA,EAAKvL,cAAgB+H,OAC9B,OAAO0a,EAAKlX,EAAM,oCAGtB,IAAK,IAAIoG,KAAOpG,EAAM,CAClB,IAAI6Y,GAAQ,EAEZ,IAAuC,IAAnC,GAAe3e,KAAK8F,EAAMoG,GAA9B,CAIA,GAAY,SAARA,EACIpG,EAAK7J,OAASA,GACd+gB,EAAKlX,EAAM,oBAAsBA,EAAK7J,KAAO,gBAAkBA,EAAO,UAEvE,GAAY,QAARiQ,EAAe,CACtB,GAAiB,OAAbpG,EAAKuC,IACL,SACG,GAAIvC,EAAKuC,KAAOvC,EAAKuC,IAAI9N,cAAgB+H,OAC5C,GAA+B,iBAApBwD,EAAKuC,IAAI1Q,OAChBuU,GAAO,eACJ,GAAKuS,GAAgB3Y,EAAKuC,IAAIlQ,OAE9B,IAAKsmB,GAAgB3Y,EAAKuC,IAAIjQ,KAGjC,SAFA8T,GAAO,MAGX,MALIA,GAAO,SAQfyS,GAAQ,CACZ,MAAO,GAAIlS,EAAOf,eAAeQ,GAAM,CACnCyS,GAAQ,EAER,IAAK,IAAIpnB,EAAI,GAAIonB,GAASpnB,EAAIkV,EAAOP,GAAK1U,OAAQD,IAAK,CACnD,MAAMgV,EAAYE,EAAOP,GAAK3U,GAE9B,OAAQgV,GACJ,KAAKnT,OACDulB,EAA6B,iBAAd7Y,EAAKoG,GACpB,MAEJ,KAAKnI,QACD4a,EAA6B,kBAAd7Y,EAAKoG,GACpB,MAEJ,KAAK,KACDyS,EAAsB,OAAd7Y,EAAKoG,GACb,MAEJ,QAC6B,iBAAdK,EACPoS,EAAQ7Y,EAAKoG,IAAQpG,EAAKoG,GAAKjQ,OAASsQ,EACjClV,MAAMiV,QAAQC,KACrBoS,EAAQ7Y,EAAKoG,aAAgBzN,IAG7C,CACJ,MACIue,EAAKlX,EAAM,kBAAoBoG,EAAM,SAAWjQ,EAAO,cAGtD0iB,GACD3B,EAAKlX,EAAM,kBAAoB7J,EAAO,IAAMiQ,EAAM,IAtDtD,CAwDJ,CAEA,IAAK,MAAMA,KAAOO,EACV,GAAezM,KAAKyM,EAAQP,KACO,IAAnC,GAAelM,KAAK8F,EAAMoG,IAC1B8Q,EAAKlX,EAAM,UAAY7J,EAAO,IAAMiQ,EAAM,cAGtD,CACJ,CAEA,SAAS0S,GAAazS,EAAY0S,GAC9B,MAAMC,EAAY,GAElB,IAAK,IAAIvnB,EAAI,EAAGA,EAAI4U,EAAW3U,OAAQD,IAAK,CACxC,MAAMgV,EAAYJ,EAAW5U,GAC7B,GAAIgV,IAAcnT,QAAUmT,IAAcxI,QACtC+a,EAAUvd,KAAKgL,EAAUpK,KAAKwP,oBAC3B,GAAkB,OAAdpF,EACPuS,EAAUvd,KAAK,aACZ,GAAyB,iBAAdgL,EACduS,EAAUvd,KAAKgL,OACZ,KAAIlV,MAAMiV,QAAQC,GAGrB,MAAM,IAAInL,MAAM,gBAAkBmL,EAAY,SAAWsS,EAAO,0BAFhEC,EAAUvd,KAAK,SAAWqd,GAAarS,EAAWsS,IAAS,OAAS,IAGxE,CACJ,CAEA,OAAOC,EAAUxb,KAAK,MAC1B,CAEA,SAASyb,GAAiB5c,EAAM4J,GAC5B,MAAMC,EAAYD,EAASC,UACrBS,EAAS,CACXxQ,KAAM7C,OACNiP,KAAK,GAEH2W,EAAO,CACT/iB,KAAM,IAAMkG,EAAO,KAGvB,IAAK,MAAM+J,KAAOF,EAAW,CACzB,IAA4C,IAAxC,GAAehM,KAAKgM,EAAWE,GAC/B,SAGJ,MAAMC,EAAaM,EAAOP,GAAO7U,MAAMiV,QAAQN,EAAUE,IACnDF,EAAUE,GAAK/I,QACf,CAAC6I,EAAUE,IAEjB8S,EAAK9S,GAAO0S,GAAazS,EAAYhK,EAAO,IAAM+J,EACtD,CAEA,MAAO,CACH8S,OACAC,MAAOP,GAA2Bvc,EAAMsK,GAEhD,CCvIA,SAASyS,GAAc3e,EAAKmP,EAASyP,GACjC,MAAM3e,EAAS,CAAC,EAEhB,IAAK,MAAM2B,KAAQ5B,EACXA,EAAI4B,GAAM4O,SACVvQ,EAAO2B,GAAQgd,EACT5e,EAAI4B,GAAM4O,OACV5G,GAAS5J,EAAI4B,GAAM4O,OAAQ,CAAErB,aAI3C,OAAOlP,CACX,CAEA,SAAS4e,GAAoB7e,EAAKmP,EAASyP,GACvC,MAAM3e,EAAS,CAAC,EAEhB,IAAK,MAAO2B,EAAMyD,KAAWtD,OAAOyD,QAAQxF,GACxCC,EAAO2B,GAAQ,CACXkd,QAASzZ,EAAOyZ,UACZF,EACMvZ,EAAOyZ,QAAQtO,OACf5G,GAASvE,EAAOyZ,QAAQtO,OAAQ,CAAErB,aAE5C4P,YAAa1Z,EAAO0Z,aAAeJ,GAActZ,EAAO0Z,YAAa5P,EAASyP,IAItF,OAAO3e,CACX,CAuBA,SAAS+e,GAAiB/B,EAASnb,EAAO6a,GACtC,MAAO,CACHM,UACAN,aACA7a,WACG,EAEX,CAEA,SAASmd,GAAYtB,EAAOnN,EAAQnI,EAAO6W,GACvC,MAAM5hB,EAAS,GAAc+K,EAAOsV,EAAMnN,QAC1C,IAAIvQ,EAEJ,OAlCJ,SAAqB3C,GACjB,IAAK,IAAItG,EAAI,EAAGA,EAAIsG,EAAOrG,OAAQD,IAC/B,GAAsC,SAAlCsG,EAAOtG,GAAGqR,MAAM+I,cAChB,OAAO,EAIf,OAAO,CACX,CA0BQ+N,CAAY7hB,GACL0hB,GAAiB,KAAM,IAAIne,MAAM,qDAGxCqe,IACAjf,EAAS2c,GAAYtf,EAAQqgB,EAAMyB,sBAAuBzB,IAGzDuB,GAAuBjf,EAAOoD,QAC/BpD,EAAS2c,GAAYtf,EAAQkT,EAAOnN,MAAOsa,GACtC1d,EAAOoD,OAST2b,GAAiB/e,EAAOoD,MAAO,KAAMpD,EAAO0c,YARpCqC,GACH,KACA,IAAIzO,GAAiBtQ,EAAOyc,OAAQlM,EAAOA,OAAQnI,EAAOpI,GAC1DA,EAAO0c,YAMvB,CAEO,MAAM0C,GACT,WAAArlB,CAAY4K,EAAQ4L,EAAQ/E,GAUxB,GATAxR,KAAKgY,gBAAkBA,GACvBhY,KAAKuW,OAASA,EACdvW,KAAKqlB,SAAU,EACfrlB,KAAKua,MAAQ,IAAK,GAClBva,KAAKslB,QAAUxd,OAAOC,OAAO,MAC7B/H,KAAKiX,WAAanP,OAAOC,OAAO,MAChC/H,KAAKyP,MAAQ3H,OAAOC,OAAO,MAC3B/H,KAAKwR,UAAYA,GDyClB,SAAgC7G,GACnC,MAAM6G,EAAY,CAAC,EAEnB,GAAI7G,EAAOW,KACP,IAAK,MAAM3D,KAAQgD,EAAOW,KACtB,GAAI,GAAe9F,KAAKmF,EAAOW,KAAM3D,GAAO,CACxC,MAAM4J,EAAW5G,EAAOW,KAAK3D,GAE7B,IAAI4J,EAASC,UAGT,MAAM,IAAI5K,MAAM,gCAAkCe,EAAO,0BAFzD6J,EAAU7J,GAAQ4c,GAAiB5c,EAAM4J,EAIjD,CAIR,OAAOC,CACX,CC3DsC+T,CAAuB5a,GAEjDA,EAAQ,CAKR,GAJIA,EAAOqN,kBACPhY,KAAKgY,gBAAkBrN,EAAOqN,iBAG9BrN,EAAO4P,MACP,IAAK,MAAMiL,KAAS1d,OAAO0C,KAAK,GACxB3N,MAAMiV,QAAQnH,EAAO4P,MAAMiL,MAC3BxlB,KAAKua,MAAMiL,GAAS7a,EAAO4P,MAAMiL,IAK7C,GAAI7a,EAAO8E,MACP,IAAK,MAAO9H,EAAMlG,KAASqG,OAAOyD,QAAQZ,EAAO8E,OAC7CzP,KAAKylB,SAAS9d,EAAMlG,GAI5B,GAAIkJ,EAAO0a,QAAS,CAChBrlB,KAAKqlB,SAAU,EACf,IAAK,MAAO1d,EAAMyG,KAAUtG,OAAOyD,SZmehBgP,EYne2Cva,KAAKua,MZoexE,IACAL,MACAC,MACAG,GAAqBC,MYteZva,KAAKylB,SAAS9d,EAAMyG,EAE5B,CAEA,GAAIzD,EAAO2a,QACP,IAAK,MAAO3d,EAAMyD,KAAWtD,OAAOyD,QAAQZ,EAAO2a,SAC/CtlB,KAAK0lB,WAAW/d,EAAMyD,GAI9B,GAAIT,EAAOsM,WACP,IAAK,MAAOtP,EAAMiQ,KAAa9P,OAAOyD,QAAQZ,EAAOsM,YACjDjX,KAAK2lB,aAAahe,EAAMiQ,EAGpC,CZmdD,IAA4B2C,EYjd3Bva,KAAKmlB,sBAAwBhF,GAAgBngB,KAAKgY,gBAAgBlP,KAAK,QAC3E,CAEA,cAAA8c,CAAevX,GACX,SAASwX,EAAeva,EAAM1D,GAC1Bke,EAAM/e,KAAK,CAAEuE,OAAM1D,WACvB,CAEA,MAAM4J,EAAYxR,KAAKwR,UACjBsU,EAAQ,GAUd,OARA9lB,KAAKuW,OAAOjE,KAAKjE,GAAK,SAAS/C,GACvBkG,EAAUN,eAAe5F,EAAK7J,MAC9B+P,EAAUlG,EAAK7J,MAAMgjB,MAAMnZ,EAAMua,GAEjCA,EAAeva,EAAM,sBAAwBA,EAAK7J,KAAO,IAEjE,MAEOqkB,EAAM9oB,QAAS8oB,CAC1B,CAEA,gBAAAC,CAAiBxP,EAAQ9U,EAAMkG,EAAMmc,EAAS,MAC1C,MAAMpR,EAAM,CACRjR,OACAkG,QAEEyP,EAAa,CACf3V,OACAkG,OACAmc,SACAkC,aAAgC,iBAAXzP,GAAwBA,GAAiC,iBAAhBA,EAAO9U,KACrE8U,OAAQ,KACRnN,MAAO,KACPgZ,SAAU,MAqDd,MAlDsB,mBAAX7L,EACPa,EAAWhO,MAAQ+W,GAAgB5J,EAAQ7D,IAErB,iBAAX6D,EAEPzO,OAAOme,eAAe7O,EAAY,SAAU,CACxCtH,IAAG,KACChI,OAAOme,eAAe7O,EAAY,SAAU,CACxChJ,MAAO3D,GAAM8L,KAGVa,EAAWb,UAI1Ba,EAAWb,OAASA,EAIxBzO,OAAOme,eAAe7O,EAAY,QAAS,CACvCtH,IAAG,KACChI,OAAOme,eAAe7O,EAAY,QAAS,CACvChJ,MAAO+R,GAAgB/I,EAAWb,OAAQ7D,KAGvC0E,EAAWhO,SAIb,aAAT3H,GACAqG,OAAOme,eAAe7O,EAAY,WAAY,CAC1C,GAAAtH,GACI,MAAMyG,EAASa,EAAWb,OACpBnI,EAtK9B,SAA0CmI,GACtC,MAAM2P,EAAa3P,EAAOnB,MAAM,GAEhC,OACwB,IAApBmB,EAAOjB,UACiB,IAAxBiB,EAAOnB,MAAMpY,QACO,eAApBkpB,EAAWzkB,OACU,IAArBykB,EAAWxQ,KAEnB,CA6JsCyQ,CAAiC5P,GACzC4J,GAAgB,IACX5J,EACHnB,MAAO,CAACmB,EAAOnB,MAAM,GAAGC,OACzB3C,GACD,KAMN,OAJA5K,OAAOme,eAAe7O,EAAY,WAAY,CAC1ChJ,UAGGA,CACX,KAKLgJ,CACX,CACA,UAAAsO,CAAW/d,EAAM4O,GACRA,IAILvW,KAAKslB,QAAQ3d,GAAQ,CACjBlG,KAAM,SACNkG,KAAMA,EACNkd,QAAStO,EAAOsO,QAAU7kB,KAAK+lB,iBAAiBxP,EAAOsO,QAAS,gBAAiBld,GAAQ,KACzFmd,YAAavO,EAAOuO,YACdhd,OAAO0C,KAAK+L,EAAOuO,aAAapf,QAC9B,CAACK,EAAKqgB,KACFrgB,EAAIqgB,GAAYpmB,KAAK+lB,iBAAiBxP,EAAOuO,YAAYsB,GAAW,mBAAoBA,EAAUze,GAC3F5B,IAEX+B,OAAOC,OAAO,OAEhB,MAEd,CACA,YAAA4d,CAAahe,EAAM4O,GACVA,IAILvW,KAAKiX,WAAWtP,GAAQ3H,KAAK+lB,iBAAiBxP,EAAQ,WAAY5O,GACtE,CACA,QAAA8d,CAAS9d,EAAM4O,GACNA,IAILvW,KAAKyP,MAAM9H,GAAQ3H,KAAK+lB,iBAAiBxP,EAAQ,OAAQ5O,GAC7D,CAEA,eAAA0e,CAAgBC,GACZ,IAAKtmB,KAAKumB,UAAUD,GAChB,OAAO,IAAInQ,GAAqB,kBAAmB,IAAMmQ,EAEjE,CACA,kBAAAE,CAAmBF,EAAYzB,GAC3B,MAAMhd,EAAQ7H,KAAKqmB,gBAAgBC,GAEnC,GAAIze,EACA,OAAOA,EAGX,MAAMuD,EAASpL,KAAKumB,UAAUD,GAE9B,OAAKlb,EAAOyZ,SAAWA,EACZ,IAAI7c,YAAY,aAAese,EAAa,mCAGnDlb,EAAOyZ,SAAYA,GACdG,GAAYhlB,KAAMoL,EAAOyZ,QAAS,IAAI,GAAO7B,aADtD,EAEe,IAAIhb,YAAY,aAAese,EAAa,6BAG/D,CACA,yBAAAG,CAA0BH,EAAYI,GAClC,MAAM7e,EAAQ7H,KAAKqmB,gBAAgBC,GAEnC,GAAIze,EACA,OAAOA,EAGX,MAAMuD,EAASpL,KAAKumB,UAAUD,GACxBlP,EAAa,GAAcsP,GAEjC,OAAKtb,EAAO0Z,YAIP1Z,EAAO0Z,YAAY1N,EAAWzP,OAC9ByD,EAAO0Z,YAAY1N,EAAWM,eADnC,EAEW,IAAIvB,GAAqB,6BAA8BuQ,GALvD,IAAI1e,YAAY,aAAese,EAAa,6BAO3D,CACA,iBAAAK,CAAkBC,GACd,IAAK5mB,KAAK6mB,YAAYD,GAClB,OAAO,IAAIzQ,GAAqB,mBAAoByQ,EAE5D,CAEA,kBAAAE,CAAmBR,EAAYzB,GAC3B,MAAMhd,EAAQ7H,KAAKwmB,mBAAmBF,EAAYzB,GAElD,GAAIhd,EACA,OAAOkd,GAAiB,KAAMld,GAGlC,MAAMuD,EAASpL,KAAKumB,UAAUD,GAE9B,OAAKlb,EAAOyZ,QAILG,GAAYhlB,KAAMoL,EAAOyZ,QAASA,GAAW,IAAI,GAH7CE,GAAiB,KAAM,KAItC,CACA,qBAAAgC,CAAsBT,EAAYI,EAAgBtY,GAC9C,MAAMvG,EAAQ7H,KAAKymB,0BAA0BH,EAAYI,GAEzD,GAAI7e,EACA,OAAOkd,GAAiB,KAAMld,GAGlC,MAAMuD,EAASpL,KAAKumB,UAAUD,GACxBlP,EAAa,GAAcsP,GAEjC,OAAO1B,GAAYhlB,KAAMoL,EAAO0Z,YAAY1N,EAAWzP,OAASyD,EAAO0Z,YAAY1N,EAAWM,UAAWtJ,GAAO,EACpH,CACA,gBAAA4Y,CAAiB1b,GACb,MAAkB,gBAAdA,EAAK7J,KACEsjB,GAAiB,KAAM,IAAIne,MAAM,2BAGrC5G,KAAKinB,cAAc3b,EAAKsM,SAAUtM,EAAK8C,MAClD,CACA,aAAA6Y,CAAcL,EAAcxY,GAExB,GAAI,GAAewY,GAAcvP,OAC7B,OAAO0N,GAAiB,KAAM,IAAIne,MAAM,4DAG5C,MAAMiB,EAAQ7H,KAAK2mB,kBAAkBC,GAErC,OAAI/e,EACOkd,GAAiB,KAAMld,GAG3Bmd,GAAYhlB,KAAMA,KAAK6mB,YAAYD,GAAexY,GAAO,EACpE,CACA,SAAA8Y,CAAUC,EAAU/Y,GAChB,MAAMgZ,EAAapnB,KAAKqnB,QAAQF,GAEhC,OAAKC,EAIEpC,GAAYhlB,KAAMonB,EAAYhZ,GAAO,GAHjC2W,GAAiB,KAAM,IAAI5O,GAAqB,eAAgBgR,GAI/E,CACA,KAAA/d,CAAMmN,EAAQnI,GACV,MAAsB,iBAAXmI,GAAyBA,GAAWA,EAAO9U,MAIhC,iBAAX8U,GAAwBA,EAAOnN,QACtCmN,EAASvW,KAAK+lB,iBAAiBxP,EAAQ,OAAQ,cAG5CyO,GAAYhlB,KAAMuW,EAAQnI,GAAO,IAP7B2W,GAAiB,KAAM,IAAI5O,GAAqB,cAQ/D,CAEA,kBAAAmR,CAAmBV,EAAcxY,EAAO3M,EAAMkG,GAC1C,OAAO8b,GAAezjB,KAAMoO,EAAOpO,KAAKinB,cAAcL,EAAcxY,GAAQ3M,EAAMkG,EACtF,CACA,6BAAA4f,CAA8BhT,EAAa9S,EAAMkG,GAC7C,OAAO8b,GAAezjB,KAAMuU,EAAYnG,MAAOpO,KAAKgnB,iBAAiBzS,GAAc9S,EAAMkG,EAC7F,CACA,gBAAA6f,CAAiBnZ,EAAK5M,EAAMkG,GACxB,MAAM3B,EAAS,GASf,OAPAhG,KAAKuW,OAAOjE,KAAKjE,EAAK,CAClBoG,MAAO,cACPZ,MAAQU,IACJvO,EAAOe,KAAK0gB,MAAMzhB,EAAQhG,KAAKunB,8BAA8BhT,EAAa9S,EAAMkG,GAAM,IAIvF3B,CACX,CAEA,SAAAugB,CAAUD,EAAYoB,GAAmB,GACrC,MAAMtc,EAAS,GAAckb,GAK7B,OAJoBlb,EAAOmM,QAAUmQ,EAC/B1nB,KAAKslB,QAAQla,EAAOzD,OAAS3H,KAAKslB,QAAQla,EAAOsM,UACjD1X,KAAKslB,QAAQla,EAAOzD,QAEJ,IAC1B,CACA,gBAAAggB,CAAiBrB,EAAYoB,GAAmB,GAC5C,MAAMtc,EAASpL,KAAKumB,UAAUD,EAAYoB,GAE1C,OAAOtc,GAAUA,EAAOyZ,SAAW,IACvC,CACA,mBAAA+C,CAAoBtB,EAAY3e,GAC5B,OAAO3H,KAAKslB,QAAQpU,eAAeoV,IAAetmB,KAAKslB,QAAQuC,aACzD7nB,KAAKslB,QAAQgB,GAAYuB,YAAYlgB,IACrC,IACV,CACA,WAAAkf,CAAYD,EAAcc,GAAmB,GACzC,MAAM9P,EAAW,GAAegP,GAKhC,OAJsBhP,EAASL,QAAUmQ,EACnC1nB,KAAKiX,WAAWW,EAASjQ,OAAS3H,KAAKiX,WAAWW,EAASF,UAC3D1X,KAAKiX,WAAWW,EAASjQ,QAEP,IAC5B,CACA,OAAA0f,CAAQ1f,GACJ,OAAOuJ,eAAe1L,KAAKxF,KAAKyP,MAAO9H,GAAQ3H,KAAKyP,MAAM9H,GAAQ,IACtE,CAEA,QAAAmgB,GACI,SAASC,EAAUpgB,EAAMub,GACrB,OAAOA,EAAS,IAAIvb,KAAU,KAAKA,KACvC,CAEA,SAASmgB,EAASvR,EAAQ5O,EAAMqgB,EAAQ5Q,GACpC,GAAI4Q,EAAOhZ,IAAIrH,GACX,OAAOqgB,EAAOlY,IAAInI,GAGtBqgB,EAAOpY,IAAIjI,GAAM,GACS,OAAtByP,EAAWb,QACXjE,GAAK8E,EAAWb,QAAQ,SAASjL,GAC7B,GAAkB,SAAdA,EAAK7J,MAAiC,aAAd6J,EAAK7J,KAC7B,OAGJ,MAAMsE,EAAoB,SAAduF,EAAK7J,KAAkB8U,EAAO9G,MAAQ8G,EAAOU,WACnDgR,EAA0B,SAAd3c,EAAK7J,KAAkBymB,EAAcC,EAElDjX,eAAe1L,KAAKO,EAAKuF,EAAK3D,MAGxBmgB,EAASvR,EAAQjL,EAAK3D,KAAMsgB,EAAWliB,EAAIuF,EAAK3D,SACvDygB,EAAOrhB,KAAK,GAAGghB,EAAUpgB,EAAMqgB,IAAWE,oCAA8CH,EAAUzc,EAAK3D,KAAoB,SAAd2D,EAAK7J,SAClHumB,EAAOpY,IAAIjI,GAAM,KAJjBygB,EAAOrhB,KAAK,GAAGghB,EAAUpgB,EAAMqgB,IAAWE,oCAA8CH,EAAUzc,EAAK3D,KAAoB,SAAd2D,EAAK7J,SAClHumB,EAAOpY,IAAIjI,GAAM,GAKzB,GAAG3H,KAEX,CAEA,MAAMooB,EAAS,GACf,IAAIF,EAAc,IAAIxY,IAClByY,EAAmB,IAAIzY,IAE3B,IAAK,MAAMgC,KAAO1R,KAAKyP,MACnBqY,EAAS9nB,KAAM0R,EAAKwW,EAAaloB,KAAKyP,MAAMiC,IAGhD,IAAK,MAAMA,KAAO1R,KAAKiX,WACnB6Q,EAAS9nB,KAAM0R,EAAKyW,EAAkBnoB,KAAKiX,WAAWvF,IAG1D,MAAM2W,EAAmB,IAAIH,EAAY1d,QAAQtE,QAAOyB,GAAQugB,EAAYpY,IAAInI,KAC1E2gB,EAAwB,IAAIH,EAAiB3d,QAAQtE,QAAOyB,GAAQwgB,EAAiBrY,IAAInI,KAE/F,OAAI0gB,EAAiBrrB,QAAUsrB,EAAsBtrB,OAC1C,CACHorB,SACA3Y,MAAO4Y,EACPpR,WAAYqR,GAIb,IACX,CACA,IAAAllB,CAAKuhB,EAAa4D,GACd,MAAO,CACHlD,QAASrlB,KAAKqlB,QACdrN,gBAAiBhY,KAAKgY,gBACtBuC,MAAOva,KAAKua,MACZ9K,MAAOiV,GAAc1kB,KAAKyP,OAAQ8Y,EAAQ5D,GAC1C1N,WAAYyN,GAAc1kB,KAAKiX,YAAasR,EAAQ5D,GACpDW,QAASV,GAAoB5kB,KAAKslB,SAAUiD,EAAQ5D,GAE5D,CACA,QAAA6D,GACI,OAAOC,KAAKC,UAAU1oB,KAAKoD,OAC/B,EC7fJ,SAASulB,GAAY/K,EAAGC,GACpB,MAAiB,iBAANA,GAAkB,SAASrQ,KAAKqQ,GACnB,iBAAND,EACRA,EAAIC,EACJA,EAAEtW,QAAQ,YAAa,IAG1BsW,GAAK,IAChB,CAEA,SAAS+K,GAAWC,EAAKC,GACrB,MAAM9iB,EAAS8B,OAAOC,OAAO,MAE7B,IAAK,MAAO2J,EAAKtD,KAAUtG,OAAOyD,QAAQsd,GACtC,GAAIza,EAAO,CACPpI,EAAO0L,GAAO,CAAC,EACf,IAAK,MAAMqX,KAAQjhB,OAAO0C,KAAK4D,GACvB0a,EAAME,SAASD,KACf/iB,EAAO0L,GAAKqX,GAAQ3a,EAAM2a,GAGtC,CAGJ,OAAO/iB,CACX,CAEe,SAASijB,GAAIC,EAAMC,GAC9B,MAAMnjB,EAAS,IAAKkjB,GAEpB,IAAK,MAAOH,EAAM3a,KAAUtG,OAAOyD,QAAQ4d,GACvC,OAAQJ,GACJ,IAAK,UACD/iB,EAAO+iB,GAAQxf,QAAQ6E,GACvB,MAEJ,IAAK,kBACDpI,EAAO+iB,GAAQG,EAAKH,GACd,IAAIG,EAAKH,MAAU3a,GACnBA,GAAS,GACf,MAEJ,IAAK,QACDpI,EAAO+iB,GAAQ,IAAKG,EAAKH,IACzB,IAAK,MAAOphB,EAAMyhB,KAAUthB,OAAOyD,QAAQ6C,GACvCpI,EAAO+iB,GAAMphB,GAAQ9K,MAAMiV,QAAQsX,GAASA,EAAQ,GAExD,MAEJ,IAAK,UACDpjB,EAAO+iB,GAAQ,IAAKG,EAAKH,IAEzB,IAAK,MAAOphB,EAAMyD,KAAWtD,OAAOyD,QAAQ6C,GAAQ,CAChD,MAAMib,EAASrjB,EAAO+iB,GAAMphB,IAAS,CAAC,EAChC2hB,EAAUtjB,EAAO+iB,GAAMphB,GAAQ,CACjCkd,QAASwE,EAAOxE,SAAW,KAC3BC,YAAa,IACNuE,EAAOvE,cAIlB,GAAK1Z,EAAL,CAIAke,EAAQzE,QAAUzZ,EAAOyZ,QACnB8D,GAAYW,EAAQzE,QAASzZ,EAAOyZ,SACpCyE,EAAQzE,SAAW,KAEzB,IAAK,MAAO6B,EAAgB6C,KAAoBzhB,OAAOyD,QAAQH,EAAO0Z,aAAe,CAAC,GAClFwE,EAAQxE,YAAY4B,GAAkB6C,EAChCZ,GAAYW,EAAQxE,YAAY4B,GAAiB6C,GACjD,KAGLzhB,OAAO0C,KAAK8e,EAAQxE,aAAa9nB,SAClCssB,EAAQxE,YAAc,KAb1B,CAeJ,CACA,MAEJ,IAAK,QACL,IAAK,aACD9e,EAAO+iB,GAAQ,IAAKG,EAAKH,IACzB,IAAK,MAAOphB,EAAM4O,KAAWzO,OAAOyD,QAAQ6C,GACxCpI,EAAO+iB,GAAMphB,GAAQghB,GAAY3iB,EAAO+iB,GAAMphB,GAAO4O,GAEzD,MAEJ,IAAK,QACL,IAAK,WACDvQ,EAAO+iB,GAAQ,IAAKG,EAAKH,IACzB,IAAK,MAAOphB,EAAMmhB,KAAUhhB,OAAOyD,QAAQ6C,GACvCpI,EAAO+iB,GAAMphB,GAAQ,IAAK3B,EAAO+iB,GAAMphB,MAAUmhB,GAErD,MAEJ,IAAK,eACD9iB,EAAO+iB,GAAQ,IACRG,EAAKH,MACL3a,GAEP,MAEJ,IAAK,SACL,IAAK,SACDpI,EAAO+iB,GAAQ,IACRG,EAAKH,MACLH,GAAWxa,EAAO,CAAC,WAE1B,MAEJ,IAAK,OACDpI,EAAO+iB,GAAQ,IACRG,EAAKH,MACLH,GAAWxa,EAAO,CAAC,OAAQ,YAAa,QAAS,WAAY,iBAMhF,OAAOpI,CACX,CClHA,SAASwjB,GAAa7e,GAClB,MAAMF,EAAQC,GAAaC,GACrB2H,EAAOY,GAAavI,GACpBgF,EAAWH,GAAgB7E,IAC3B,gBAAE8e,EAAe,cAAEC,GCVtB,SAAyBpX,GAC5B,MAAO,CACHmX,gBAAgBpb,IACZiE,EAAKjE,EAAK,CACN,KAAAwF,CAAMvI,GACEA,EAAK1B,UAAY0B,EAAK1B,oBAAoB3F,IAAS,IACnDqH,EAAK1B,UAAW,IAAI3F,IAAOiB,UAAUoG,EAAK1B,UAElD,IAGGyE,GAEXqb,cAAcrb,IACViE,EAAKjE,EAAK,CACN,KAAA0F,CAAMzI,GACEA,EAAK1B,UAAY0B,EAAK1B,oBAAoB3F,KAC1CqH,EAAK1B,SAAW0B,EAAK1B,SAASxE,UAEtC,IAGGiJ,GAGnB,CDf+Csb,CAAgBrX,GAErDiE,EAAS,CACXmN,MAAO,KACPkG,YAAajf,GAAU,IAAIya,GAAMza,EAAQ4L,EAAQA,EAAOmN,MAAMlS,WAE9D5Q,SAAQ,GACR6J,QACAkF,WAEA2C,OACAqC,KAAMrC,EAAKqC,KACXE,SAAUvC,EAAKuC,SACfC,QAASxC,EAAKwC,QAEd2U,kBACAC,gBAEA,IAAAG,CAAKC,GACD,MAAMC,EAAOd,GAAI,CAAC,EAAGte,GAErB,OAAO6e,GACkB,mBAAdM,EACDA,EAAUC,GACVd,GAAIc,EAAMD,GAExB,GAaJ,OAVAvT,EAAOmN,MAAQ,IAAI0B,GAAM,CACrBC,QAAS1a,EAAO0a,QAChBrN,gBAAiBrN,EAAOqN,gBACxBuC,MAAO5P,EAAO4P,MACd9K,MAAO9E,EAAO8E,MACd6V,QAAS3a,EAAO2a,QAChBrO,WAAYtM,EAAOsM,WACnB3L,KAAMX,EAAOW,MACdiL,GAEIA,CACX,CAEA,SAAe5L,GAAU6e,GAAaP,GAAI,CAAC,EAAGte,IE7CxC,GAAW,GACX,GAAc,GACd,GAAI,IACJ,IAAgB,EAChB,IAAa,EAEnB,SAAS,GAAavN,EAAQib,GAC1B,IAAI7V,EAAMxC,KAAKgB,WAAa5D,EAC5B,MAAM1B,EAAOsE,KAAK3C,WAAWmF,GAS7B,IAPI9G,IAAS,IAAYA,IAAS,KAC1B2c,GACArY,KAAK6H,MAAM,8BAEfrF,KAGGA,EAAMxC,KAAKkB,SAAUsB,IACnB/G,GAAQuE,KAAK3C,WAAWmF,KACzBxC,KAAK6H,MAAM,sBAAuBrF,EAG9C,CAEA,SAASwnB,GAAoB3R,GACzB,OAAO,GAAa7S,KAAKxF,KAAM,EAAGqY,EACtC,CAEA,SAAS4R,GAAe7sB,EAAQ1B,GAC5B,IAAKsE,KAAKzC,QAAQyC,KAAKgB,WAAa5D,EAAQ1B,GAAO,CAC/C,IAAIwuB,EAAM,GAEV,OAAQxuB,GACJ,KAAK,GACDwuB,EAAM,gBACN,MACJ,KAAK,GACDA,EAAM,0BAIdlqB,KAAK6H,MAAMqiB,EAAKlqB,KAAKgB,WAAa5D,EACtC,CACJ,CAIA,SAAS,KACL,IAAIA,EAAS,EACTmB,EAAO,EACPkD,EAAOzB,KAAKU,UAEhB,KAAOe,IAAS7G,IAAc6G,IAASjG,IACnCiG,EAAOzB,KAAK8B,aAAa1E,GAG7B,GAAIqE,IAAS,GAAQ,CACjB,IAAIzB,KAAKyC,QAAQ,GAAUrF,KACvB4C,KAAKyC,QAAQ,GAAarF,GAY1B,OAAO,KAXPmB,EAAOyB,KAAKyC,QAAQ,GAAUrF,GAAU,GAAW,GAEnD,GACIqE,EAAOzB,KAAK8B,aAAa1E,SACpBqE,IAAS7G,IAAc6G,IAASjG,IAErCiG,IAAS,KACTzB,KAAK0C,KAAKtF,GACV4sB,GAAoBxkB,KAAKxF,KAAM,IAK3C,CAcA,OAZI5C,EAAS,GACT4C,KAAK0C,KAAKtF,GAGD,IAATmB,IACAkD,EAAOzB,KAAK3C,WAAW2C,KAAKgB,YACxBS,IAAS,IAAYA,IAAS,IAC9BzB,KAAK6H,MAAM,4BAInBmiB,GAAoBxkB,KAAKxF,KAAe,IAATzB,GACxBA,IAAS,GAAc,IAAMyB,KAAKiN,QAAQ,IAAUjN,KAAKiN,QAAQ,GAC5E,CAGO,MAAM,GAAO,UACPuE,GAAY,CACrBoM,EAAG,CAAChf,OAAQ,MACZif,EAAG,CAACjf,OAAQ,OAGT,SAAS,KAEZ,MAAMjB,EAAQqC,KAAKgB,WACnB,IAAI4c,EAAI,KACJC,EAAI,KAGR,GAAI7d,KAAKU,YAAc,GACnBspB,GAAoBxkB,KAAKxF,KAAM,IAC/B6d,EAAI7d,KAAKiN,QAAQ,SAQhB,GAAIjN,KAAKU,YAAcxG,IAAS8F,KAAKzC,QAAQyC,KAAKgB,WAAY,IAK/D,OAJA4c,EAAI,KAEJqM,GAAezkB,KAAKxF,KAAM,EAAG,IAErBA,KAAKkB,SAAWlB,KAAKgB,YAIzB,KAAK,EACDhB,KAAK6B,OACLgc,EAAI,GAASrY,KAAKxF,MAClB,MAGJ,KAAK,EACDiqB,GAAezkB,KAAKxF,KAAM,EAAG,IAE7BA,KAAK6B,OACL7B,KAAK2C,SAELqnB,GAAoBxkB,KAAKxF,KAAM,IAE/B6d,EAAI,IAAM7d,KAAKiN,QAAQ,IACvB,MAGJ,QACIgd,GAAezkB,KAAKxF,KAAM,EAAG,IAC7B,GAAawF,KAAKxF,KAAM,EAAG,IAC3BA,KAAK6B,OAELgc,EAAI7d,KAAKqC,eAAe1E,EAAQ,QASvC,GAAIqC,KAAKU,YAAcxG,IAAU8F,KAAKyC,QAAQ,KAAazC,KAAK8B,WAAW,KAAO5H,GAAQ,CAC3F,IAAIqE,EAAO,EAWX,OAVAqf,EAAI,IAGA5d,KAAKyC,QAAQ,MACblE,EAAO,EACPyB,KAAK6B,QAGTooB,GAAezkB,KAAKxF,KAAM,EAAG,IAErBA,KAAKkB,SAAWlB,KAAKgB,YAIzB,KAAK,EACDhB,KAAK6B,OACLgc,EAAI,GAASrY,KAAKxF,MAClB,MAGJ,KAAK,EACDiqB,GAAezkB,KAAKxF,KAAM,EAAG,IAE7BA,KAAK6B,OACL7B,KAAK2C,SAELqnB,GAAoBxkB,KAAKxF,KAAM,IAE/B6d,EAAI,IAAM7d,KAAKiN,QAAQ,IACvB,MAGJ,QACIgd,GAAezkB,KAAKxF,KAAM,EAAG,IAC7B,GAAawF,KAAKxF,KAAM,EAAG,IAC3BA,KAAK6B,OAELgc,EAAI7d,KAAKqC,eAAe1E,EAAQY,EAAO,GAEnD,MAOK,GAAIyB,KAAKU,YAAc/F,GAAW,CACnC,MAAMe,EAAOsE,KAAK3C,WAAW2C,KAAKgB,YAC5BzC,EAAO7C,IAAS,IAAYA,IAAS,GAC3C,IAAIqB,EAAIiD,KAAKgB,WAAazC,EAE1B,KAAOxB,EAAIiD,KAAKkB,UACPzF,GAAQuE,KAAK3C,WAAWN,IADPA,KAMtBA,IAAMiD,KAAKgB,WAAazC,GACxByB,KAAK6H,MAAM,sBAAuB7H,KAAKgB,WAAazC,GAGxD0rB,GAAezkB,KAAKxF,KAAMjD,EAAIiD,KAAKgB,WAAY,IAC/C4c,EAAI5d,KAAKsC,UAAU3E,EAAOZ,GAKtBA,EAAI,IAAMiD,KAAKkB,UACflB,KAAK6B,OACLgc,EAAI,GAASrY,KAAKxF,QAElBiqB,GAAezkB,KAAKxF,KAAMjD,EAAIiD,KAAKgB,WAAa,EAAG,IAG/CjE,EAAI,IAAMiD,KAAKkB,UACflB,KAAK6B,OACL7B,KAAK2C,SACLqnB,GAAoBxkB,KAAKxF,KAAM,IAC/B6d,EAAI,IAAM7d,KAAKiN,QAAQ,MAIvB,GAAazH,KAAKxF,KAAMjD,EAAIiD,KAAKgB,WAAa,EAAG,IACjDhB,KAAK6B,OACLgc,EAAI7d,KAAKqC,eAAetF,EAAI,IAGxC,MACIiD,KAAK6H,QAWT,OARU,OAAN+V,GAAcA,EAAEvgB,WAAW,KAAO,KAClCugB,EAAIA,EAAEzU,OAAO,IAGP,OAAN0U,GAAcA,EAAExgB,WAAW,KAAO,KAClCwgB,EAAIA,EAAE1U,OAAO,IAGV,CACH1H,KAAM,UACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC4c,IACAC,IAER,CAEO,SAAS,GAASvS,GACrB,GAAIA,EAAKsS,EAAG,CACR,MAAMA,GACS,OAAXtS,EAAKsS,GACO,MAAZtS,EAAKsS,EADc,IAER,OAAXtS,EAAKsS,GAAc,OACnBtS,EAAKsS,EAAI,IAEb,GAAItS,EAAKuS,EAAG,CACR,MAAMA,EAAkB,MAAdvS,EAAKuS,EAAE,IAA4B,MAAdvS,EAAKuS,EAAE,GAChCvS,EAAKuS,EACL,IAAMvS,EAAKuS,EACjB7d,KAAKY,SAASgd,EAAIC,EACtB,MACI7d,KAAKY,SAASgd,EAEtB,MACI5d,KAAKY,SAAS0K,EAAKuS,EAE3B,CC5RA,SAASsM,KACL,OAAOnqB,KAAKoqB,IAAIpqB,KAAKgM,yCAAyC,EAClE,CAEA,SAASqe,KACL,IAAK,IAAgB5oB,EAAZrE,EAAS,EAASqE,EAAOzB,KAAK8B,WAAW1E,GAASA,IAAU,CACjE,GAAIqE,IAASlG,GACT,OAAO,EAGX,GAAIkG,IAASnG,IACTmG,IAASrH,GACT,OAAO,CAEf,CAEA,OAAO,CACX,CAGO,MAAM,GAAO,SACP4X,GAAc,SACd,GAAY,CACrBrK,KAAM/I,OACNimB,QAAS,CAAC,gBAAiB,MAAO,MAClCvQ,MAAO,CAAC,QAAS,OAGd,SAAS,GAAMgW,GAAgB,GAClC,MAAM3sB,EAAQqC,KAAKgB,WACnB,IAAI2G,EACA4iB,EACA1F,EAAU,KACVvQ,EAAQ,KAqBZ,OAnBAtU,KAAKkN,IAAI9S,IAETuN,EAAO3H,KAAKqC,eAAe1E,EAAQ,GACnC4sB,EAAgB5iB,EAAKwP,cACrBnX,KAAK2C,UAGY,IAAb3C,KAAKc,KACLd,KAAKU,YAAcpF,IACnB0E,KAAKU,YAAc1F,KAEf6pB,EADA7kB,KAAK0L,mBACK1L,KAAKsM,kBAAkBtM,KAAKwqB,cAAcC,KAAKzqB,KAAM2H,EAAM2iB,GAAgBH,IAE3EA,GAAW3kB,KAAKxF,KAAMA,KAAKe,YAGzCf,KAAK2C,UAGD3C,KAAKU,WACT,KAAK1F,GACDgF,KAAK6B,OACL,MAEJ,KAAKvG,GAGGgZ,EAFApD,eAAe1L,KAAKxF,KAAKoL,OAAQmf,IACW,mBAArCvqB,KAAKoL,OAAOmf,GAAejW,MAC1BtU,KAAKoL,OAAOmf,GAAejW,MAAM9O,KAAKxF,KAAMsqB,GAG5CtqB,KAAK+S,MAAMsX,GAAyB7kB,KAAKxF,OAM7D,MAAO,CACHyB,KAAM,SACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2G,OACAkd,UACAvQ,QAER,CAEO,SAAS,GAAShJ,GACrBtL,KAAKuP,MAAMnV,GAAW,IAAMkR,EAAK3D,MAEZ,OAAjB2D,EAAKuZ,SACL7kB,KAAKsL,KAAKA,EAAKuZ,SAGfvZ,EAAKgJ,MACLtU,KAAKsL,KAAKA,EAAKgJ,OAEftU,KAAKuP,MAAMvU,GAAW,IAE9B,CC9FO,MAAM,GAAO,gBACP,GAAc,gBACd,GAAY,CACrB4O,SAAU,CAAC,KAGR,SAAS,GAAMjC,GAClB,IAAIiC,EAAW,KAyBf,OAvBa,OAATjC,IACAA,EAAOA,EAAKwP,eAGhBnX,KAAK2C,SAKDiH,EAHAsH,eAAe1L,KAAKxF,KAAKoL,OAAQzD,IACI,mBAA9B3H,KAAKoL,OAAOzD,GAAMkd,QAEd7kB,KAAKoL,OAAOzD,GAAMkd,QAAQrf,KAAKxF,MAG/BA,KAAK0J,aAAa1J,KAAKmL,MAAMqf,eAG5CxqB,KAAK2C,UAEY,IAAb3C,KAAKc,KACLd,KAAKU,YAAcpF,IACnB0E,KAAKU,YAAc1F,IACnBgF,KAAK6H,MAAM,kCAGR,CACHpG,KAAM,gBACNoM,IAAK7N,KAAK4N,oBAAoBhE,GAC9BA,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAK4J,SAAS0B,EAClB,CCtCA,MAAMof,GAAa,GACb,GAAW,GACXC,GAAa,GACbC,GAAmB,GACnB,GAAe,IACfC,GAAQ,IAEd,SAASC,KACD9qB,KAAKc,KACLd,KAAK6H,MAAM,2BAGf,MAAMlK,EAAQqC,KAAKgB,WACnB,IAAI+pB,GAAc,EAoBlB,OAlBI/qB,KAAKyC,QAAQ,KACbsoB,GAAc,EACd/qB,KAAK6B,QACG7B,KAAKyC,QAAQ,KACrBzC,KAAKkN,IAAIhT,IAGT8F,KAAKyC,QAAQ,IACTzC,KAAK3C,WAAW2C,KAAKgB,WAAa,KAAO2pB,IACzC3qB,KAAK6B,OACL7B,KAAKkN,IAAIhT,KACF6wB,GACP/qB,KAAK6H,MAAM,yBAA0B7H,KAAKkB,UAEvC6pB,GACP/qB,KAAK6H,MAAM,6BAGR,CACHpG,KAAM,aACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2G,KAAM3H,KAAKqC,eAAe1E,GAElC,CAEA,SAASqtB,KACL,MAAMrtB,EAAQqC,KAAKgB,WACbtF,EAAOsE,KAAK3C,WAAWM,GAsB7B,OApBIjC,IAASivB,IACTjvB,IAASmvB,IACTnvB,IAASkvB,IACTlvB,IAASgvB,IACThvB,IAAS,IACTA,IAAS,IAETsE,KAAK6H,MAAM,0DAGf7H,KAAK6B,OAEDnG,IAASivB,KACJ3qB,KAAKyC,QAAQkoB,KACd3qB,KAAK6H,MAAM,0BAGf7H,KAAK6B,QAGF7B,KAAKqC,eAAe1E,EAC/B,CAIO,MAAM,GAAO,oBACP,GAAY,CACrBgK,KAAM,aACNsjB,QAAS,CAACrsB,OAAQ,MAClBwP,MAAO,CAAC,SAAU,aAAc,MAChC8c,MAAO,CAACtsB,OAAQ,OAGb,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WACnB,IAAI2G,EACAsjB,EAAU,KACV7c,EAAQ,KACR8c,EAAQ,KAgCZ,OA9BAlrB,KAAKkN,IAAIhS,IACT8E,KAAK2C,SAELgF,EAAOmjB,GAAiBtlB,KAAKxF,MAC7BA,KAAK2C,SAED3C,KAAKU,YAAcvF,KAEf6E,KAAKU,YAAcxG,KACnB+wB,EAAUD,GAAYxlB,KAAKxF,MAE3BA,KAAK2C,SAELyL,EAAQpO,KAAKU,YAAc,GACrBV,KAAKpB,SACLoB,KAAKmrB,aAEXnrB,KAAK2C,UAIL3C,KAAKU,YAAcxG,KACnBgxB,EAAQlrB,KAAKiN,QAAQ/S,IAErB8F,KAAK2C,WAIb3C,KAAKkN,IAAI/R,IAEF,CACHsG,KAAM,oBACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2G,OACAsjB,UACA7c,QACA8c,QAER,CAEO,SAAS,GAAS5f,GACrBtL,KAAKuP,MAAM9U,GAAO,KAClBuF,KAAKsL,KAAKA,EAAK3D,MAEM,OAAjB2D,EAAK2f,UACLjrB,KAAKY,SAAS0K,EAAK2f,SACnBjrB,KAAKsL,KAAKA,EAAK8C,QAGA,OAAf9C,EAAK4f,OACLlrB,KAAKuP,MAAMrV,GAAOoR,EAAK4f,OAG3BlrB,KAAKuP,MAAM9U,GAAO,IACtB,CCzIA,MAAM,GAAY,GAElB,SAAS,KACL,OAAOuF,KAAKoqB,IAAI,MAAM,EAC1B,CACA,SAASgB,KACL,OAAOprB,KAAKsM,kBAAkBtM,KAAK8S,KAAM,GAC7C,CACA,SAASuY,KACL,OAAOrrB,KAAKoqB,IAAIpqB,KAAKkM,+BAA+B,EACxD,CACA,SAASof,KACL,GAAItrB,KAAKU,YAAc1F,GACnB,OAAOqwB,GAAsB7lB,KAAKxF,KAAMA,KAAKe,YAGjD,MAAMuK,EAAOtL,KAAKsM,kBAAkBtM,KAAKiT,YAAaoY,IAMtD,OAJIrrB,KAAKU,YAAc1F,IACnBgF,KAAK6B,OAGFyJ,CACX,CAEO,MAAM,GAAO,QACP,GAAc,QACd,GAAY,CACrB1B,SAAU,CAAC,CACP,SACA,OACA,iBAID,SAAS,GAAM2hB,GAClB,MAAMhf,EAAWgf,EAAeD,GAAqBF,GAC/CztB,EAAQqC,KAAKgB,WACnB,IAAI4I,EAAW5J,KAAK6J,aAEpB7J,KAAKkN,IAAI5R,IAETme,EACA,MAAQzZ,KAAKc,KACT,OAAQd,KAAKU,WACT,KAAKnF,GACD,MAAMke,EAEV,KAAK7e,GACL,KAAKY,GACDwE,KAAK6B,OACL,MAEJ,KAAKzH,GACDwP,EAAS7C,KAAK/G,KAAKsM,kBAAkBtM,KAAK6S,OAAO4X,KAAKzqB,KAAMurB,GAAe,KAC3E,MAEJ,QACQA,GAAgBvrB,KAAKyC,QAAQ,IAC7BmH,EAAS7C,KAAKqkB,GAAY5lB,KAAKxF,OAE/B4J,EAAS7C,KAAKwF,EAAS/G,KAAKxF,OAS5C,OAJKA,KAAKc,KACNd,KAAKkN,IAAI3R,IAGN,CACHkG,KAAM,QACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC4I,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAKuP,MAAMjU,GAAkB,KAC7B0E,KAAK4J,SAAS0B,GAAMlH,IACE,gBAAdA,EAAK3C,MACLzB,KAAKuP,MAAMvU,GAAW,IAC1B,IAEJgF,KAAKuP,MAAMhU,GAAmB,IAClC,CCxFO,MAAM,GAAO,WACP,GAAY,CACrBqO,SAAU,CAAC,KAGR,SAAS,GAAMF,EAAcC,GAChC,MAAMhM,EAAQqC,KAAKgB,WACnB,IAAI4I,EAAW,KAUf,OARA5J,KAAKkN,IAAIhS,IAET0O,EAAWF,EAAalE,KAAKxF,KAAM2J,GAE9B3J,KAAKc,KACNd,KAAKkN,IAAI/R,IAGN,CACHsG,KAAM,WACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC4I,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAKuP,MAAM9U,GAAO,KAClBuF,KAAK4J,SAAS0B,GACdtL,KAAKuP,MAAM9U,GAAO,IACtB,CChCO,MAAM,GAAO,MACP,GAAY,GAElB,SAAS,KACZ,MAAMkD,EAAQqC,KAAKgB,WAInB,OAFAhB,KAAKkN,IAAIpS,IAEF,CACH2G,KAAM,MACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAE1C,CAEO,SAAS,KACZhB,KAAKuP,MAAMzU,GAAK,SACpB,CChBO,MAAM,GAAO,MACP,GAAY,GAElB,SAAS,KACZ,MAAM6C,EAAQqC,KAAKgB,WAInB,OAFAhB,KAAKkN,IAAIrS,IAEF,CACH4G,KAAM,MACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAE1C,CAEO,SAAS,KACZhB,KAAKuP,MAAM1U,GAAK,UACpB,CChBA,MAAM2wB,GAAW,GAGJ,GAAO,gBACP,GAAY,CACrB7jB,KAAM/I,QAGH,SAAS,KAGZ,OAFAoB,KAAK0N,SAAS8d,IAEP,CACH/pB,KAAM,gBACNoM,IAAK7N,KAAKE,YAAYF,KAAKgB,WAAa,EAAGhB,KAAKkB,UAChDyG,KAAM3H,KAAKiN,QAAQ/S,IAE3B,CAEO,SAAS,GAASoR,GACrBtL,KAAKuP,MAAM9U,GAAO,KAClBuF,KAAKuP,MAAMrV,GAAOoR,EAAK3D,KAC3B,CCrBA,MAAM,GAAW,GACX8jB,GAAU,GACV,GAAkB,GAClB,GAAQ,IAED,GAAO,aACP,GAAY,CACrB9jB,KAAM/I,QAIH,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WACnB,IAAI2G,EAEJ,OAAQ3H,KAAKU,WACT,KAAK9F,GACD+M,EAAO,IACP,MAEJ,KAAKlN,GACD,OAAQuF,KAAK3C,WAAW2C,KAAKgB,aACzB,KAAK,GACL,KAAK,GACL,KAAK,GACDhB,KAAK6B,OACL,MAEJ,KAAK4pB,GACDzrB,KAAK6B,OACL7B,KAAKyN,SAAS,QACdzN,KAAK0N,SAAS+d,IACd,MAEJ,QACIzrB,KAAK6H,MAAM,0BAGnBF,EAAO3H,KAAKqC,eAAe1E,GAInC,MAAO,CACH8D,KAAM,aACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2G,OAER,CAEO,SAAS,GAAS2D,GACrBtL,KAAKY,SAAS0K,EAAK3D,KACvB,CCnDA,MAAM,GAAW,GACX,GAAU,GAGH,GAAO,UACP,GAAY,CACrByG,MAAOxP,QAGJ,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WACnB,IAAIpD,EAAMoC,KAAKkB,SAUf,OARAlB,KAAKkN,IAAI1R,IAEJoC,EAAMD,EAAQ,GAAM,GACrBqC,KAAK3C,WAAWO,EAAM,KAAO,IAC7BoC,KAAK3C,WAAWO,EAAM,KAAO,KAC7BA,GAAO,GAGJ,CACH6D,KAAM,UACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClCoN,MAAOpO,KAAKsC,UAAU3E,EAAQ,EAAGC,GAEzC,CAEO,SAAS,GAAS0N,GACrBtL,KAAKuP,MAAM/T,GAAS,KAAO8P,EAAK8C,MAAQ,KAC5C,CCrBA,MAAMsd,GAAqB,IAAInd,IAAI,CAACxT,GAAOM,GAAkBpB,KAEhD,GAAO,YACP,GAAY,CACrB0xB,KAAM/sB,OACNgL,SAAU,CAAC,CACP,aACA,UACA,kBACA,eACA,yBAIR,SAASgiB,GAAeD,GACpB,OAAI3rB,KAAK+B,gBAAgB,KAAO7H,IAC5BwxB,GAAmB1c,IAAIhP,KAAK+B,gBAAgB,IACrC/B,KAAK6rB,QAAQF,GAGjB3rB,KAAK8rB,aAAaH,EAC7B,CAEA,MAAMI,GAAc,CAChBC,MAAOJ,GACPK,UAAWL,GACX,QAAAM,GACI,OAAOlsB,KAAKmsB,qBAChB,GAGG,SAAS,GAAMR,EAAO,SACzB,MAAM/hB,EAAW5J,KAAK6J,aAEtB4P,EAAM,MAAQzZ,KAAKc,KACf,OAAQd,KAAKU,WACT,KAAKlF,GACL,KAAKZ,GACDoF,KAAK6B,OACL,SAEJ,KAAK3H,GACD0P,EAAS7C,KAAK/G,KAAKmrB,cACnB,MAEJ,KAAK/vB,GAAiB,CAClB,IAAIia,EAAOrV,KAAKsM,mBACZ,IAAMyf,GAAYJ,GAAMnmB,KAAKxF,KAAM2rB,KACnC,IAAM,OAGLtW,IACDA,EAAOrV,KAAKsM,mBACR,KACItM,KAAKkN,IAAI9R,IACT,MAAMgxB,EAAMpsB,KAAKqsB,UAAUV,GAE3B,OADA3rB,KAAKkN,IAAI7R,IACF+wB,CAAG,IAEd,IACWpsB,KAAKssB,gBAAgBX,MAKxC/hB,EAAS7C,KAAKsO,GACd,KACJ,CAEA,KAAKlb,GAAe,CAChB,IAAIkb,EAAOrV,KAAKsM,mBACZ,IAAMtM,KAAKusB,gBAAgBZ,KAC3B,IAAM,OAGLtW,IACDA,EAAOrV,KAAKssB,gBAAgBX,IAGhC/hB,EAAS7C,KAAKsO,GACd,KACJ,CAEA,QACI,MAAMoE,EAQlB,OAJI7P,EAAS5E,SACThF,KAAK6H,MAAM,yBAGR,CACHpG,KAAM,YACNoM,IAAK7N,KAAK4N,oBAAoBhE,GAC9B+hB,OACA/hB,WAER,CAEO,SAAS,GAAS0B,GACrBA,EAAK1B,SAAStE,SAAQ0E,IACC,cAAfA,EAAMvI,MACNzB,KAAKuP,MAAMnU,GAAiB,KAC5B4E,KAAKsL,KAAKtB,GACVhK,KAAKuP,MAAMlU,GAAkB,MAE7B2E,KAAKsL,KAAKtB,EACd,GAER,CC/GA,MAAM,GAAkB,GAClB,GAAa,GACb,GAAa,GACb,GAAY,GACZ,GAAW,GACX,GAAW,GACX,GAAU,GAEhB,SAASwiB,KACL,OAAOxsB,KAAKoqB,IAAIpqB,KAAKiM,wCAAwC,EACjE,CAEA,SAASwgB,KACL,OAAOzsB,KAAKoqB,IAAIpqB,KAAKiM,wCAAwC,EACjE,CAEA,SAASygB,KACL,MAAMC,EAAkB3sB,KAAKe,WACvBqN,EAAQpO,KAAK4sB,QAUnB,MARmB,QAAfxe,EAAM3M,OACO,IAAbzB,KAAKc,KACLd,KAAKU,YAAc1F,KACe,IAAlCgF,KAAKyC,QAAQ,MAC2B,IAAxCzC,KAAKuC,cAAcoqB,IACnB3sB,KAAK6H,QAGFuG,CACX,CAEO,MAAM,GAAO,cACP,GAAc,cACd,GAAY,CACrBye,UAAW,CAACtjB,QAAS3K,QACrBgZ,SAAUhZ,OACVwP,MAAO,CAAC,QAAS,QAGd,SAAS,KACZ,MAAMzQ,EAAQqC,KAAKgB,WACb6B,EAAa7C,KAAKe,WAClB6W,EAAW,GAAapS,KAAKxF,MAC7B8sB,EAAiBxV,GAAiBM,GAClChM,EAAakhB,EAAiB9sB,KAAK6L,oBAAsB7L,KAAK4L,WAC9Due,EAAa2C,EAAiBL,GAA2BD,GAC/D,IACIpe,EADAye,GAAY,EAGhB7sB,KAAK2C,SACL3C,KAAKkN,IAAInS,IAET,MAAMgyB,EAAa/sB,KAAKe,WAYxB,GAVK+rB,GACD9sB,KAAK2C,SAILyL,EADAxC,EACQ5L,KAAKsM,kBAAkBogB,GAAcvC,GAErCA,EAAW3kB,KAAKxF,KAAMA,KAAKe,YAGnC+rB,GAAiC,UAAf1e,EAAM3M,MAAoB2M,EAAMxE,SAAS5E,QAC3D,IAAK,IAAI5H,EAAS2vB,EAAa/sB,KAAKe,WAAY3D,GAAU,EAAGA,IACzD,GAAI4C,KAAK8B,WAAW1E,KAAYxC,GAAY,CACxCwT,EAAMxE,SAAS3D,WAAW,CACtBxE,KAAM,aACNoM,IAAK,KACLO,MAAO,MAEX,KACJ,CAkBR,OAdIpO,KAAKyC,QAAQ,MACboqB,EAAYG,GAAaxnB,KAAKxF,MAC9BA,KAAK2C,WAMQ,IAAb3C,KAAKc,KACLd,KAAKU,YAAc1F,KACgB,IAAnCgF,KAAKuC,cAAcM,IACnB7C,KAAK6H,QAGF,CACHpG,KAAM,cACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC6rB,YACAjV,WACAxJ,QAER,CAEO,SAAS,GAAS9C,GACrBtL,KAAKuP,MAAMrV,GAAOoR,EAAKsM,UACvB5X,KAAKuP,MAAMxU,GAAO,KAClBiF,KAAKsL,KAAKA,EAAK8C,OAEX9C,EAAKuhB,YACL7sB,KAAKuP,MAAM9U,GAAO,KAClBuF,KAAKuP,MAAMrV,IAA0B,IAAnBoR,EAAKuhB,UAAqB,YAAcvhB,EAAKuhB,WAEvE,CAEA,SAAS,KACL,MAAMlvB,EAAQqC,KAAKgB,WAGnB,GAAIhB,KAAKU,YAAcjG,GACnB,OAAQuF,KAAK3C,WAAW2C,KAAKgB,aACzB,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACDhB,KAAK6B,OACL,MAGJ,KAAK,GACD7B,KAAK6B,OACD7B,KAAKyC,QAAQ,KACbzC,KAAK6B,OAYrB,OANI7B,KAAKU,YAAcrG,GACnB2F,KAAKkN,IAAI7S,IAET2F,KAAKkN,IAAIhT,IAGN8F,KAAKqC,eAAe1E,EAC/B,CAGA,SAASqvB,KACLhtB,KAAKkN,IAAIzS,IACTuF,KAAK2C,SAEL,MAAMkqB,EAAY7sB,KAAKiN,QAAQ/S,IAI/B,MAAqB,cAAd2yB,GAAmCA,CAC9C,CC7JA,MAAM,GAAY,GAElB,SAAS,KACL,OAAO7sB,KAAKoqB,IAAIpqB,KAAKkM,+BAA+B,EACxD,CAEO,MAAM,GAAO,kBACP,GAAY,CACrBtC,SAAU,CAAC,CACP,cACA,SACA,UAID,SAAS,KACZ,MAAMA,EAAW5J,KAAK6J,aAGtB,MAAQ7J,KAAKc,KACT,OAAQd,KAAKU,WACT,KAAK9F,GACL,KAAKY,GACL,KAAKR,GACDgF,KAAK6B,OACL,MAEJ,KAAKzH,GACDwP,EAAS7C,KAAK/G,KAAKsM,kBAAkBtM,KAAK6S,OAAO4X,KAAKzqB,MAAM,GAAO,KACnE,MAEJ,QACQA,KAAKyC,QAAQ,IACbmH,EAAS7C,KAAK/G,KAAKsM,kBAAkBtM,KAAK8S,KAAM,KAEhDlJ,EAAS7C,KAAK/G,KAAKsM,kBAAkBtM,KAAKiT,YAAa,KAKvE,MAAO,CACHxR,KAAM,kBACNoM,IAAK7N,KAAK4N,oBAAoBhE,GAC9BA,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAK4J,SAAS0B,GAAMlH,IACE,gBAAdA,EAAK3C,MACLzB,KAAKuP,MAAMvU,GAAW,IAC1B,GAER,CC1DO,MAAM,GAAO,YACP,GAAY,CACrBoT,MAAOxP,OACPob,KAAMpb,QAGH,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WACboN,EAAQpO,KAAK1B,cAAc3D,IAEjC,MAAO,CACH8G,KAAM,YACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClCoN,QACA4L,KAAMha,KAAKsC,UAAU3E,EAAQyQ,EAAMpR,OAAQgD,KAAKgB,YAExD,CAEO,SAAS,GAASsK,GACrBtL,KAAKuP,MAAM5U,GAAW2Q,EAAK8C,MAAQ9C,EAAK0O,KAC5C,CCXA,MAAM,GAAU,GAEH,GAAO,UACP,GAAY,CACrB2R,KAAM/sB,OACN+I,KAAM/I,OACNwP,MAAO,CAAC,aAAc,SAAU,YAAa,QAAS,WAAY,OAG/D,SAAS,GAAMud,GAClB,MAAMhuB,EAAQqC,KAAKgB,WACnB,IAAI2G,EACAyG,EAAQ,KAQZ,GANApO,KAAKkN,IAAI9R,IACT4E,KAAK2C,SAELgF,EAAO3H,KAAKiN,QAAQ/S,IACpB8F,KAAK2C,SAED3C,KAAKU,YAAcrF,GAAkB,CAIrC,OAHA2E,KAAKkN,IAAInS,IACTiF,KAAK2C,SAEG3C,KAAKU,WACT,KAAK,GAEG0N,EADApO,KAAK4M,gBAAgB,KAAOnS,GACpBuF,KAAKitB,QAELjtB,KAAKsZ,SAGjB,MAEJ,KAAK3e,GACDyT,EAAQpO,KAAKrF,YACb,MAEJ,KAAKT,GACDkU,EAAQpO,KAAKmrB,aACb,MAEJ,KAAKhxB,GACDiU,EAAQpO,KAAKsM,mBACT,KACI,MAAM8f,EAAMpsB,KAAK7F,SAAS6F,KAAK0J,aAAc1J,KAAKmL,MAAMyhB,OAQxD,OANA5sB,KAAK2C,SAED3C,KAAKyC,QAAQ,KACbzC,KAAK6H,QAGFukB,CAAG,IAEd,IACWpsB,KAAKitB,UAGpB,MAEJ,QACIjtB,KAAK6H,MAAM,sDAGnB7H,KAAK2C,QACT,CAMA,OAJK3C,KAAKc,KACNd,KAAKkN,IAAI7R,IAGN,CACHoG,KAAM,UACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2qB,OACAhkB,OACAyG,QAER,CAEO,SAAS,GAAS9C,GACrBtL,KAAKuP,MAAMnU,GAAiB,KAC5B4E,KAAKuP,MAAMrV,GAAOoR,EAAK3D,MAEJ,OAAf2D,EAAK8C,QACLpO,KAAKuP,MAAMxU,GAAO,KAClBiF,KAAKsL,KAAKA,EAAK8C,QAGnBpO,KAAKuP,MAAMlU,GAAkB,IACjC,CCjGO,MAAM,GAAO,kBACP,GAAY,CACrBswB,KAAM/sB,OACNsuB,QAAStuB,OACTwP,MAAO,CAAC,cAAe,aAG3B,SAAS+e,GAAiBxB,EAAMhkB,GAC5B,MACMqD,GADiBhL,KAAKkL,SAASygB,IAAS,CAAC,GACjBhkB,GAM9B,MAJsB,mBAAXqD,GACPhL,KAAK6H,MAAM,mBAAmBF,OAG3BqD,CACX,CAEO,SAAS,GAAM2gB,EAAO,WACzB,MAAMhuB,EAAQqC,KAAKgB,WACbosB,EAAeptB,KAAKmN,sBACpBkgB,EAAcF,GAAiB3nB,KAAKxF,KAAM2rB,EAAMyB,EAAajW,eAEnEnX,KAAK2C,SAEL,MAAMyL,EAAQpO,KAAKsM,mBACf,KACI,MAAMqgB,EAAkB3sB,KAAKe,WACvBqN,EAAQif,EAAY7nB,KAAKxF,MAO/B,OALiB,IAAbA,KAAKc,MACmC,IAAxCd,KAAKuC,cAAcoqB,IACnB3sB,KAAK6H,QAGFuG,CAAK,IAEhB,IAAMpO,KAAKoqB,IAAI,MAAM,KAOzB,OAJKpqB,KAAKc,KACNd,KAAKkN,IAAI7R,IAGN,CACHoG,KAAM,kBACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2qB,OACAuB,QAASE,EACThf,QAER,CAEO,SAAS,GAAS9C,GACrBtL,KAAKuP,MAAMpV,GAAemR,EAAK4hB,QAAU,KACzCltB,KAAKsL,KAAKA,EAAK8C,OACfpO,KAAKuP,MAAMlU,GAAkB,IACjC,CCrDA,MAAM,GAAU,GACV,GAAe,GACf,GAAa,GACb,GAAkB,GAEX,GAAO,eACP,GAAY,CACrBswB,KAAM/sB,OACN0uB,KAAM,CAAC,aAAc,SAAU,YAAa,QAAS,YACrDC,eAAgB3uB,OAChB4uB,OAAQ,CAAC,aAAc,SAAU,YAAa,QAAS,YACvDC,gBAAiB,CAAC7uB,OAAQ,MAC1B8uB,MAAO,CAAC,aAAc,SAAU,YAAa,QAAS,WAAY,OAGtE,SAASC,KAGL,OAFA3tB,KAAK2C,SAEG3C,KAAKU,WACT,KAAK,GACD,OAAIV,KAAKyC,QAAQ,GAASzC,KAAKkC,kBAAkB,IACtClC,KAAKitB,QAELjtB,KAAKsZ,SAGpB,KAAK3e,GACD,OAAOqF,KAAKrF,YAEhB,KAAKT,GACD,OAAO8F,KAAKmrB,aAEhB,KAAKhxB,GACD,OAAO6F,KAAKsM,mBACR,KACI,MAAM8f,EAAMpsB,KAAK7F,SAAS6F,KAAK0J,aAAc1J,KAAKmL,MAAMyhB,OAQxD,OANA5sB,KAAK2C,SAED3C,KAAKyC,QAAQ,KACbzC,KAAK6H,QAGFukB,CAAG,IAEd,IACWpsB,KAAKitB,UAIxB,QACIjtB,KAAK6H,MAAM,sDAEvB,CAEA,SAAS+lB,GAAeC,GAGpB,GAFA7tB,KAAK2C,SAED3C,KAAKyC,QAAQ,KACbzC,KAAKyC,QAAQ,IAAkB,CAC/B,MAAM2L,EAAQpO,KAAK7C,OAAO6C,KAAKgB,YAI/B,OAFAhB,KAAK6B,OAED7B,KAAKyC,QAAQ,KACbzC,KAAK6B,OACEuM,EAAQ,KAGZA,CACX,CAEA,GAAIpO,KAAKyC,QAAQ,IACb,MAAO,IAGXzC,KAAK6H,MAAM,YAAYgmB,EAAc,QAAU,yBACnD,CAEO,SAAS,GAAMlC,EAAO,WACzB,MAAMhuB,EAAQqC,KAAKgB,WAEnBhB,KAAK2C,SACL3C,KAAKkN,IAAI9R,IAET,MAAMkyB,EAAOK,GAASnoB,KAAKxF,MACrButB,EAAiBK,GAAepoB,KAAKxF,KAAoB,eAAdstB,EAAK7rB,MAChD+rB,EAASG,GAASnoB,KAAKxF,MAC7B,IAAIytB,EAAkB,KAClBC,EAAQ,KAUZ,OARI1tB,KAAK4M,gBAAgB,KAAOvR,KAC5BoyB,EAAkBG,GAAepoB,KAAKxF,MACtC0tB,EAAQC,GAASnoB,KAAKxF,OAG1BA,KAAK2C,SACL3C,KAAKkN,IAAI7R,IAEF,CACHoG,KAAM,eACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2qB,OACA2B,OACAC,iBACAC,SACAC,kBACAC,QAER,CAEO,SAAS,GAASpiB,GACrBtL,KAAKuP,MAAMnU,GAAiB,KAC5B4E,KAAKsL,KAAKA,EAAKgiB,MACfttB,KAAKY,SAAS0K,EAAKiiB,gBACnBvtB,KAAKsL,KAAKA,EAAKkiB,QAEXliB,EAAKoiB,QACL1tB,KAAKY,SAAS0K,EAAKmiB,iBACnBztB,KAAKsL,KAAKA,EAAKoiB,QAGnB1tB,KAAKuP,MAAMlU,GAAkB,IACjC,CC9HO,MAAM,GAAO,WACP,GAAc,WACd,GAAY,CACrBsM,KAAM/I,OACNgL,SAAU,CAAC,KAIR,SAAS,GAAMF,EAAcC,GAChC,MAAMhM,EAAQqC,KAAKgB,WACb2G,EAAO3H,KAAKmN,sBACZod,EAAgB5iB,EAAKwP,cAC3B,IAAIvN,EAUJ,OARAA,EAAWD,EAAWuH,eAAeqZ,GAC/B5gB,EAAW4gB,GAAe/kB,KAAKxF,KAAM2J,GACrCD,EAAalE,KAAKxF,KAAM2J,GAEzB3J,KAAKc,KACNd,KAAKkN,IAAI7R,IAGN,CACHoG,KAAM,WACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2G,OACAiC,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAKuP,MAAMpV,GAAemR,EAAK3D,KAAO,KACtC3H,KAAK4J,SAAS0B,GACdtL,KAAKuP,MAAMlU,GAAkB,IACjC,CCjCO,MAAM,GAAO,kBACP,GAAY,CACrBswB,KAAM/sB,OACN4V,SAAU,CAAC5V,OAAQ,MACnBgL,SAAU,CAAC,KAKR,SAAS,GAAM+hB,GAClB,MAAMhuB,EAAQqC,KAAKgB,WACnB,IAAIosB,EAAe,KAEfptB,KAAKU,YAAcvG,GACnBizB,EAAeptB,KAAKmN,sBAEpBnN,KAAKkN,IAAI9R,IAGb,MAAMwO,EAAW5J,KAAKsM,mBAClB,KACI,MAAMqgB,EAAkB3sB,KAAKe,WACvB6I,EAAW5J,KAAK0J,aAAa1J,KAAKmL,MAAMyhB,OAO9C,OALiB,IAAb5sB,KAAKc,MACmC,IAAxCd,KAAKuC,cAAcoqB,IACnB3sB,KAAK6H,QAGF+B,CAAQ,IAEnB,IAAM5J,KAAKmM,qBACPnM,KAAKoqB,IAAI,MAAM,MAQvB,OAJKpqB,KAAKc,KACNd,KAAKkN,IAAI7R,IAGN,CACHoG,KAAM,kBACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2qB,OACAnX,SAAU4Y,EACVxjB,WAER,CAEO,SAAS,GAAS0B,GACjBA,EAAKkJ,SACLxU,KAAKuP,MAAMpV,GAAemR,EAAKkJ,SAAW,KAE1CxU,KAAKuP,MAAMnU,GAAiB,KAGhC4E,KAAK4J,SAAS0B,GACdtL,KAAKuP,MAAMlU,GAAkB,IACjC,CC9DO,MAAMyyB,GAAM,MACN,GAAO,OACP,GAAY,CACrB1f,MAAOxP,QAEJ,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WAInB,OAFAhB,KAAKkN,IAAI7S,IAEF,CACHoH,KAAM,OACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClCoN,MAAOpO,KAAKqC,eAAe1E,EAAQ,GAE3C,CACO,SAAS,GAAS2N,GACrBtL,KAAKuP,MAAMlV,GAAM,IAAMiR,EAAK8C,MAChC,CCnBO,MAAM,GAAO,aACP,GAAY,CACrBzG,KAAM/I,QAGH,SAAS,KACZ,MAAO,CACH6C,KAAM,aACNoM,IAAK7N,KAAKE,YAAYF,KAAKgB,WAAYhB,KAAKkB,UAC5CyG,KAAM3H,KAAKiN,QAAQ/S,IAE3B,CAEO,SAAS,GAASoR,GACrBtL,KAAKuP,MAAMrV,GAAOoR,EAAK3D,KAC3B,CCfO,MAAM,GAAO,aACP,GAAY,CACrBA,KAAM/I,QAGH,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WAKnB,OAFAhB,KAAKkN,IAAI7S,IAEF,CACHoH,KAAM,aACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2G,KAAM3H,KAAKqC,eAAe1E,EAAQ,GAE1C,CAEO,SAAS,GAAS2N,GAIrBtL,KAAKuP,MAAM9U,GAAO,IAAM6Q,EAAK3D,KACjC,CCvBA,MAAM,GAAW,GAEJ,GAAO,QACP,GAAY,CACrBA,KAAM/I,QAGH,SAAS,KACZ,IAAIoC,EAAahB,KAAKgB,WAClB2G,EAAO3H,KAAKiN,QAAQ/S,IAExB,KAAO8F,KAAKyC,QAAQ,KAChBzC,KAAKkN,IAAIzS,IACTkN,GAAQ,IAAM3H,KAAKiN,QAAQ/S,IAG/B,MAAO,CACHuH,KAAM,QACNoM,IAAK7N,KAAKE,YAAYc,EAAYhB,KAAKgB,YACvC2G,OAER,CAEO,SAAS,GAAS2D,GACrBtL,KAAKY,SAAS0K,EAAK3D,KACvB,CCzBO,MAAM,GAAO,YACP,GAAY,CACrBiC,SAAU,CAAC,CACP,WAID,SAAS,KACZ,MAAMA,EAAW5J,KAAK6J,aAItB,IAFA7J,KAAK2C,UAEG3C,KAAKc,MACT8I,EAAS7C,KAAK/G,KAAK+tB,SAEf/tB,KAAK+B,gBAAgB,KAAO9G,KAIhC+E,KAAK2C,SACL3C,KAAK6B,OACL7B,KAAK2C,SAGT,MAAO,CACHlB,KAAM,YACNoM,IAAK7N,KAAK4N,oBAAoBhE,GAC9BA,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAK4J,SAAS0B,GAAM,IAAMtL,KAAKuP,MAAMtU,GAAO,MAChD,CCzBO,MAAM,GAAO,aACP,GAAY,CACrB+yB,SAAU,CAACpvB,OAAQ,MACnBqvB,UAAW,CAACrvB,OAAQ,MACpBsvB,UAAW,CAAC,YAAa,OAGtB,SAAS,KACZ,MAAMvwB,EAAQqC,KAAKgB,WACnB,IAAIgtB,EAAW,KACXC,EAAY,KACZC,EAAY,KAIhB,GAFAluB,KAAK2C,SAED3C,KAAKU,YAAcxG,IAAS8F,KAAK+B,gBAAgB,KAAO3G,GAAiB,CAEzE,MAAM+yB,EAAQnuB,KAAKiN,QAAQ/S,IACrBk0B,EAAiBD,EAAMhX,cAU7B,OARuB,QAAnBiX,GAA+C,SAAnBA,GAC5BpuB,KAAK2C,SACLqrB,EAAWI,EACXH,EAAYjuB,KAAKiN,QAAQ/S,KAEzB+zB,EAAYE,EAGRnuB,KAAK+B,gBAAgB,IACzB,KAAK7H,GAED8F,KAAK2C,SACL3C,KAAKyN,SAAS,OACdygB,EAAYluB,KAAKqsB,UAAU,SAC3B,MAGJ,KAAK/wB,GACL,KAAKN,GACL,KAAKC,GACL,KAAKhB,GACD,MAEJ,QACI+F,KAAK6H,MAAM,yCAEvB,MACI,OAAQ7H,KAAKU,WACT,KAAKxG,GACL,KAAKkB,GACL,KAAKjB,GAED+zB,EAAYluB,KAAKqsB,UAAU,SAC3B,MAGJ,KAAK/wB,GACL,KAAKN,GACL,KAAKf,GACD,MAEJ,QACI+F,KAAK6H,MAAM,yCAIvB,MAAO,CACHpG,KAAM,aACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClCgtB,WACAC,YACAC,YAER,CAEO,SAAS,GAAS5iB,GACjBA,EAAK2iB,WACD3iB,EAAK0iB,UACLhuB,KAAKuP,MAAMrV,GAAOoR,EAAK0iB,UAG3BhuB,KAAKuP,MAAMrV,GAAOoR,EAAK2iB,WAEnB3iB,EAAK4iB,YACLluB,KAAKuP,MAAMrV,GAAO,OAClB8F,KAAKsL,KAAKA,EAAK4iB,aAEZ5iB,EAAK4iB,WACZluB,KAAKsL,KAAKA,EAAK4iB,UAEvB,CClGO,MAAM,GAAO,iBACP,GAAY,CACrBtkB,SAAU,CAAC,CACP,gBAID,SAAS,KACZ,MAAMA,EAAW5J,KAAK6J,aAItB,IAFA7J,KAAK2C,UAEG3C,KAAKc,MACT8I,EAAS7C,KAAK/G,KAAKquB,cAEfruB,KAAKU,YAAczF,KAIvB+E,KAAK6B,OAGT,MAAO,CACHJ,KAAM,iBACNoM,IAAK7N,KAAK4N,oBAAoBhE,GAC9BA,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAK4J,SAAS0B,GAAM,IAAMtL,KAAKuP,MAAMtU,GAAO,MAChD,CC/BA,MAAM,GAAY,GAEL,GAAO,kBACP,GAAY,CACzB,EAEO,SAAS,KACZ,MAAM0C,EAAQqC,KAAKgB,WAInB,OAFAhB,KAAK0N,SAAS,IAEP,CACHjM,KAAM,kBACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAE1C,CAEO,SAAS,KACZhB,KAAKuP,MAAM9U,GAAO,IACtB,CCnBO,MAAM,GAAO,MACP,GAAY,CACrB6zB,IAAK,CAAC,UAAW,cACjBja,SAAU,CAAC,eAAgB,OAGxB,SAAS,KACZrU,KAAK2C,SAEL,MAAMhF,EAAQqC,KAAKgB,WACnB,IAEIstB,EAFA1wB,EAAMD,EACN0W,EAAW,KAmBf,OAfIia,EADAtuB,KAAKmC,YAAY,EAAG,QAAUnC,KAAKmC,YAAY,EAAG,QAC5CnC,KAAKmrB,aAELnrB,KAAKuuB,UAGf3wB,EAAMoC,KAAKgB,WACXhB,KAAK2C,SAED3C,KAAKmC,YAAY,EAAG,QACpBnC,KAAK6B,OAELwS,EAAWrU,KAAKwuB,eAChB5wB,EAAMoC,KAAKgB,YAGR,CACHS,KAAM,MACNoM,IAAK7N,KAAKE,YAAYvC,EAAOC,GAC7B0wB,MACAja,WAER,CAEO,SAAS,GAAS/I,GACrBtL,KAAKsL,KAAKA,EAAKgjB,KACO,OAAlBhjB,EAAK+I,WACLrU,KAAKuP,MAAMrV,GAAO,MAClB8F,KAAKsL,KAAKA,EAAK+I,UAEvB,CC5CO,MAAM,GAAO,SACP,GAAY,CACrBjG,MAAOxP,QAGJ,SAAS,KACZ,MAAO,CACH6C,KAAM,SACNoM,IAAK7N,KAAKE,YAAYF,KAAKgB,WAAYhB,KAAKkB,UAC5CkN,MAAOpO,KAAKiN,QAAQ,IAE5B,CAEO,SAAS,GAAS3B,GACrBtL,KAAKuP,MAAM,GAAajE,EAAK8C,MACjC,CChBO,MAAM,GAAO,WACP,GAAY,CACrBA,MAAOxP,QAGJ,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WAInB,OAFAhB,KAAK6B,OAEE,CACHJ,KAAM,WACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClCoN,MAAOpO,KAAKqC,eAAe1E,GAEnC,CAEO,SAAS,GAAS2N,GACrBtL,KAAKY,SAAS0K,EAAK8C,MACvB,CCfO,MAAM,GAAO,cACP,GAAY,CACrBxE,SAAU,CAAC,KAGR,SAAS,GAAMF,EAAcC,GAChC,MAAMhM,EAAQqC,KAAKgB,WACnB,IAAI4I,EAAW,KAUf,OARA5J,KAAKkN,IAAI9R,IAETwO,EAAWF,EAAalE,KAAKxF,KAAM2J,GAE9B3J,KAAKc,KACNd,KAAKkN,IAAI7R,IAGN,CACHoG,KAAM,cACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC4I,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAKuP,MAAMnU,GAAiB,KAC5B4E,KAAK4J,SAAS0B,GACdtL,KAAKuP,MAAMlU,GAAkB,IACjC,CC/BO,MAAM,GAAO,aACP,GAAY,CACrB+S,MAAOxP,QAGJ,SAAS,KACZ,MAAO,CACH6C,KAAM,aACNoM,IAAK7N,KAAKE,YAAYF,KAAKgB,WAAYhB,KAAKkB,UAC5CkN,MAAOpO,KAAK1B,cAAc5D,IAElC,CAEO,SAAS,GAAS4Q,GACrBtL,KAAKuP,MAAM7U,GAAY4Q,EAAK8C,MAAQ,IACxC,CCTO,MAAM,GAAO,sBACP,GAAc,WACd,GAAY,CACrBzG,KAAM/I,OACNgL,SAAU,CAAC,CAAC,OAAQ,OAIjB,SAAS,KACZ,MAAMjM,EAAQqC,KAAKgB,WACnB,IACI2G,EACA4iB,EAFA3gB,EAAW,KA4Bf,OAxBA5J,KAAKkN,IAAInS,IAELiF,KAAKU,YAAcvG,IACnBwN,EAAO3H,KAAKmN,sBACZod,EAAgB5iB,EAAKwP,cAEjBnX,KAAK4M,gBAAgB,IAAMvR,GAC3BuO,EAAW5J,KAAK6J,aACTqH,eAAe1L,KAAKxF,KAAKqL,OAAQkf,IACxCvqB,KAAK2C,SACLiH,EAAW5J,KAAKqL,OAAOkf,GAAe/kB,KAAKxF,MAC3CA,KAAK2C,WAELiH,EAAW5J,KAAK6J,aAChBD,EAAS7C,KACL/G,KAAKoqB,IAAI,MAAM,KAIvBpqB,KAAKkN,IAAI7R,KAETsM,EAAO3H,KAAKiN,QAAQ/S,IAGjB,CACHuH,KAAM,sBACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2G,OACAiC,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAKuP,MAAMxU,GAAO,KAEI,OAAlBuQ,EAAK1B,SACL5J,KAAKuP,MAAMrV,GAAOoR,EAAK3D,OAEvB3H,KAAKuP,MAAMpV,GAAemR,EAAK3D,KAAO,KACtC3H,KAAK4J,SAAS0B,GACdtL,KAAKuP,MAAMlU,GAAkB,KAErC,CCzDO,MAAM,GAAO,wBACP,GAAc,WACd,GAAY,CACrBsM,KAAM/I,OACNgL,SAAU,CAAC,CAAC,OAAQ,OAIjB,SAAS,KACZ,MAAMjM,EAAQqC,KAAKgB,WACnB,IACI2G,EACA4iB,EAFA3gB,EAAW,KA6Bf,OAzBA5J,KAAKkN,IAAInS,IACTiF,KAAKkN,IAAInS,IAELiF,KAAKU,YAAcvG,IACnBwN,EAAO3H,KAAKmN,sBACZod,EAAgB5iB,EAAKwP,cAEjBnX,KAAK4M,gBAAgB,IAAMvR,GAC3BuO,EAAW5J,KAAK6J,aACTqH,eAAe1L,KAAKxF,KAAKqL,OAAQkf,IACxCvqB,KAAK2C,SACLiH,EAAW5J,KAAKqL,OAAOkf,GAAe/kB,KAAKxF,MAC3CA,KAAK2C,WAELiH,EAAW5J,KAAK6J,aAChBD,EAAS7C,KACL/G,KAAKoqB,IAAI,MAAM,KAIvBpqB,KAAKkN,IAAI7R,KAETsM,EAAO3H,KAAKiN,QAAQ/S,IAGjB,CACHuH,KAAM,wBACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2G,OACAiC,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAKuP,MAAMxU,GAAO,KAClBiF,KAAKuP,MAAMxU,GAAO,KAEI,OAAlBuQ,EAAK1B,SACL5J,KAAKuP,MAAMrV,GAAOoR,EAAK3D,OAEvB3H,KAAKuP,MAAMpV,GAAemR,EAAK3D,KAAO,KACtC3H,KAAK4J,SAAS0B,GACdtL,KAAKuP,MAAMlU,GAAkB,KAErC,CC3DA,MAAM,GAAU,GAYhB,SAASozB,KAGL,OAFAzuB,KAAK2C,SAEG3C,KAAKU,WACT,KAAK,GACD,OAAOV,KAAKsZ,SAEhB,KAAKnf,GACD,OAAO6F,KAAK7F,SAAS6F,KAAK0J,aAAc1J,KAAKmL,MAAMyhB,OAEvD,QACI5sB,KAAK6H,MAAM,kCAEvB,CAEO,MAAM,GAAO,QACP,GAAY,CACrBylB,KAAM,CAAC,SAAU,YACjBI,MAAO,CAAC,SAAU,WAAY,OAI3B,SAAS,KACZ,MAAM/vB,EAAQqC,KAAKgB,WACbssB,EAAOmB,GAAYjpB,KAAKxF,MAC9B,IAAI0tB,EAAQ,KAQZ,OANA1tB,KAAK2C,SACD3C,KAAKyC,QAAQ,MACbzC,KAAK0N,SAAS,IACdggB,EAAQe,GAAYjpB,KAAKxF,OAGtB,CACHyB,KAAM,QACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClCssB,OACAI,QAER,CAEO,SAAS,GAASpiB,GACrBtL,KAAKsL,KAAKA,EAAKgiB,MACfttB,KAAKuP,MAAM9U,GAAO,KACd6Q,EAAKoiB,MACL1tB,KAAKsL,KAAKA,EAAKoiB,OAEf1tB,KAAKsL,KAAK,GAAa,EAE/B,CCjEA,SAASojB,KACL,OAAI1uB,KAAKe,WAAa,GACdf,KAAK8B,YAAY,KAAOlH,GACjBoF,KAAKe,WAAa,EACnBf,KAAKoC,cAAcpC,KAAKe,WAAa,GACrCf,KAAKiB,gBAIZjB,KAAKgB,UAChB,CAEO,MAAM,GAAO,MACP,GAAY,CACrBoN,MAAOxP,QAGJ,SAAS,GAAM+vB,EAAcC,GAChC,MAAMtvB,EAAcU,KAAKoC,cAAcpC,KAAKe,YAC5C,IAAI8tB,EAUJ,OARA7uB,KAAK4C,kBAAkB5C,KAAKe,WAAY4tB,GAAgB3uB,KAAK8L,wBAGzD+iB,EADAD,GAAqB5uB,KAAKgB,WAAa1B,EAC3BovB,GAAmBlpB,KAAKxF,MAExBA,KAAKgB,WAGd,CACHS,KAAM,MACNoM,IAAK7N,KAAKE,YAAYZ,EAAauvB,GACnCzgB,MAAOpO,KAAKsC,UAAUhD,EAAauvB,GAE3C,CAEO,SAAS,GAASvjB,GACrBtL,KAAKY,SAAS0K,EAAK8C,MACvB,CCtCA,SAAS,KACL,OAAOpO,KAAKoqB,IAAIpqB,KAAK+L,8BAA8B,EACvD,CAEA,SAAS+iB,KACL,MAAMjK,EAAU7kB,KAAKwuB,eAQrB,MANqB,QAAjB3J,EAAQpjB,OACK,IAAbzB,KAAKc,KACLd,KAAKU,YAAcpF,IACnB0E,KAAK6H,QAGFgd,CACX,CAEO,MAAM,GAAO,OACP,GAAc,OACd,GAAY,CACrBA,QAAS,CAAC,eAAgB,OAC1BvQ,MAAO,CAAC,UAGL,SAAS,KACZ,MAAMzR,EAAa7C,KAAKe,WAClBzB,EAAcU,KAAKgB,WACzB,IAAI6jB,EACAvQ,EAUJ,OAPIuQ,EADA7kB,KAAK2L,iBACK3L,KAAKsM,kBAAkBwiB,GAAgB,IAEvC,GAAWtpB,KAAKxF,KAAM6C,GAGpCyR,EAAQtU,KAAK+S,OAAM,GAEZ,CACHtR,KAAM,OACNoM,IAAK7N,KAAKE,YAAYZ,EAAaU,KAAKgB,YACxC6jB,UACAvQ,QAER,CACO,SAAS,GAAShJ,GACrBtL,KAAKsL,KAAKA,EAAKuZ,SACf7kB,KAAKsL,KAAKA,EAAKgJ,MACnB,CC3CO,MAAM,GAAO,QACP,GAAY,CACrBZ,KAAM,CAAC,eAAgB,MAAO,MAC9Bqb,MAAO,CAAC,eAAgB,MAAO,OAG5B,SAAS,KACZ,IAAIrb,EAAO,KACPqb,EAAQ,KAEZ/uB,KAAK2C,SAEL,MAAMrD,EAAcU,KAAKgB,WA0BzB,OAzBIhB,KAAKU,YAActF,KACnB4E,KAAK6B,OACL7B,KAAK2C,SACL+Q,EAAO1T,KAAKsM,kBACRtM,KAAKwuB,cACL,IAAMxuB,KAAKoqB,KAAI,GAAO,KAE1BpqB,KAAK2C,SACL3C,KAAKkN,IAAI7R,KAGT2E,KAAK4M,gBAAgB,KAAO1S,KAC5B8F,KAAK2C,SACL3C,KAAKyN,SAAS,MACdzN,KAAK2C,SACL3C,KAAKkN,IAAI9R,IACT4E,KAAK2C,SACLosB,EAAQ/uB,KAAKsM,kBACTtM,KAAKwuB,cACL,IAAMxuB,KAAKoqB,KAAI,GAAO,KAE1BpqB,KAAK2C,SACL3C,KAAKkN,IAAI7R,KAGN,CACHoG,KAAM,QACNoM,IAAK7N,KAAKE,YAAYZ,EAAaU,KAAKgB,YACxC0S,OACAqb,QAER,CAEO,SAAS,GAASzjB,GACjBA,EAAKoI,OACL1T,KAAKuP,MAAMnU,GAAiB,KAC5B4E,KAAKsL,KAAKA,EAAKoI,MACf1T,KAAKuP,MAAMlU,GAAkB,MAG7BiQ,EAAKyjB,QACL/uB,KAAKuP,MAAMrV,GAAO,MAClB8F,KAAKuP,MAAMnU,GAAiB,KAC5B4E,KAAKsL,KAAKA,EAAKyjB,OACf/uB,KAAKuP,MAAMlU,GAAkB,KAErC,CCjEO,MAAM,GAAO,WACP,GAAY,CACrBuO,SAAU,CAAC,CACP,eACA,aACA,gBACA,oBACA,sBACA,wBACA,gBAID,SAAS,KACZ,MAAMA,EAAW5J,KAAK0J,aAAa1J,KAAKmL,MAAM6jB,UAO9C,OAJwC,OAApChvB,KAAKoM,iBAAiBxC,IACtB5J,KAAK6H,MAAM,wBAGR,CACHpG,KAAM,WACNoM,IAAK7N,KAAK4N,oBAAoBhE,GAC9BA,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAK4J,SAAS0B,EAClB,CC5BO,MAAM,GAAO,eACP,GAAc,WACd,GAAY,CACrB1B,SAAU,CAAC,CACP,WACA,SAID,SAAS,KACZ,MAAMA,EAAW5J,KAAK6J,aAEtB,MAAQ7J,KAAKc,MACT8I,EAAS7C,KAAK/G,KAAKgvB,YAEfhvB,KAAKU,YAAczF,KACnB+E,KAAK6B,OAOb,MAAO,CACHJ,KAAM,eACNoM,IAAK7N,KAAK4N,oBAAoBhE,GAC9BA,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAK4J,SAAS0B,GAAM,IAAMtL,KAAKuP,MAAMtU,GAAO,MAChD,CC1BA,MAAMg0B,GAAkB,GAClBC,GAAiB,GACjB,GAAa,GAEZ,SAASC,GAAOniB,GACnB,MAAMoiB,EAAMpiB,EAAIhQ,OACVqyB,EAAYriB,EAAI3P,WAAW,GAC3BM,EAAQ0xB,IAAcH,IAAkBG,IAAc,GAAa,EAAI,EACvEzxB,EAAgB,IAAVD,GAAeyxB,EAAM,GAAKpiB,EAAI3P,WAAW+xB,EAAM,KAAOC,EAAYD,EAAM,EAAIA,EAAM,EAC9F,IAAIE,EAAU,GAEd,IAAK,IAAIvyB,EAAIY,EAAOZ,GAAKa,EAAKb,IAAK,CAC/B,IAAIrB,EAAOsR,EAAI3P,WAAWN,GAE1B,GAAIrB,IAASuzB,GAAiB,CAE1B,GAAIlyB,IAAMa,EAAK,CAGPb,IAAMqyB,EAAM,IACZE,EAAUtiB,EAAI7D,OAAOpM,EAAI,IAE7B,KACJ,CAKA,GAHArB,EAAOsR,EAAI3P,aAAaN,GAGpBV,GAAc4yB,GAAiBvzB,GAAO,CACtC,MAAM6zB,EAAcxyB,EAAI,EAClByyB,EAAYvxB,GAAe+O,EAAKuiB,GAEtCxyB,EAAIyyB,EAAY,EAChBF,GAAW7wB,GAAcuO,EAAI1K,UAAUitB,EAAc,EAAGC,GAC5D,MAEiB,KAAT9zB,GAA6C,KAA1BsR,EAAI3P,WAAWN,EAAI,IACtCA,GAGZ,MACIuyB,GAAWtiB,EAAIjQ,EAEvB,CAEA,OAAOuyB,CACX,CAIO,SAASG,GAAOziB,EAAK0iB,GACxB,MAAMC,EAAQD,EAAa,IAAO,IAC5BE,EAAYF,EAAa,GAAaR,GAC5C,IAAIW,EAAU,GACVC,GAAsB,EAE1B,IAAK,IAAI/yB,EAAI,EAAGA,EAAIiQ,EAAIhQ,OAAQD,IAAK,CACjC,MAAMrB,EAAOsR,EAAI3P,WAAWN,GAGf,IAATrB,EAQAA,GAAQ,IAAmB,MAATA,GAClBm0B,GAAW,KAAOn0B,EAAK8sB,SAAS,IAChCsH,GAAsB,GAKtBp0B,IAASk0B,GAAal0B,IAASuzB,IAC/BY,GAAW,KAAO7iB,EAAIyO,OAAO1e,GAC7B+yB,GAAsB,IAElBA,IAAwBn0B,GAAWD,IAASU,GAAaV,MACzDm0B,GAAW,KAIfA,GAAW7iB,EAAIyO,OAAO1e,GACtB+yB,GAAsB,GAxBtBD,GAAW,GA0BnB,CAEA,OAAOF,EAAQE,EAAUF,CAC7B,CC/FO,MAAM,GAAO,SACP,GAAY,CACrBvhB,MAAOxP,QAGJ,SAAS,KACZ,MAAO,CACH6C,KAAM,SACNoM,IAAK7N,KAAKE,YAAYF,KAAKgB,WAAYhB,KAAKkB,UAC5CkN,MAAO+gB,GAAOnvB,KAAKiN,QAAQ,KAEnC,CAEO,SAAS,GAAS3B,GACrBtL,KAAKuP,MAAM,GAAakgB,GAAOnkB,EAAK8C,OACxC,CCVA,MAAM,GAAkB,GAExB,SAAS,KACL,OAAOpO,KAAKoqB,IAAI,MAAM,EAC1B,CAEO,MAAM,GAAO,aACP,GAAc,aACd,GAAY,CACrBxgB,SAAU,CAAC,CACP,UACA,MACA,MACA,SACA,OACA,SAID,SAAS,KACZ,MAAMjM,EAAQqC,KAAKgB,WACb4I,EAAW5J,KAAK6J,aACtB,IAAIG,EAGJ,MAAQhK,KAAKc,KAAK,CACd,OAAQd,KAAKU,WACT,KAAK9F,GACDoF,KAAK6B,OACL,SAEJ,KAAKrG,GAED,GAAIwE,KAAK3C,WAAW2C,KAAKgB,WAAa,KAAO,GAAiB,CAC1DhB,KAAK6B,OACL,QACJ,CAEAmI,EAAQhK,KAAKxE,UACb,MAEJ,KAAKX,GACDmP,EAAQhK,KAAKnF,MACb,MAEJ,KAAKC,GACDkP,EAAQhK,KAAKlF,MACb,MAKJ,KAAKV,GACD4P,EAAQhK,KAAKsM,kBAAkBtM,KAAK6S,OAAQ,IAC5C,MAGJ,QACI7I,EAAQhK,KAAKsM,kBAAkBtM,KAAK8S,KAAM,IAGlDlJ,EAAS7C,KAAKiD,EAClB,CAEA,MAAO,CACHvI,KAAM,aACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC4I,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAK4J,SAAS0B,EAClB,CC5EO,MAAM,GAAO,sBACP,GAAY,CACrBiJ,YAAa,eAGV,SAAS,KACZ,MAAM5W,EAAQqC,KAAKgB,WAEnBhB,KAAKkN,IAAI9R,IACT4E,KAAK2C,SAEL,MAAM4R,EAAcvU,KAAKiT,cAMzB,OAJKjT,KAAKc,KACNd,KAAKkN,IAAI7R,IAGN,CACHoG,KAAM,sBACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClCuT,cAER,CAEO,SAAS,GAASjJ,GACrBtL,KAAKuP,MAAMnU,GAAiB,KAC5B4E,KAAKsL,KAAKA,EAAKiJ,aACfvU,KAAKuP,MAAMlU,GAAkB,IACjC,CC/BA,MAAM,GAAW,GACX,GAAe,IAErB,SAAS00B,KACD/vB,KAAKU,YAAcxG,KACQ,IAA3B8F,KAAKyC,QAAQ,KACbzC,KAAK6H,MAAM,sCAGf7H,KAAK6B,MACT,CAEO,MAAM,GAAO,eACP,GAAY,CACrB8F,KAAM/I,QAWH,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WAcnB,OAZIhB,KAAKyC,QAAQ,KACbzC,KAAK6B,OACLkuB,GAAwBvqB,KAAKxF,QAE7B+vB,GAAwBvqB,KAAKxF,MAEzBA,KAAKyC,QAAQ,MACbzC,KAAK6B,OACLkuB,GAAwBvqB,KAAKxF,QAI9B,CACHyB,KAAM,eACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC2G,KAAM3H,KAAKqC,eAAe1E,GAElC,CAEO,SAAS,GAAS2N,GACrBtL,KAAKY,SAAS0K,EAAK3D,KACvB,CC5CA,MAAM,GAAW,GACX,GAAc,GACd,GAAe,GAErB,SAASqoB,GAAe5yB,EAAQqb,GAC5B,IAAI2W,EAAM,EAEV,IAAK,IAAI5sB,EAAMxC,KAAKgB,WAAa5D,EAAQoF,EAAMxC,KAAKkB,SAAUsB,IAAO,CACjE,MAAM9G,EAAOsE,KAAK3C,WAAWmF,GAE7B,GAAI9G,IAAS,IAAe+c,GAAqB,IAAR2W,EAErC,OADAY,GAAexqB,KAAKxF,KAAM5C,EAASgyB,EAAM,GAAG,IACpC,EAGPzzB,GAAWD,IACZsE,KAAK6H,MACD4Q,GAAqB,IAAR2W,EACP,gBAAkBA,EAAM,EAAI,gBAAkB,IAAM,eACnDA,EAAM,EAAI,wBAA0B,mBAC3C5sB,KAIF4sB,EAAM,GACRpvB,KAAK6H,MAAM,sBAAuBrF,EAE1C,CAGA,OADAxC,KAAK6B,OACEutB,CACX,CAEA,SAASa,GAAwB/wB,GAC7B,IAAIgxB,EAAQ,EAEZ,KAAOlwB,KAAKyC,QAAQ,OACVytB,EAAQhxB,GACVc,KAAK6H,MAAM,2BAGf7H,KAAK6B,MAEb,CAEA,SAAS,GAAWnG,GACZsE,KAAK3C,WAAW2C,KAAKgB,cAAgBtF,GACrCsE,KAAK6H,OAAOnM,IAAS,GAAW,YAAc,gBAAkB,eAExE,CAqBA,SAASy0B,KACL,IAAIC,EAAY,EAEhB,OAAQpwB,KAAKU,WACT,KAAK,GAMD,GAFA0vB,EAAYJ,GAAexqB,KAAKxF,KAAM,GAAG,GAErCA,KAAKyC,QAAQ,IAAe,CAC5BwtB,GAAwBzqB,KAAKxF,KAAM,EAAIowB,GACvC,KACJ,CAEA,GAAIpwB,KAAKU,YAAc/F,IACnBqF,KAAKU,YAAc,GAAQ,CAC3B,GAAW8E,KAAKxF,KAAM,IACtBgwB,GAAexqB,KAAKxF,KAAM,GAAG,GAC7B,KACJ,CAEA,MAEJ,KAAKrF,GAEDy1B,EAAYJ,GAAexqB,KAAKxF,KAAM,GAAG,GAErCowB,EAAY,GACZH,GAAwBzqB,KAAKxF,KAAM,EAAIowB,GAG3C,MAEJ,QAKI,GAFApwB,KAAK0N,SAAS,IAEV1N,KAAKU,YAAcxG,GAAO,CAC1Bk2B,EAAYJ,GAAexqB,KAAKxF,KAAM,GAAG,GACrCowB,EAAY,GACZH,GAAwBzqB,KAAKxF,KAAM,EAAIowB,GAE3C,KACJ,CAEA,GAAIpwB,KAAKyC,QAAQ,IAAe,CAC5BzC,KAAK6B,OACLouB,GAAwBzqB,KAAKxF,KAAM,GACnC,KACJ,CAEAA,KAAK6H,MAAM,0CAEvB,CAEO,MAAM,GAAO,eACP,GAAY,CACrBuG,MAAOxP,QAGJ,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WAMnB,OAHAhB,KAAKyN,SAAS,KACd0iB,GAAiB3qB,KAAKxF,MAEf,CACHyB,KAAM,eACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClCoN,MAAOpO,KAAKqC,eAAe1E,GAEnC,CAEO,SAAS,GAAS2N,GACrBtL,KAAKY,SAAS0K,EAAK8C,MACvB,CCnJA,MAAM,GAAQ,GACR,GAAkB,GAClB,GAAiB,GACjB,GAAa,GACb,GAAkB,GAClB,GAAmB,GAElB,SAAS,GAAOpB,GACnB,MAAMoiB,EAAMpiB,EAAIhQ,OAChB,IAAIW,EAAQ,EACRC,EAAMoP,EAAI3P,WAAW+xB,EAAM,KAAO,GAAmBA,EAAM,EAAIA,EAAM,EACrEE,EAAU,GAEd,KAAO3xB,EAAQC,GAAOxB,GAAa4Q,EAAI3P,WAAWM,KAC9CA,IAGJ,KAAOA,EAAQC,GAAOxB,GAAa4Q,EAAI3P,WAAWO,KAC9CA,IAGJ,IAAK,IAAIb,EAAIY,EAAOZ,GAAKa,EAAKb,IAAK,CAC/B,IAAIrB,EAAOsR,EAAI3P,WAAWN,GAE1B,GAAIrB,IAAS,GAAiB,CAE1B,GAAIqB,IAAMa,EAAK,CAGPb,IAAMqyB,EAAM,IACZE,EAAUtiB,EAAI7D,OAAOpM,EAAI,IAE7B,KACJ,CAKA,GAHArB,EAAOsR,EAAI3P,aAAaN,GAGpBV,GAAc,GAAiBX,GAAO,CACtC,MAAM6zB,EAAcxyB,EAAI,EAClByyB,EAAYvxB,GAAe+O,EAAKuiB,GAEtCxyB,EAAIyyB,EAAY,EAChBF,GAAW7wB,GAAcuO,EAAI1K,UAAUitB,EAAc,EAAGC,GAC5D,MAEiB,KAAT9zB,GAA6C,KAA1BsR,EAAI3P,WAAWN,EAAI,IACtCA,GAGZ,MACIuyB,GAAWtiB,EAAIjQ,EAEvB,CAEA,OAAOuyB,CACX,CAEO,SAAS,GAAOtiB,GACnB,IAAI6iB,EAAU,GACVC,GAAsB,EAE1B,IAAK,IAAI/yB,EAAI,EAAGA,EAAIiQ,EAAIhQ,OAAQD,IAAK,CACjC,MAAMrB,EAAOsR,EAAI3P,WAAWN,GAGf,IAATrB,EAQAA,GAAQ,IAAmB,MAATA,GAClBm0B,GAAW,KAAOn0B,EAAK8sB,SAAS,IAChCsH,GAAsB,GAItBp0B,IAAS,IACTA,IAAS,IACTA,IAAS,IACTA,IAAS,IACTA,IAAS,IACTA,IAAS,IACTm0B,GAAW,KAAO7iB,EAAIyO,OAAO1e,GAC7B+yB,GAAsB,IAElBA,GAAuBn0B,GAAWD,KAClCm0B,GAAW,KAGfA,GAAW7iB,EAAIyO,OAAO1e,GACtB+yB,GAAsB,GA3BtBD,GAAW,GA6BnB,CAEA,MAAO,OAASA,EAAU,GAC9B,CClGO,MAAM,GAAO,MACP,GAAY,CACrBzhB,MAAOxP,QAIJ,SAAS,KACZ,MAAMjB,EAAQqC,KAAKgB,WACnB,IAAIoN,EAEJ,OAAQpO,KAAKU,WACT,KAAKnG,GACD6T,EAAQ,GAAWpO,KAAKiN,QAAQ1S,KAChC,MAEJ,KAAKJ,GACI6F,KAAKtC,OAAOsC,KAAKgB,WAAYhB,KAAKkB,SAAU,SAC7ClB,KAAK6H,MAAM,+BAGf7H,KAAKkN,IAAI/S,IACT6F,KAAK2C,SACLyL,EAAQ,GAAcpO,KAAKiN,QAAQ,KACnCjN,KAAK2C,SACA3C,KAAKc,KACNd,KAAKkN,IAAI7R,IAEb,MAEJ,QACI2E,KAAK6H,MAAM,+BAGnB,MAAO,CACHpG,KAAM,MACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClCoN,QAER,CAEO,SAAS,GAAS9C,GACrBtL,KAAKuP,MAAMhV,GAAK,GAAW+Q,EAAK8C,OACpC,CCnDO,MAAM,GAAO,QACP,GAAY,CACrBxE,SAAU,CAAC,KAGR,SAAS,KACZ,MAAMjM,EAAQqC,KAAKgB,WACb4I,EAAW5J,KAAK0J,aAAa1J,KAAKmL,MAAMyhB,OAE9C,MAAO,CACHnrB,KAAM,QACNoM,IAAK7N,KAAKE,YAAYvC,EAAOqC,KAAKgB,YAClC4I,WAER,CAEO,SAAS,GAAS0B,GACrBtL,KAAK4J,SAAS0B,EAClB,CChBA,MAAM,GAAQxD,OAAO2P,OAAO,CACxBhW,KAAM,aACNoM,IAAK,KACLO,MAAO,MAGE,GAAO,aACP,GAAY,CACrBA,MAAOxP,QAGJ,SAAS,KAEZ,OADAoB,KAAKkN,IAAItS,IACF,EAOX,CAEO,SAAS,GAAS0Q,GACrBtL,KAAKuP,MAAM3U,GAAY0Q,EAAK8C,MAChC,CCtBA,UACIiX,SAAS,EACTrN,gBAAe,GCLf,SAAW,EACX,gBAAmB,CACf,UACA,UACA,QACA,SACA,gBAEJ,MAAS,CACL,MAAS,CACL,MACA,OACA,MACA,QAEJ,QAAW,CACP,MAEJ,KAAQ,CACJ,MAEJ,UAAa,CACT,KACA,OAEJ,OAAU,CACN,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,MACA,OACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,MACA,MACA,MACA,MACA,QACA,SAEJ,WAAc,CACV,MACA,OACA,OACA,KAEJ,UAAa,CACT,MAEJ,KAAQ,CACJ,IACA,OAGR,MAAS,CACL,QAAS,oBACT,gBAAiB,iEACjB,SAAU,qBACV,cAAe,wBACf,mBAAoB,uBACpB,qBAAsB,qBACtB,qBAAsB,+BACtB,0BAA2B,2EAC3B,sBAAuB,0CACvB,SAAU,qBACV,SAAU,qBACV,UAAW,mCACX,WAAc,qBACd,SAAU,2DACV,eAAgB,6BAChB,gBAAiB,MACjB,qBAAsB,qGACtB,cAAe,+EACf,kBAAmB,0IACnB,KAAQ,mBACR,oBAAqB,yBACrB,cAAe,0EACf,WAAY,eACZ,WAAY,uFACZ,cAAe,8NACf,UAAW,gDACX,SAAU,mBACV,aAAc,kJACd,IAAO,qCACP,eAAgB,oCAChB,SAAU,qBACV,WAAY,6CACZ,eAAgB,gDAChB,aAAc,mEACd,gBAAiB,8BACjB,iBAAkB,kBAClB,kBAAmB,yBACnB,WAAY,+CACZ,UAAW,0BACX,iBAAkB,oBAClB,cAAe,QACf,MAAS,gGACT,aAAc,yCACd,mBAAoB,0BACpB,oBAAqB,2BACrB,kBAAmB,wEACnB,6BAA8B,sGAC9B,WAAc,wBACd,oBAAqB,yCACrB,cAAe,6HACf,kBAAmB,+HACnB,uBAAwB,iCACxB,oBAAqB,2CACrB,yBAA0B,uBAC1B,mBAAoB,mEACpB,wBAAyB,sBACzB,mBAAoB,iFACpB,wBAAyB,6BACzB,uBAAwB,kDACxB,eAAgB,8EAChB,mBAAoB,uCACpB,sBAAuB,UACvB,aAAc,oCACd,QAAS,oBACT,QAAW,2BACX,YAAa,+CACb,eAAgB,iBAChB,gBAAiB,kCACjB,qBAAsB,iBACtB,aAAc,2DACd,eAAgB,sDAChB,+BAAgC,0GAChC,0BAA2B,iWAC3B,2BAA4B,uDAC5B,cAAe,gBACf,iBAAkB,sCAClB,mBAAoB,uLACpB,iBAAkB,qEAClB,mBAAoB,mDACpB,kBAAmB,sBACnB,gBAAiB,wCACjB,4BAA6B,mDAC7B,0BAA2B,kCAC3B,YAAa,wFACb,YAAa,mDACb,eAAgB,iBAChB,QAAS,+CACT,QAAS,oBACT,sBAAuB,8CACvB,cAAe,2BACf,oBAAqB,+BACrB,eAAgB,0FAChB,sBAAuB,0DACvB,2BAA4B,yBAC5B,4BAA6B,gCAC7B,iCAAkC,8BAClC,qBAAsB,iBACtB,YAAa,kBACb,kBAAmB,kIACnB,uBAAwB,6BACxB,iBAAkB,6GAClB,gBAAiB,sBACjB,eAAgB,4EAChB,aAAc,+GACd,wBAAyB,oIACzB,qBAAsB,sBACtB,uBAAwB,gCACxB,uBAAwB,2BACxB,mBAAoB,uDACpB,iBAAkB,mGAClB,eAAgB,6CAChB,eAAgB,2CAChB,SAAY,yKACZ,cAAe,mCACf,YAAa,uFACb,wBAAyB,iDACzB,QAAS,wHACT,SAAU,0HACV,IAAO,mBACP,eAAgB,wBAChB,2BAA4B,6CAC5B,QAAS,wFACT,UAAW,uBACX,MAAS,gFACT,UAAW,oDACX,cAAe,mCACf,mBAAoB,sDACpB,YAAa,iBACb,aAAc,UACd,qBAAsB,mDACtB,UAAW,+DACX,WAAY,gCACZ,iBAAkB,0BAClB,iBAAkB,8CAClB,sBAAuB,oBACvB,oBAAqB,0DACrB,QAAS,0HACT,UAAW,wBACX,aAAc,yBACd,QAAS,0GACT,WAAY,0BACZ,cAAe,8BACf,oBAAqB,wBACrB,eAAgB,kCAChB,aAAc,0BACd,iBAAkB,gCAClB,aAAc,mEACd,aAAc,6BACd,oBAAqB,sBACrB,oBAAqB,+BACrB,oBAAqB,wGACrB,QAAS,kCACT,aAAc,gJACd,gBAAiB,mFACjB,iBAAkB,6BAClB,cAAe,QACf,eAAgB,+BAChB,WAAY,yBACZ,aAAc,4BACd,QAAS,qBACT,YAAa,6CACb,kBAAmB,uDACnB,6BAA8B,4CAC9B,gBAAiB,2CACjB,kBAAmB,2DACnB,YAAa,wBACb,WAAY,4CACZ,cAAe,iFACf,mBAAoB,iBACpB,aAAc,UACd,aAAc,YACd,UAAW,UACX,WAAY,yBACZ,WAAY,gLACZ,WAAY,uCACZ,QAAS,qBACT,WAAY,2HACZ,QAAS,iCACT,cAAe,wDACf,cAAe,48CACf,mBAAoB,UACpB,YAAa,2BACb,oBAAqB,wBACrB,wBAAyB,8BACzB,0BAA2B,yCAC3B,yBAA0B,mCAC1B,IAAO,uBACP,YAAa,mCACb,oBAAqB,cACrB,iBAAkB,wBAClB,YAAa,gEACb,kBAAmB,oDACnB,uBAAwB,oOACxB,qBAAsB,sBACtB,gBAAiB,wCACjB,YAAa,mDACb,SAAU,oCACV,UAAW,0CACX,gBAAiB,uCACjB,YAAa,uEACb,oBAAqB,oBACrB,SAAY,qMACZ,QAAS,iCACT,wBAAyB,yDACzB,0BAA2B,+DAC3B,cAAe,6BACf,MAAS,sDACT,oBAAqB,oFACrB,MAAS,qCACT,QAAS,0DACT,WAAY,kEACZ,0BAA2B,yFAC3B,oBAAqB,mCACrB,yBAA0B,uBAC1B,gBAAiB,iBACjB,QAAS,iCACT,eAAgB,wDAChB,6BAA8B,2FAC9B,8BAA+B,kFAC/B,8BAA+B,8FAC/B,wBAAyB,6BACzB,QAAS,gKACT,SAAU,oKACV,WAAY,6BACZ,aAAc,gEACd,YAAa,8BACb,YAAa,8BACb,YAAa,8BACb,UAAW,0DACX,oBAAqB,0BACrB,aAAc,kCACd,UAAW,yCACX,YAAa,yCACb,WAAY,oCACZ,WAAY,oCACZ,WAAY,oCACZ,WAAY,kCACZ,SAAY,oBACZ,gBAAiB,2DACjB,eAAgB,iDAChB,SAAU,qBACV,SAAU,+CACV,UAAW,4BACX,UAAW,4BACX,UAAW,+BACX,OAAU,kCACV,WAAY,4BACZ,MAAS,oFACT,YAAa,mBACb,iBAAkB,6BAClB,QAAS,oBACT,mBAAoB,sPACpB,6BAA8B,6CAC9B,6BAA8B,+BAC9B,mCAAoC,oBACpC,8BAA+B,iBAC/B,4BAA6B,+CAC7B,oBAAqB,sGACrB,6BAA8B,qBAC9B,KAAQ,4FACR,SAAU,qBACV,gBAAiB,oDACjB,uBAAwB,8DACxB,oBAAqB,8EACrB,qBAAsB,4HACtB,qBAAsB,iEACtB,mBAAoB,yCACpB,gBAAiB,oBACjB,uBAAwB,iCACxB,OAAU,kCACV,eAAgB,gNAChB,QAAS,oBACT,OAAU,yDACV,mBAAoB,yEACpB,oBAAqB,qFACrB,gBAAiB,yEACjB,kBAAmB,sBACnB,sBAAuB,wDACvB,kBAAmB,+DACnB,gBAAiB,0DACjB,aAAc,+DACd,eAAgB,4EAChB,aAAc,sGACd,qBAAsB,qQACtB,iBAAkB,wBAClB,4BAA6B,wBAC7B,cAAe,0DACf,gBAAiB,sEACjB,eAAgB,oCAChB,eAAgB,oCAChB,eAAgB,yBAChB,eAAgB,mKAChB,gBAAiB,6BACjB,QAAS,uDACT,SAAU,6CACV,kBAAmB,2BACnB,aAAc,qCACd,UAAW,6BACX,mBAAoB,mJACpB,0BAA2B,uLAC3B,oCAAqC,qNACrC,oCAAqC,kDACrC,0BAA2B,uLAC3B,oCAAqC,qNACrC,oCAAqC,wIACrC,+BAAgC,0EAChC,gCAAiC,iBACjC,qBAAsB,mTACtB,sBAAuB,67BACvB,gCAAiC,8EACjC,yBAA0B,4GAC1B,qBAAsB,+KACtB,qBAAsB,+NACtB,8BAA+B,yFAC/B,yBAA0B,kFAC1B,0BAA2B,wBAC3B,wBAAyB,gBACzB,0BAA2B,uBAC3B,2BAA4B,yBAC5B,sBAAuB,4DACvB,6BAA8B,iFAC9B,6BAA8B,gDAC9B,sBAAuB,kEACvB,0BAA2B,0FAC3B,IAAO,kBACP,cAAe,iBACf,YAAa,YACb,gBAAiB,cACjB,UAAW,oBACX,OAAU,gBACV,iBAAkB,iBAClB,sBAAuB,6FACvB,YAAa,kEACb,gBAAiB,+BACjB,OAAU,sBACV,0BAA2B,yDAC3B,mBAAoB,4DACpB,qBAAsB,iDACtB,+BAAgC,mCAChC,KAAQ,gBACR,aAAc,uEACd,iBAAkB,0FAClB,gBAAiB,0DACjB,4BAA6B,8BAC7B,4BAA6B,+DAC7B,iBAAkB,6BAClB,cAAe,mFACf,cAAe,qEACf,qBAAsB,iBACtB,MAAS,iEACT,qBAAsB,iBACtB,MAAS,gBACT,cAAe,4BACf,YAAa,4BACb,0BAA2B,+BAC3B,mCAAoC,gCACpC,gBAAiB,0BACjB,6BAA8B,2BAC9B,uBAAwB,qBACxB,8BAA+B,4BAC/B,wBAAyB,sDACzB,wBAAyB,2DACzB,yBAA0B,wCAC1B,2BAA4B,qDAC5B,kBAAmB,sCACnB,iCAAkC,6CAClC,+BAAgC,yBAChC,aAAc,iCACd,mBAAoB,6BACpB,IAAO,gBACP,EAAK,WACL,EAAK,WACL,YAAe,wDACf,mBAAoB,uCACpB,IAAO,8CACP,eAAgB,yCAChB,kBAAmB,iBACnB,wBAAyB,iBACzB,UAAW,yDACX,oBAAqB,yCACrB,wBAAyB,mDACzB,iBAAkB,2DAClB,aAAc,8CACd,YAAa,sBACb,UAAW,4HACX,UAAW,4GACX,cAAe,8BACf,SAAU,mEACV,SAAU,yFACV,kBAAmB,yFACnB,eAAgB,qCAChB,gBAAiB,gBACjB,cAAe,oCACf,kBAAmB,6FACnB,kBAAmB,+DACnB,wBAAyB,yJACzB,aAAc,2uBACd,gBAAiB,yvBACjB,WAAY,oEACZ,cAAe,yFACf,gBAAiB,2EACjB,cAAe,mDACf,iBAAkB,iBAClB,WAAY,0DACZ,aAAc,sCACd,oBAAqB,oBACrB,kBAAmB,uHACnB,qBAAsB,0DAE1B,WAAc,CACV,MAAO,sBACP,kBAAmB,aACnB,wBAAyB,cACzB,4BAA6B,eAC7B,sBAAuB,YACvB,yBAA0B,gEAC1B,6BAA8B,eAC9B,6BAA8B,eAC9B,wBAAyB,mEACzB,+BAAgC,wEAChC,6BAA8B,2BAC9B,aAAc,WACd,gBAAiB,yBACjB,gBAAiB,yBACjB,mBAAoB,sCACpB,gBAAiB,sCACjB,2BAA4B,YAC5B,4BAA6B,sBAC7B,4BAA6B,qBAC7B,2BAA4B,wBAC5B,gBAAiB,aACjB,qBAAsB,+CACtB,8BAA+B,UAC/B,4BAA6B,UAC7B,2BAA4B,UAC5B,iCAAkC,UAClC,2BAA4B,UAC5B,gCAAiC,UACjC,6BAA8B,UAC9B,4BAA6B,UAC7B,sBAAuB,eACvB,mBAAoB,8GACpB,yBAA0B,gBAC1B,yBAA0B,WAC1B,yBAA0B,gBAC1B,yBAA0B,WAC1B,mBAAoB,cACpB,2BAA4B,6FAC5B,2BAA4B,6FAC5B,uBAAwB,2BACxB,oBAAqB,wDACrB,oBAAqB,wDACrB,yBAA0B,8BAC1B,qBAAsB,+EACtB,mBAAoB,gBACpB,kBAAmB,oBACnB,gBAAiB,oCACjB,kBAAmB,WACnB,mBAAoB,YACpB,kBAAmB,6tDACnB,eAAgB,aAChB,4BAA6B,gBAC7B,0BAA2B,gBAC3B,2BAA4B,gBAC5B,yBAA0B,gBAC1B,0BAA2B,kDAC3B,kBAAmB,gDACnB,+BAAgC,MAChC,oBAAqB,eACrB,cAAe,mCACf,sBAAuB,mDACvB,iCAAkC,mBAClC,kCAAmC,mBACnC,8BAA+B,mBAC/B,+BAAgC,mBAChC,oBAAqB,wBACrB,kBAAmB,aACnB,kBAAmB,mFACnB,kBAAmB,6BACnB,mBAAoB,kCACpB,uBAAwB,eACxB,qBAAsB,kCACtB,qBAAsB,8oCACtB,wBAAyB,8CACzB,8BAA+B,UAC/B,8BAA+B,mBAC/B,8BAA+B,mBAC/B,sBAAuB,+CACvB,qBAAsB,iBACtB,eAAgB,sIAChB,0BAA2B,gBAC3B,oBAAqB,uCACrB,yBAA0B,qBAC1B,qBAAsB,oBACtB,sBAAuB,kCACvB,wBAAyB,cACzB,0BAA2B,2CAC3B,0BAA2B,2CAC3B,sBAAuB,kBACvB,wBAAyB,+BACzB,wBAAyB,+BACzB,oBAAqB,aACrB,6BAA8B,aAC9B,8BAA+B,UAC/B,0BAA2B,UAC3B,sBAAuB,oBACvB,4BAA6B,UAC7B,4BAA6B,WAC7B,wBAAyB,eACzB,sBAAuB,iDACvB,eAAgB,eAChB,gBAAiB,4FACjB,cAAe,4EACf,aAAc,+EACd,eAAgB,+FAChB,IAAO,4CACP,cAAe,uBACf,eAAgB,2BAChB,UAAa,sBACb,wBAAyB,kCACzB,kBAAmB,UACnB,sBAAuB,gCACvB,qBAAsB,UACtB,sBAAuB,gCACvB,4BAA6B,sCAC7B,iBAAkB,2BAClB,uBAAwB,iCACxB,kBAAmB,wDACnB,sBAAuB,2EACvB,wBAAyB,2EACzB,4BAA6B,qBAC7B,qBAAsB,+BACtB,WAAc,oDACd,eAAgB,gBAChB,QAAW,8HACX,kBAAmB,8BACnB,sBAAuB,iBACvB,WAAc,mCACd,wBAAyB,gBACzB,wBAAyB,gBACzB,kBAAmB,aACnB,mBAAoB,UACpB,mBAAoB,cACpB,oBAAqB,SACrB,sBAAuB,iBACvB,wBAAyB,gEACzB,wBAAyB,gEACzB,oBAAqB,kBACrB,kBAAmB,aACnB,aAAc,YACd,OAAU,sCACV,eAAgB,sDAChB,qBAAsB,4BACtB,qBAAsB,uBACtB,qBAAsB,uBACtB,mBAAoB,sDACpB,yBAA0B,uBAC1B,yBAA0B,uBAC1B,yBAA0B,uBAC1B,qBAAsB,sDACtB,2BAA4B,uBAC5B,2BAA4B,uBAC5B,2BAA4B,uBAC5B,gBAAiB,sCACjB,sBAAuB,uBACvB,4BAA6B,2BAC7B,6BAA8B,2BAC9B,sBAAuB,eACvB,sBAAuB,eACvB,kBAAmB,oBACnB,eAAgB,eAChB,wBAAyB,2BACzB,0BAA2B,2BAC3B,eAAgB,2JAChB,sBAAuB,2BACvB,sBAAuB,oCACvB,qBAAsB,kCACtB,sBAAuB,eACvB,qBAAsB,2CACtB,gBAAiB,sDACjB,oBAAqB,sDACrB,sBAAuB,4BACvB,sBAAuB,uBACvB,sBAAuB,uBACvB,0BAA2B,uBAC3B,0BAA2B,uBAC3B,0BAA2B,uBAC3B,sBAAuB,sDACvB,4BAA6B,uBAC7B,4BAA6B,uBAC7B,4BAA6B,uBAC7B,cAAe,sCACf,oBAAqB,UACrB,oBAAqB,eACrB,oBAAqB,eACrB,gBAAiB,yDACjB,eAAgB,sCAChB,qBAAsB,UACtB,qBAAsB,eACtB,qBAAsB,eACtB,iBAAkB,qBAClB,0BAA2B,2BAC3B,4BAA6B,2BAC7B,eAAgB,oBAChB,aAAc,sCACd,mBAAoB,UACpB,yBAA0B,2BAC1B,0BAA2B,2BAC3B,mBAAoB,eACpB,mBAAoB,eACpB,eAAgB,oBAChB,OAAU,6BACV,YAAa,oCACb,uBAAwB,cACxB,gBAAiB,yBACjB,WAAY,WACZ,iBAAkB,YAClB,YAAa,kBACb,oBAAqB,YACrB,aAAc,qDACd,WAAY,2BACZ,aAAc,iBACd,aAAc,yBACd,cAAe,uGACf,eAAgB,uGAChB,eAAgB,kDAChB,eAAgB,2DAChB,MAAS,mCACT,cAAe,eACf,cAAe,4BACf,MAAS,+CACT,KAAQ,eACR,YAAa,qDACb,YAAa,kBACb,MAAS,UACT,8BAA+B,sBAC/B,eAAgB,6CAChB,eAAgB,iBAChB,cAAe,eACf,aAAc,6BACd,cAAe,sEACf,oBAAqB,UACrB,oBAAqB,mBACrB,oBAAqB,mBACrB,cAAe,WACf,eAAgB,gBAChB,QAAW,qCACX,QAAW,kEACX,yBAA0B,+BAC1B,+BAAgC,wBAChC,2BAA4B,wBAC5B,gCAAiC,wBACjC,0BAA2B,wBAC3B,UAAa,6CACb,iBAAkB,uBAClB,iBAAkB,6BAClB,QAAW,gFACX,qBAAsB,sBACtB,oBAAqB,oCACrB,gBAAiB,uEACjB,cAAe,oCACf,OAAU,2cACV,EAAK,wBACL,GAAM,wBACN,GAAM,wBACN,UAAa,UACb,QAAW,qIACX,oBAAqB,mIACrB,cAAe,YACf,eAAgB,gBAChB,KAAQ,UACR,eAAgB,oBAChB,YAAa,kBACb,OAAU,yDACV,KAAQ,wDACR,aAAc,oBACd,iBAAkB,wCAClB,YAAa,oCACb,YAAa,WACb,cAAe,WACf,YAAa,2BACb,MAAS,0CACT,KAAQ,6KACR,cAAe,oCACf,wBAAyB,8BACzB,eAAgB,mBAChB,yBAA0B,kBAC1B,sBAAuB,YACvB,eAAgB,yCAChB,0BAA2B,8BAC3B,YAAa,sDACb,mBAAoB,gFACpB,cAAe,6CACf,eAAgB,0BAChB,aAAc,iCACd,iBAAkB,6CAClB,0BAA2B,YAC3B,4BAA6B,YAC7B,uBAAwB,YACxB,wBAAyB,YACzB,eAAgB,6kBAChB,0BAA2B,oPAC3B,oBAAqB,oFACrB,0BAA2B,wEAC3B,qBAAsB,4BACtB,yBAA0B,kHAC1B,uBAAwB,+GACxB,wBAAyB,mBACzB,cAAe,wCACf,sBAAuB,kCACvB,IAAO,8BACP,KAAQ,4JACR,YAAa,mCACb,oBAAqB,gBACrB,iBAAkB,sBAClB,iBAAkB,gBAClB,cAAe,+BACf,kBAAmB,cACnB,kBAAmB,sBACnB,oBAAqB,cACrB,WAAY,wCACZ,WAAY,+BACZ,eAAgB,cAChB,eAAgB,sBAChB,iBAAkB,cAClB,gBAAiB,6IACjB,sBAAuB,iBACvB,wBAAyB,gEACzB,qBAAsB,gEACtB,sBAAuB,4CACvB,OAAU,iIACV,sBAAuB,gBACvB,wBAAyB,wBACzB,QAAW,mBACX,oBAAqB,qCACrB,kBAAmB,2FACnB,mBAAoB,oCACpB,WAAY,uCACZ,iBAAkB,+BAClB,uBAAwB,wCACxB,cAAe,YACf,iBAAkB,YAClB,MAAS,eACT,cAAe,eACf,kBAAmB,UACnB,oBAAqB,UACrB,eAAgB,eAChB,mBAAoB,UACpB,qBAAsB,UACtB,mBAAoB,8BACpB,UAAa,eACb,kBAAmB,qFACnB,gBAAiB,0HACjB,eAAgB,4FAChB,iBAAkB,wFAClB,KAAQ,6BACR,iBAAkB,6BAClB,aAAc,oCACd,aAAc,iBACd,cAAe,wCACf,mBAAoB,WACpB,aAAc,qEACd,mBAAoB,eACpB,sBAAuB,iBACvB,kBAAmB,gCACnB,OAAU,oCACV,eAAgB,uBAChB,mBAAoB,kBACpB,qBAAsB,kBACtB,gBAAiB,6BACjB,gBAAiB,uBACjB,oBAAqB,kBACrB,sBAAuB,kBACvB,cAAe,6BACf,eAAgB,6BAChB,aAAc,6BACd,cAAe,mBACf,OAAU,aACV,aAAc,aACd,aAAc,aACd,eAAgB,aAChB,KAAQ,gBACR,cAAe,sJACf,mBAAoB,kBACpB,qBAAsB,2BACtB,qBAAsB,oCACtB,oBAAqB,iCACrB,qBAAsB,eACtB,oBAAqB,2CACrB,YAAa,4BACb,iBAAkB,0BAClB,aAAc,oBACd,YAAa,kBACb,cAAe,kBACf,gBAAiB,cACjB,cAAe,kBACf,YAAa,aACb,YAAa,kBACb,oBAAqB,wCACrB,aAAc,sCACd,aAAc,iBACd,aAAc,iBACd,iBAAkB,gBAClB,aAAc,+HACd,kBAAmB,gBACnB,YAAa,iBACb,YAAa,+HACb,iBAAkB,gBAClB,aAAc,iIACd,kBAAmB,gBACnB,YAAa,iIACb,iBAAkB,4BAClB,aAAc,qCACd,kBAAmB,aACnB,OAAU,8GACV,gBAAiB,kBACjB,kBAAmB,sBACnB,cAAe,kCACf,kBAAmB,yBACnB,gBAAiB,0BACjB,QAAW,gBACX,MAAS,YACT,QAAW,YACX,QAAW,4DACX,gBAAiB,eACjB,iBAAkB,WAClB,gBAAiB,wBACjB,gBAAiB,eACjB,SAAY,kEACZ,kBAAmB,YACnB,iBAAkB,kCAClB,oBAAqB,0BACrB,uBAAwB,+BACxB,kBAAmB,kCACnB,gBAAiB,6BACjB,aAAc,kCACd,aAAc,kCACd,QAAW,YACX,sBAAuB,2BACvB,4BAA6B,oBAC7B,6BAA8B,oBAC9B,wBAAyB,oBACzB,wBAAyB,oBACzB,QAAW,+BACX,gBAAiB,wBACjB,oBAAqB,mBACrB,sBAAuB,mBACvB,iBAAkB,wBAClB,iBAAkB,wBAClB,qBAAsB,mBACtB,uBAAwB,mBACxB,eAAgB,wBAChB,gBAAiB,wBACjB,cAAe,wBACf,KAAQ,sBACR,mBAAoB,2CACpB,oBAAqB,2CACrB,oBAAqB,aACrB,cAAe,iCACf,YAAe,gBACf,qBAAsB,aACtB,gBAAiB,yCACjB,cAAe,qCACf,aAAc,mCACd,iBAAkB,6FAClB,SAAY,uDACZ,kBAAmB,qBACnB,gBAAiB,uBACjB,eAAgB,qDAChB,yBAA0B,2DAC1B,qBAAsB,oBACtB,sBAAuB,uDACvB,qBAAsB,gBACtB,OAAU,iCACV,EAAK,wBACL,OAAU,6CACV,MAAS,6BACT,OAAU,4CACV,UAAW,6BACX,aAAc,0CACd,aAAc,yBACd,gBAAiB,4CACjB,GAAM,wBACN,GAAM,wBACN,MAAS,oCACT,kBAAmB,kBACnB,mBAAoB,2BACpB,kBAAmB,iBACnB,kBAAmB,cACnB,gBAAiB,gBACjB,sBAAuB,gBACvB,4BAA6B,WAC7B,0BAA2B,WAC3B,uBAAwB,WACxB,uBAAwB,gBACxB,6BAA8B,WAC9B,2BAA4B,WAC5B,qBAAsB,WACtB,sBAAuB,WACvB,oBAAqB,WACrB,iBAAkB,kCAClB,uBAAwB,kCACxB,6BAA8B,2BAC9B,2BAA4B,2BAC5B,wBAAyB,2BACzB,wBAAyB,kCACzB,8BAA+B,2BAC/B,4BAA6B,2BAC7B,sBAAuB,2BACvB,uBAAwB,2BACxB,qBAAsB,2BACtB,oBAAqB,+BACrB,yBAA0B,mBAC1B,0BAA2B,aAC3B,uBAAwB,qCACxB,uBAAwB,qCACxB,mBAAoB,gBACpB,mBAAoB,sDACpB,qBAAsB,2BACtB,qBAAsB,2BACtB,kBAAmB,wDACnB,uBAAwB,sBACxB,uBAAwB,yBACxB,wBAAyB,gBACzB,eAAgB,sBAChB,gBAAiB,4CACjB,kBAAmB,mDACnB,OAAU,UACV,mBAAoB,wBACpB,oBAAqB,eACrB,iBAAkB,oBAClB,kBAAmB,oBACnB,oBAAqB,0BACrB,iBAAkB,cAClB,eAAgB,eAChB,WAAY,qBACZ,eAAgB,aAChB,aAAc,mDACd,kBAAmB,2CACnB,cAAe,mBACf,uBAAwB,+BACxB,kBAAmB,gHACnB,wBAAyB,UACzB,uBAAwB,+EACxB,uBAAwB,oFACxB,2BAA4B,gBAC5B,wBAAyB,kCACzB,4BAA6B,uCAC7B,gBAAiB,mDACjB,sBAAuB,UACvB,yBAA0B,mCAC1B,sBAAuB,4EACvB,cAAe,4CACf,eAAgB,uCAChB,mBAAoB,yBACpB,gBAAiB,gCACjB,iBAAkB,2DAClB,cAAe,mBACf,mBAAoB,yBACpB,oBAAqB,kEACrB,iBAAkB,gEAClB,wBAAyB,6BACzB,0BAA2B,uCAC3B,YAAa,0CACb,iBAAkB,mBAClB,kBAAmB,6BACnB,iBAAkB,uBAClB,IAAO,6BACP,eAAgB,2FAChB,UAAa,wBACb,gBAAiB,sDACjB,mBAAoB,kJACpB,kBAAmB,mBACnB,WAAc,uBACd,sBAAuB,+BACvB,mBAAoB,UACpB,sBAAuB,UACvB,sBAAuB,qCACvB,6BAA8B,qBAC9B,UAAa,4DACb,eAAgB,6KAChB,cAAe,6BACf,gBAAiB,uEACjB,iBAAkB,kFAClB,gBAAiB,oDACjB,qBAAsB,sBACtB,sBAAuB,qCACvB,qBAAsB,uBACtB,uBAAwB,sBACxB,WAAc,0BACd,cAAe,mHACf,uBAAwB,yEACxB,OAAU,YACV,MAAS,iIACT,cAAe,8BACf,aAAc,mDACd,eAAgB,kBAChB,YAAa,oBACb,eAAgB,mFAChB,EAAK,wBACL,EAAK,wBACL,UAAW,iBACX,KAAQ,qCACR,uBAAwB,iBACxB,gCAAiC,gCACjC,iCAAkC,iCAClC,6BAA8B,6BAC9B,8BAA+B,iCAC/B,oCAAqC,iBACrC,0BAA2B,iBAC3B,mBAAoB,0BACpB,iBAAkB,oCAClB,sBAAuB,yCACvB,qBAAsB,8CACtB,oBAAqB,kBACrB,gBAAiB,sCACjB,iBAAkB,YAClB,oBAAqB,gBACrB,0BAA2B,iBAC3B,yBAA0B,2BAC1B,wBAAyB,2BACzB,qBAAsB,2BACtB,2BAA4B,iCAC5B,0BAA2B,uCAC3B,6BAA8B,oBAC9B,8BAA+B,oBAC/B,8BAA+B,oBAC/B,yBAA0B,6CAC1B,yBAA0B,iFAC1B,6BAA8B,gBAC9B,wBAAyB,0BACzB,oBAAqB,oBACrB,sBAAuB,qBACvB,qBAAsB,mIACtB,iBAAkB,kCAClB,SAAY,SACZ,IAAO,gCACP,YAAa,wBACb,aAAc,wBACd,+BAAgC,UAChC,6BAA8B,UAC9B,QAAW,oBACX,MAAS,oCACT,cAAe,iDACf,eAAgB,iDAChB,KAAQ,kCACR,aAAc,iDACd,cAAe,iDACf,IAAO,yDACP,MAAS,oBACT,WAAY,iEACZ,gBAAiB,YACjB,gBAAiB,kDACjB,iBAAkB,cAClB,eAAgB,gFAChB,cAAe,iGACf,cAAe,iGACf,aAAc,wDACd,eAAgB,sCAChB,eAAgB,uDAChB,mBAAoB,qDAExB,QAAW,CACP,QAAW,CACP,QAAW,WACX,YAAe,MAEnB,gBAAiB,CACb,QAAW,uBACX,YAAe,CACX,mBAAoB,yBACpB,SAAY,uBACZ,SAAY,qBACZ,IAAO,sBACP,OAAU,WACV,MAAS,kCACT,WAAY,4DACZ,OAAU,WACV,QAAW,YACX,OAAU,kGAGlB,SAAY,CACR,QAAW,mGACX,YAAe,MAEnB,sBAAuB,CACnB,QAAW,iBACX,YAAe,CACX,eAAgB,6BAChB,cAAe,iBACf,kBAAmB,6CAG3B,YAAa,CACT,QAAW,KACX,YAAe,CACX,kBAAmB,sBACnB,mBAAoB,sBACpB,eAAgB,sCAChB,cAAe,gBACf,wBAAyB,8BACzB,0BAA2B,8BAC3B,eAAgB,+BAChB,aAAc,qCACd,cAAe,8BACf,oBAAqB,sBACrB,cAAe,eACf,IAAO,yDACP,gBAAiB,cAGzB,sBAAuB,CACnB,QAAW,iBACX,YAAe,MAEnB,OAAU,CACN,QAAW,0HACX,YAAe,MAEnB,UAAa,CACT,QAAW,mBACX,YAAe,MAEnB,MAAS,CACL,QAAW,gCACX,YAAe,MAEnB,MAAS,CACL,QAAW,qBACX,YAAe,MAEnB,UAAa,CACT,QAAW,uCACX,YAAe,MAEnB,KAAQ,CACJ,QAAW,uBACX,YAAe,CACX,MAAS,gBACT,MAAS,qBACT,mBAAoB,mCACpB,KAAQ,2DAGhB,eAAgB,CACZ,QAAW,iBACX,YAAe,CACX,IAAO,UACP,KAAQ,WACR,OAAU,aACV,MAAS,YACT,oBAAqB,wBACrB,kBAAmB,sBACnB,qBAAsB,yBACtB,mBAAoB,uBACpB,cAAe,kBACf,eAAgB,mBAChB,MAAS,YACT,aAAc,iBACd,cAAe,kBACf,gBAAiB,oBACjB,eAAgB,mBAChB,qBAAsB,yBACtB,mBAAoB,uBACpB,sBAAuB,0BACvB,oBAAqB,wBACrB,OAAU,aACV,eAAgB,mBAChB,gBAAiB,oBACjB,MAAS,YACT,OAAU,aACV,YAAa,gBACb,aAAc,iBACd,YAAa,gBACb,aAAc,iBACd,aAAc,iBACd,cAAe,kBACf,iBAAkB,qBAClB,kBAAmB,sBACnB,iBAAkB,qBAClB,kBAAmB,sBACnB,aAAc,+BACd,eAAgB,mCAGxB,SAAY,CACR,QAAW,yBACX,YAAe,CACX,OAAU,WACV,SAAY,aACZ,gBAAiB,yBAGzB,MAAS,CACL,QAAW,6CACX,YAAe,MAEnB,iBAAkB,CACd,QAAW,KACX,YAAe,MAEnB,SAAY,CACR,QAAW,uBACX,YAAe,MAEnB,UAAa,CACT,QAAW,4CACX,YAAe,MAEnB,KAAQ,CACJ,QAAW,0BACX,YAAe,ODhxCvB1M,KAAI,IEcO,SAAS+kB,GAAkBtmB,GACtC,OAAQ/J,KAAKU,WACT,KAAKrG,GACD,OAAO2F,KAAK3F,OAEhB,KAAKY,GACD,OAAO+E,KAAKswB,WAEhB,KAAKl1B,GACD,OAAO4E,KAAKuwB,YAAYvwB,KAAK0J,aAAcK,EAAQJ,YAEvD,KAAKzO,GACD,OAAO8E,KAAKwwB,SAASxwB,KAAK0J,aAAcK,EAAQJ,YAEpD,KAAK,GACD,OAAO3J,KAAKpB,SAEhB,KAAKjE,GACD,OAAOqF,KAAKrF,YAEhB,KAAKD,GACD,OAAOsF,KAAKtF,aAEhB,KAAK,GACD,OAAOsF,KAAKsZ,SAEhB,KAAKnf,GACD,OAAO6F,KAAKtC,OAAOsC,KAAKgB,WAAYhB,KAAKkB,SAAU,QAC7ClB,KAAKzF,MACLyF,KAAK7F,SAAS6F,KAAK0J,aAAcK,EAAQJ,YAEnD,KAAKpP,GACD,OAAOyF,KAAKzF,MAEhB,KAAKL,GAED,OAAI8F,KAAKzC,QAAQyC,KAAKgB,WAtCxB,MAuCMhB,KAAKzC,QAAQyC,KAAKgB,WAAa,EA1C9B,IA2CMhB,KAAKywB,eAELzwB,KAAKmrB,aAGpB,KAAK1wB,GAAO,CACR,MAAMiB,EAAOsE,KAAK3C,WAAW2C,KAAKgB,YAElC,GAjDI,KAiDAtF,GApDC,KAqDDA,GApDC,KAqDDA,GApDI,KAqDJA,EACA,OAAOsE,KAAKswB,WAzDT,KA8DH50B,GACAsE,KAAK6H,MAAM,gCAAiC7H,KAAKgB,WAAa,GAGlE,KACJ,EAER,CClFA,UACIiJ,QAAO,ICuFX,UACIE,aAtEJ,SAAsBtI,EAAM+H,GACF,OAAlBA,EAAS3E,MAAwC,eAAvB2E,EAAS3E,KAAKxD,MAC/B,OAATI,GAA+B,eAAdA,EAAKJ,MACtBmI,EAAS7C,KAAK,CACVtF,KAAM,aACNoM,IAAK,KACLlG,KAAM,KAGlB,EA8DIsC,QA5DJ,WACI,OAAQjK,KAAKU,WACT,KAAKxF,GACD,OAAO8E,KAAK0wB,oBAEhB,KAAKr2B,GACD,OAAO2F,KAAK2wB,aAEhB,KAAK51B,GACD,OAAIiF,KAAK8B,WAAW,KAAO/G,GAChBiF,KAAK4wB,wBAEL5wB,KAAK6wB,sBAGpB,KAAK32B,GACD,OAAO8F,KAAK8wB,eAEhB,KAAK,GACL,KAAKp2B,GACD,OAAOsF,KAAKtF,aAEhB,KAAKC,GAtCI,KAwCDqF,KAAK3C,WAAW2C,KAAKgB,aACrBhB,KAAK6H,MAAM,yBAA0B7H,KAAKgB,WAAa,GAE3D,MAEJ,KAAKvG,GAGD,OAFauF,KAAK3C,WAAW2C,KAAKgB,aAG9B,KAnDC,GAoDD,KAjDQ,GAkDR,KAhDF,IAiDE,KArDA,GAsDI,OAAOhB,KAAK+wB,aAEhB,KAvDC,GAwDG,OAAO/wB,KAAKgxB,gBAEhB,KA7DC,GA8DD,KAzDK,IA0DD,OAAOhxB,KAAK8wB,eAEhB,KAnEG,GAoEC,OAAO9wB,KAAK2wB,aAEhB,KArEE,GAsEE,OAAO3wB,KAAKixB,kBAGpB,MAGZ,GCpFA,SAASC,GAAoB5lB,GACzB,OACa,OAATA,GACc,aAAdA,EAAK7J,OACkC,MAAtC6J,EAAK8C,MAAM9C,EAAK8C,MAAMpR,OAAS,IAAoD,MAAtCsO,EAAK8C,MAAM9C,EAAK8C,MAAMpR,OAAS,GAErF,CAEA,UACIiN,QAAO,GACP,YAAAE,CAAatI,EAAM+H,GACXsnB,GAAoBrvB,KACpBA,EAAKuM,MAAQ,IAAMvM,EAAKuM,OAExB8iB,GAAoBtnB,EAAS3E,QAC7B2E,EAAS3E,KAAKmJ,OAAS,IAE/B,EACA,WCpBW,WACX,OAAOpO,KAAKmM,qBACRnM,KAAKoqB,IAAI,MAAM,GAEvB,EDiBI,IEpBW,WACX,MAAMxgB,EAAW5J,KAAK6J,aAStB,GAPA7J,KAAK2C,SAGLiH,EAAS7C,KAAK/G,KAAKmrB,cAEnBnrB,KAAK2C,SAED3C,KAAKU,YAAczF,GAAO,CAC1B2O,EAAS7C,KAAK/G,KAAKswB,YAEnB,MAAM7jB,EAAazM,KAAKe,WAClBqN,EAAQpO,KAAK6L,oBACb7L,KAAK4sB,MAAM,MACX5sB,KAAKoqB,IAAIpqB,KAAKiM,wCAAwC,GAE5D,GAAmB,UAAfmC,EAAM3M,MAAoB2M,EAAMxE,SAAS5E,QACzC,IAAK,IAAI5H,EAASqP,EAAazM,KAAKe,WAAY3D,GAAU,EAAGA,IACzD,GAAI4C,KAAK8B,WAAW1E,KAAYxC,GAAY,CACxCwT,EAAMxE,SAAS3D,WAAW,CACtBxE,KAAM,aACNoM,IAAK,KACLO,MAAO,MAEX,KACJ,CAIRxE,EAAS7C,KAAKqH,EAClB,CAEA,OAAOxE,CACX,GClCMunB,GAA2B,IAAI5iB,IAAI,CAAC,OAAQ,MAAO,MAAO,OAEhE,IACI9D,MAAO,CACH,OAAAoa,GACI,MAAMjb,EAAW5J,KAAK6J,aAEtB,GAAI7J,KAAKU,YAAcxG,GAAO,CAC1B,MAAMyN,EAAO3H,KAAKsC,UAAUtC,KAAKgB,WAAYhB,KAAKkB,UAE7CiwB,GAAyBniB,IAAIrH,EAAKwP,gBACnCvN,EAAS7C,KAAK/G,KAAKmrB,aAE3B,CAIA,OAFAvhB,EAAS7C,KAAK/G,KAAKqsB,UAAU,cAEtBziB,CACX,EACA,KAAA0K,CAAM8c,GAAS,GACX,OAAOpxB,KAAK+S,MAAMqe,EACtB,ICzBR,IACI3mB,MAAO,CACHoa,QAAS,KACT,KAAAvQ,GACI,OAAOtU,KAAK+S,OAAM,EACtB,ICIR,SAASzG,GAAkB7B,EAAO+B,GAC9B,OAAOxM,KAAKsM,mBACR,KACI,IACI,OAAO7B,EAAMjF,KAAKxF,KACtB,CAAE,QACEA,KAAK2C,SACD3C,KAAK4M,gBAAgB,KAAOvR,IAC5B2E,KAAK6H,OAEb,IAEJ2E,GAAY,KAAOxM,KAAKoqB,IAAI,MAAM,IAE1C,CAEA,MAAMiH,GAAiB,CACnB,KAAAC,GACItxB,KAAK2C,SAEL,MAAMiH,EAAW5J,KAAK6J,aAChByB,EAAOgB,GAAkB9G,KAAKxF,KAAMA,KAAK+tB,OAM/C,MAJkB,QAAdziB,EAAK7J,MAAiC,KAAf6J,EAAK8C,OAC5BxE,EAAS7C,KAAKuE,GAGX1B,CACX,EACA,QAAAsiB,GACIlsB,KAAK2C,SAEL,MAAMiH,EAAW5J,KAAK6J,aAChByB,EAAOgB,GAAkB9G,KAC3BxF,KACAA,KAAKiT,aACL,IAAM3G,GAAkB9G,KAAKxF,MAAM,IAAMA,KAAKqsB,UAAU,gBAO5D,MAJkB,QAAd/gB,EAAK7J,MAAiC,KAAf6J,EAAK8C,OAC5BxE,EAAS7C,KAAKuE,GAGX1B,CACX,GC1CJ,IACIqiB,UAAS,GACT,YAAa,GACbsF,OD0CJ,CACI9mB,MAAO,CACH,OAAAoa,GACI,MAAMjb,EAAW5J,KAAK6J,aAEtB,OAAQ7J,KAAKU,WACT,KAAK,GACDkJ,EAAS7C,KAAK/G,KAAKpB,UACnB,MAEJ,KAAKrE,GACL,KAAKJ,GACDyP,EAAS7C,KAAK/G,KAAKzF,OACnB,MAEJ,QACIyF,KAAK6H,MAAM,+BA2BnB,OAxBA7H,KAAK2C,SAED3C,KAAKU,YAAcxG,IACnB8F,KAAKtC,OAAOsC,KAAKgB,WAAYhB,KAAKkB,SAAU,SAC5C0I,EAAS7C,KAAK/G,KAAKmrB,cAEnBnrB,KAAKU,YAAcvG,IACnB6F,KAAKtC,OAAOsC,KAAKgB,WAAYhB,KAAKkB,SAAU,WAE5C0I,EAAS7C,KAAK/G,KAAK7F,SAAS,KAAMk3B,KAGtCrxB,KAAK2C,SAED3C,KAAKU,YAAcvG,IACnB6F,KAAKtC,OAAOsC,KAAKgB,WAAYhB,KAAKkB,SAAU,cAC5C0I,EAAS7C,KAAK/G,KAAK7F,SAAS,KAAMk3B,KAGlCrxB,KAAK4M,gBAAgB,KAAO1S,IAC5B8F,KAAK4M,gBAAgB,KAAOxR,IAC5BwO,EAAS7C,KAAK/G,KAAKwxB,kBAGhB5nB,CACX,EACA0K,MAAO,OCtFXgd,MCfJ,CACI7mB,MAAO,CACH,OAAAoa,GACI,OAAO7kB,KAAKmM,qBACRnM,KAAKyxB,YAEb,EACA,KAAAnd,GACI,OAAOtU,KAAK+S,OAAM,EACtB,IDOJiZ,MEhBJ,CACIvhB,MAAO,CACH,OAAAoa,GACI,OAAO7kB,KAAKmM,qBACRnM,KAAKwxB,iBAEb,EACA,KAAAld,CAAM8c,GAAS,GACX,OAAOpxB,KAAK+S,MAAMqe,EACtB,IFQJM,KGjBJ,CACIjnB,MAAO,CACH,OAAAoa,GACI,OAAO7kB,KAAKmM,qBACRnM,KAAKwuB,eAEb,EACA,KAAAla,GACI,OAAOtU,KAAK+S,OAAM,EACtB,IHSJ4e,KIlBJ,CACIlnB,MAAO,CACH,OAAAoa,GACI,OAAO7kB,KAAKmM,qBACRnM,KAAKwuB,eAEb,EACA,KAAAla,GACI,OAAOtU,KAAK+S,OAAM,EACtB,IJUJ5H,MKnBJ,CACIV,MAAO,CACH,OAAAoa,GACI,OAAO7kB,KAAKmM,qBACRnM,KAAK4xB,QAEb,EACA,KAAAtd,CAAM8c,GAAS,GACX,OAAOpxB,KAAK+S,MAAMqe,EACtB,ILWJ,iBMpBJ,CACI3mB,MAAO,CACHoa,QAAS,KACT,KAAAvQ,CAAM8c,GAAS,GACX,OAAOpxB,KAAK+S,MAAMqe,EACtB,INgBJlF,SOrBJ,CACIzhB,MAAO,CACH,OAAAoa,GACI,OAAO7kB,KAAKmM,qBACRnM,KAAKqsB,UAAU,YAEvB,EACA,KAAA/X,CAAM8c,GAAS,GACX,OAAOpxB,KAAK+S,MAAMqe,EACtB,KCPR,MAAMS,GAAe,CACjB,KAAApnB,GACI,OAAOzK,KAAKmM,qBACRnM,KAAKwuB,eAEb,GAGE,GAAW,CACb,KAAA/jB,GACI,OAAOzK,KAAKmM,qBACRnM,KAAKgvB,WAEb,GAGE8C,GAAY,CACd,KAAArnB,GACI,OAAOzK,KAAKmM,qBACRnM,KAAKmrB,aAEb,GAGE4G,GAAW,CACbtnB,MCzBG,WACH,MAAMb,EAAW5J,KAAK6J,aAEtB7J,KAAK2C,SAELK,EAAM,MAAQhD,KAAKc,KAAK,CACpB,OAAQd,KAAKU,WACT,KAAKxG,GACD0P,EAAS7C,KAAK/G,KAAKmrB,cACnB,MAEJ,KAAK,GACDvhB,EAAS7C,KAAK/G,KAAKpB,UACnB,MAEJ,KAAK3D,GACD2O,EAAS7C,KAAK/G,KAAKswB,YACnB,MAEJ,KAAKj1B,GACD,MAAM2H,EAEV,QACIhD,KAAK6H,MAAM,2CAGnB7H,KAAK2C,QACT,CAEA,OAAOiH,CACX,GDFM0kB,GAAM,CACR,KAAA7jB,GACI,OAAOzK,KAAKmM,qBACRnM,KAAKgyB,MAEb,GAGJ,IACI,IAAOF,GACP,IAAOD,GACP,KAAQE,GACR,QAAWF,GACX,GAAMA,GACN,WAAYA,GACZ,cAAeA,GACf,MAASA,GACT,IAAOA,GACP,YAAavD,GACb,iBAAkBA,GAClB,mBAAoBA,GACpB,cAAeA,GACf,QAAW,GACX,KAAQ,GACR,eAAgB,IEjDpB,GAAevmB,GAAa,IACrB2b,MCDP,CACIlY,aAAc,CACVymB,QAAS,aACT/d,WAAY,aACZ9I,OAAQ,SACR,aAAA+I,CAAclG,GACV,OAAOjO,KAAKwqB,cAAcvc,EAAQ7C,OAASxM,OAAOqP,EAAQ7C,QAAU,KACxE,EACA8mB,eAAgB,iBAChBC,WAAY,aACZ,SAAAjE,CAAUjgB,GACN,OAAOjO,KAAKqsB,UAAUpe,EAAQ0d,KAClC,EACAvX,KAAM,OACNyd,aAAc,eACdxd,SAAU,WACV,KAAAC,GACI,OAAOtU,KAAK+S,OAAM,EACtB,EACAqf,gBAAiB,kBACjB7d,YAAa,cACbnG,MAAO,SAEXlD,SAAU,CACNghB,SAAU,CACN,QAAA7X,GACI,OAAOrU,KAAKgvB,UAChB,GAEJ/C,UAAW,CACP,KAAAoG,GACI,OAAOryB,KAAKiT,aAChB,IAGR9H,MAAK,GACLC,OAAM,GACNC,OAAM,GACNC,KAAI,OCzCR,CACIA,KAAI,MCHKgnB,GAAU,QCEhB,SAASC,GAAMjnB,GAClB,MAAMtF,EAAS,CAAC,EAEhB,IAAK,MAAM0L,KAAO5J,OAAO0C,KAAKc,GAAO,CACjC,IAAI8C,EAAQ9C,EAAKoG,GAEbtD,IACIvR,MAAMiV,QAAQ1D,IAAUA,aAAiBnK,GACzCmK,EAAQA,EAAMrI,IAAIwsB,IACXnkB,EAAMrO,cAAgB+H,SAC7BsG,EAAQmkB,GAAMnkB,KAItBpI,EAAO0L,GAAOtD,CAClB,CAEA,OAAOpI,CACX,CCbA,MAAM,GAAkB,GAEjB,SAAS,GAAOgH,GACnB,MAAMpP,EAAMoP,EAAIhQ,OAAS,EACzB,IAAIsyB,EAAU,GAEd,IAAK,IAAIvyB,EAAI,EAAGA,EAAIiQ,EAAIhQ,OAAQD,IAAK,CACjC,IAAIrB,EAAOsR,EAAI3P,WAAWN,GAE1B,GAAIrB,IAAS,GAAiB,CAE1B,GAAIqB,IAAMa,EAEN,MAMJ,GAHAlC,EAAOsR,EAAI3P,aAAaN,GAGpBV,GAAc,GAAiBX,GAAO,CACtC,MAAM6zB,EAAcxyB,EAAI,EAClByyB,EAAYvxB,GAAe+O,EAAKuiB,GAEtCxyB,EAAIyyB,EAAY,EAChBF,GAAW7wB,GAAcuO,EAAI1K,UAAUitB,EAAc,EAAGC,GAC5D,MAEiB,KAAT9zB,GAA6C,KAA1BsR,EAAI3P,WAAWN,EAAI,IACtCA,GAGZ,MACIuyB,GAAWtiB,EAAIjQ,EAEvB,CAEA,OAAOuyB,CACX,CAIO,SAAS,GAAOtiB,GACnB,IAAI6iB,EAAU,GAMd,GAAmB,IAAf7iB,EAAIhQ,QAAsC,KAAtBgQ,EAAI3P,WAAW,GACnC,MAAO,MAKX,IAAK,IAAIN,EAAI,EAAGA,EAAIiQ,EAAIhQ,OAAQD,IAAK,CACjC,MAAMrB,EAAOsR,EAAI3P,WAAWN,GAGf,IAATrB,EAQAA,GAAQ,IAAmB,MAATA,GAEjBA,GAAQ,IAAUA,GAAQ,KAEjB,IAANqB,GAEM,IAANA,GAAiC,KAAtBiQ,EAAI3P,WAAW,IAI9BwyB,GAAW,KAAOn0B,EAAK8sB,SAAS,IAAM,IAQtCvsB,GAAOP,GACPm0B,GAAW7iB,EAAIyO,OAAO1e,GAGtB8yB,GAAW,KAAO7iB,EAAIyO,OAAO1e,GA7B7B8yB,GAAW,GA+BnB,CAEA,OAAOA,CACX,CCvFO,MACHjvB,SAAQ,GACR6J,MAAK,GACLkF,SAAQ,GACR+T,MAAK,eACLkG,GAEAtX,KAAI,QACJqC,GAAI,SACJE,GAAQ,QACRC,GAAO,cAEP4U,GAAa,gBACbD,GAAe,KAEfI,IACAtT,E,4DCtBJ,IAAIic,EAAO,EAAQ,4CACfxjB,EAAMlH,OAAOG,UAAUiJ,eACvBuhB,EAA8B,oBAAR/iB,IAQ1B,SAASgjB,IACP1yB,KAAK2yB,OAAS,GACd3yB,KAAK4yB,KAAOH,EAAe,IAAI/iB,IAAQ5H,OAAOC,OAAO,KACvD,CAKA2qB,EAASxtB,UAAY,SAA4B2tB,EAAQC,GAEvD,IADA,IAAIljB,EAAM,IAAI8iB,EACL31B,EAAI,EAAGqyB,EAAMyD,EAAO71B,OAAQD,EAAIqyB,EAAKryB,IAC5C6S,EAAI4P,IAAIqT,EAAO91B,GAAI+1B,GAErB,OAAOljB,CACT,EAQA8iB,EAASzqB,UAAUjJ,KAAO,WACxB,OAAOyzB,EAAezyB,KAAK4yB,KAAK5zB,KAAO8I,OAAOirB,oBAAoB/yB,KAAK4yB,MAAM51B,MAC/E,EAOA01B,EAASzqB,UAAUuX,IAAM,SAAsBwT,EAAMF,GACnD,IAAIG,EAAOR,EAAeO,EAAOR,EAAKU,YAAYF,GAC9CG,EAAcV,EAAezyB,KAAKgP,IAAIgkB,GAAQhkB,EAAIxJ,KAAKxF,KAAK4yB,KAAMK,GAClEjxB,EAAMhC,KAAK2yB,OAAO31B,OACjBm2B,IAAeL,GAClB9yB,KAAK2yB,OAAO5rB,KAAKisB,GAEdG,IACCV,EACFzyB,KAAK4yB,KAAKhjB,IAAIojB,EAAMhxB,GAEpBhC,KAAK4yB,KAAKK,GAAQjxB,EAGxB,EAOA0wB,EAASzqB,UAAU+G,IAAM,SAAsBgkB,GAC7C,GAAIP,EACF,OAAOzyB,KAAK4yB,KAAK5jB,IAAIgkB,GAErB,IAAIC,EAAOT,EAAKU,YAAYF,GAC5B,OAAOhkB,EAAIxJ,KAAKxF,KAAK4yB,KAAMK,EAE/B,EAOAP,EAASzqB,UAAUlE,QAAU,SAA0BivB,GACrD,GAAIP,EAAc,CAChB,IAAIzwB,EAAMhC,KAAK4yB,KAAK9iB,IAAIkjB,GACxB,GAAIhxB,GAAO,EACP,OAAOA,CAEb,KAAO,CACL,IAAIixB,EAAOT,EAAKU,YAAYF,GAC5B,GAAIhkB,EAAIxJ,KAAKxF,KAAK4yB,KAAMK,GACtB,OAAOjzB,KAAK4yB,KAAKK,EAErB,CAEA,MAAM,IAAIrsB,MAAM,IAAMosB,EAAO,uBAC/B,EAOAN,EAASzqB,UAAUmrB,GAAK,SAAqBC,GAC3C,GAAIA,GAAQ,GAAKA,EAAOrzB,KAAK2yB,OAAO31B,OAClC,OAAOgD,KAAK2yB,OAAOU,GAErB,MAAM,IAAIzsB,MAAM,yBAA2BysB,EAC7C,EAOAX,EAASzqB,UAAU7C,QAAU,WAC3B,OAAOpF,KAAK2yB,OAAOhqB,OACrB,EAEA2qB,EAAQ,EAAWZ,C,6DCnFnB,IAAIa,EAAS,EAAQ,8CAsDrBD,EAAQ7D,OAAS,SAA0B+D,GACzC,IACIC,EADA5D,EAAU,GAGV6D,EA3BN,SAAqBF,GACnB,OAAOA,EAAS,EACO,IAAhBA,GAAW,GACE,GAAfA,GAAU,EACjB,CAuBYG,CAAYH,GAEtB,GACEC,EAzCgBG,GAyCRF,GACRA,KAhDiB,GAiDP,IAGRD,GAjDS,IAmDX5D,GAAW0D,EAAO9D,OAAOgE,SAClBC,EAAM,GAEf,OAAO7D,CACT,EAMAyD,EAAQnE,OAAS,SAA0B6D,EAAMa,EAAQC,GACvD,IAGIC,EAAcN,EAvCGD,EAEjBQ,EAkCAC,EAASjB,EAAKh2B,OACdgJ,EAAS,EACTkB,EAAQ,EAGZ,EAAG,CACD,GAAI2sB,GAAUI,EACZ,MAAM,IAAIrtB,MAAM,8CAIlB,IAAe,KADf6sB,EAAQF,EAAOpE,OAAO6D,EAAK31B,WAAWw2B,OAEpC,MAAM,IAAIjtB,MAAM,yBAA2BosB,EAAKvX,OAAOoY,EAAS,IAGlEE,KA7EW,GA6EON,GAElBztB,IADAytB,GA3EgBG,KA4EY1sB,EAC5BA,GAnFiB,CAoFnB,OAAS6sB,GAETD,EAAU1lB,OAvDN4lB,GAFiBR,EAyDWxtB,IAvDR,EADU,GAAhBwtB,EAIdQ,GADCA,GAsDLF,EAAUI,KAAOL,CACnB,C,uDCpIA,IAAIM,EAAe,mEAAmEnrB,MAAM,IAK5FsqB,EAAQ7D,OAAS,SAAUriB,GACzB,GAAI,GAAKA,GAAUA,EAAS+mB,EAAan3B,OACvC,OAAOm3B,EAAa/mB,GAEtB,MAAM,IAAIgnB,UAAU,6BAA+BhnB,EACrD,EAMAkmB,EAAQnE,OAAS,SAAUpiB,GAiBzB,OAhBW,IAgBCA,GAAYA,GAfb,GAgBDA,EAjBC,GAGG,IAkBCA,GAAYA,GAjBb,IAkBJA,EAnBI,GASK,GANR,IAoBCA,GAAYA,GAnBb,GAoBDA,EArBC,GAOQ,GAJR,IAsBPA,EACK,GAtBG,IA0BRA,EACK,IAID,CACV,C,+DC3DA,IAAIylB,EAAO,EAAQ,4CAqBnB,SAAS6B,IACPr0B,KAAK2yB,OAAS,GACd3yB,KAAKs0B,SAAU,EAEft0B,KAAKu0B,MAAQ,CAACC,eAAgB,EAAGC,gBAAiB,EACpD,CAQAJ,EAAYpsB,UAAUysB,gBACpB,SAA6BC,EAAWC,GACtC50B,KAAK2yB,OAAOrtB,QAAQqvB,EAAWC,EACjC,EAOFP,EAAYpsB,UAAUuX,IAAM,SAAyBqV,GAtCrD,IAAgCC,EAAUC,EAEpCC,EACAC,EACAC,EACAC,EAL0BL,EAuCH90B,KAAKu0B,MAvCQQ,EAuCDF,EArCnCG,EAAQF,EAASN,cACjBS,EAAQF,EAASP,cACjBU,EAAUJ,EAASL,gBACnBU,EAAUJ,EAASN,gBAChBQ,EAAQD,GAASC,GAASD,GAASG,GAAWD,GAC9C1C,EAAK4C,oCAAoCN,EAAUC,IAAa,GAiCrE/0B,KAAKu0B,MAAQM,EACb70B,KAAK2yB,OAAO5rB,KAAK8tB,KAEjB70B,KAAKs0B,SAAU,EACft0B,KAAK2yB,OAAO5rB,KAAK8tB,GAErB,EAWAR,EAAYpsB,UAAU7C,QAAU,WAK9B,OAJKpF,KAAKs0B,UACRt0B,KAAK2yB,OAAOje,KAAK8d,EAAK4C,qCACtBp1B,KAAKs0B,SAAU,GAEVt0B,KAAK2yB,MACd,EAEAW,EAAQ,EAAce,C,uECvEtB,IAAIgB,EAAY,EAAQ,kDACpB7C,EAAO,EAAQ,4CACfE,EAAW,qDACX2B,EAAc,wDAUlB,SAASiB,EAAmBC,GACrBA,IACHA,EAAQ,CAAC,GAEXv1B,KAAKw1B,MAAQhD,EAAKiD,OAAOF,EAAO,OAAQ,MACxCv1B,KAAK01B,YAAclD,EAAKiD,OAAOF,EAAO,aAAc,MACpDv1B,KAAK21B,gBAAkBnD,EAAKiD,OAAOF,EAAO,kBAAkB,GAC5Dv1B,KAAK41B,sBAAwBpD,EAAKiD,OAAOF,EAAO,wBAAwB,GACxEv1B,KAAK61B,SAAW,IAAInD,EACpB1yB,KAAK81B,OAAS,IAAIpD,EAClB1yB,KAAK+1B,UAAY,IAAI1B,EACrBr0B,KAAKg2B,iBAAmB,IAC1B,CAEAV,EAAmBrtB,UAAUguB,SAAW,EAOxCX,EAAmBY,cACjB,SAA0CC,EAAoBC,GAC5D,IAAIC,EAAaF,EAAmBE,WAChCC,EAAY,IAAIhB,EAAmBxtB,OAAOK,OAAOiuB,GAAgB,CAAC,EAAG,CACvEG,KAAMJ,EAAmBI,KACzBF,WAAYA,KA2Cd,OAzCAF,EAAmBK,aAAY,SAAUC,GACvC,IAAIC,EAAa,CACfvmB,UAAW,CACT1Q,KAAMg3B,EAAQjC,cACd70B,OAAQ82B,EAAQhC,kBAIE,MAAlBgC,EAAQt5B,SACVu5B,EAAWv5B,OAASs5B,EAAQt5B,OACV,MAAdk5B,IACFK,EAAWv5B,OAASq1B,EAAKmE,SAASN,EAAYK,EAAWv5B,SAG3Du5B,EAAWtmB,SAAW,CACpB3Q,KAAMg3B,EAAQG,aACdj3B,OAAQ82B,EAAQI,gBAGE,MAAhBJ,EAAQ9uB,OACV+uB,EAAW/uB,KAAO8uB,EAAQ9uB,OAI9B2uB,EAAU3lB,WAAW+lB,EACvB,IACAP,EAAmBW,QAAQxxB,SAAQ,SAAUyxB,GAC3C,IAAIC,EAAiBD,EACF,OAAfV,IACFW,EAAiBxE,EAAKmE,SAASN,EAAYU,IAGxCT,EAAUT,SAAS7mB,IAAIgoB,IAC1BV,EAAUT,SAASrW,IAAIwX,GAGzB,IAAIC,EAAUd,EAAmBe,iBAAiBH,GACnC,MAAXE,GACFX,EAAUa,iBAAiBJ,EAAYE,EAE3C,IACOX,CACT,EAYFhB,EAAmBrtB,UAAU0I,WAC3B,SAAuC4kB,GACrC,IAAIplB,EAAYqiB,EAAKiD,OAAOF,EAAO,aAC/BnlB,EAAWoiB,EAAKiD,OAAOF,EAAO,WAAY,MAC1Cp4B,EAASq1B,EAAKiD,OAAOF,EAAO,SAAU,MACtC5tB,EAAO6qB,EAAKiD,OAAOF,EAAO,OAAQ,OAEjCv1B,KAAK21B,kBACyD,IAA7D31B,KAAKo3B,iBAAiBjnB,EAAWC,EAAUjT,EAAQwK,MAK3C,MAAVxK,IACFA,EAASyB,OAAOzB,GACX6C,KAAK61B,SAAS7mB,IAAI7R,IACrB6C,KAAK61B,SAASrW,IAAIriB,IAIV,MAARwK,IACFA,EAAO/I,OAAO+I,GACT3H,KAAK81B,OAAO9mB,IAAIrH,IACnB3H,KAAK81B,OAAOtW,IAAI7X,IAIpB3H,KAAK+1B,UAAUvW,IAAI,CACjBgV,cAAerkB,EAAU1Q,KACzBg1B,gBAAiBtkB,EAAUxQ,OAC3Bi3B,aAA0B,MAAZxmB,GAAoBA,EAAS3Q,KAC3Co3B,eAA4B,MAAZzmB,GAAoBA,EAASzQ,OAC7CxC,OAAQA,EACRwK,KAAMA,IAEV,EAKF2tB,EAAmBrtB,UAAUkvB,iBAC3B,SAA6CE,EAAaC,GACxD,IAAIn6B,EAASk6B,EACW,MAApBr3B,KAAK01B,cACPv4B,EAASq1B,EAAKmE,SAAS32B,KAAK01B,YAAav4B,IAGrB,MAAlBm6B,GAGGt3B,KAAKg2B,mBACRh2B,KAAKg2B,iBAAmBluB,OAAOC,OAAO,OAExC/H,KAAKg2B,iBAAiBxD,EAAKU,YAAY/1B,IAAWm6B,GACzCt3B,KAAKg2B,0BAGPh2B,KAAKg2B,iBAAiBxD,EAAKU,YAAY/1B,IACI,IAA9C2K,OAAO0C,KAAKxK,KAAKg2B,kBAAkBh5B,SACrCgD,KAAKg2B,iBAAmB,MAG9B,EAkBFV,EAAmBrtB,UAAUsvB,eAC3B,SAA2CpB,EAAoBkB,EAAaG,GAC1E,IAAIT,EAAaM,EAEjB,GAAmB,MAAfA,EAAqB,CACvB,GAA+B,MAA3BlB,EAAmBI,KACrB,MAAM,IAAI3vB,MACR,iJAIJmwB,EAAaZ,EAAmBI,IAClC,CACA,IAAIF,EAAar2B,KAAK01B,YAEJ,MAAdW,IACFU,EAAavE,EAAKmE,SAASN,EAAYU,IAIzC,IAAIU,EAAa,IAAI/E,EACjBgF,EAAW,IAAIhF,EAGnB1yB,KAAK+1B,UAAUrB,iBAAgB,SAAU+B,GACvC,GAAIA,EAAQt5B,SAAW45B,GAAsC,MAAxBN,EAAQG,aAAsB,CAEjE,IAAIxmB,EAAW+lB,EAAmBwB,oBAAoB,CACpDl4B,KAAMg3B,EAAQG,aACdj3B,OAAQ82B,EAAQI,iBAEK,MAAnBzmB,EAASjT,SAEXs5B,EAAQt5B,OAASiT,EAASjT,OACJ,MAAlBq6B,IACFf,EAAQt5B,OAASq1B,EAAK1pB,KAAK0uB,EAAgBf,EAAQt5B,SAEnC,MAAdk5B,IACFI,EAAQt5B,OAASq1B,EAAKmE,SAASN,EAAYI,EAAQt5B,SAErDs5B,EAAQG,aAAexmB,EAAS3Q,KAChCg3B,EAAQI,eAAiBzmB,EAASzQ,OACb,MAAjByQ,EAASzI,OACX8uB,EAAQ9uB,KAAOyI,EAASzI,MAG9B,CAEA,IAAIxK,EAASs5B,EAAQt5B,OACP,MAAVA,GAAmBs6B,EAAWzoB,IAAI7R,IACpCs6B,EAAWjY,IAAIriB,GAGjB,IAAIwK,EAAO8uB,EAAQ9uB,KACP,MAARA,GAAiB+vB,EAAS1oB,IAAIrH,IAChC+vB,EAASlY,IAAI7X,EAGjB,GAAG3H,MACHA,KAAK61B,SAAW4B,EAChBz3B,KAAK81B,OAAS4B,EAGdvB,EAAmBW,QAAQxxB,SAAQ,SAAUyxB,GAC3C,IAAIE,EAAUd,EAAmBe,iBAAiBH,GACnC,MAAXE,IACoB,MAAlBO,IACFT,EAAavE,EAAK1pB,KAAK0uB,EAAgBT,IAEvB,MAAdV,IACFU,EAAavE,EAAKmE,SAASN,EAAYU,IAEzC/2B,KAAKm3B,iBAAiBJ,EAAYE,GAEtC,GAAGj3B,KACL,EAaFs1B,EAAmBrtB,UAAUmvB,iBAC3B,SAA4CQ,EAAYC,EAAWC,EACvBC,GAK1C,GAAIF,GAAuC,iBAAnBA,EAAUp4B,MAAiD,iBAArBo4B,EAAUl4B,OAAqB,CAC3F,IAAIiI,EAAU,+OAId,GAAI5H,KAAK41B,sBAIP,MAHuB,oBAAZrT,SAA2BA,QAAQC,MAC5CD,QAAQC,KAAK5a,IAER,EAEP,MAAM,IAAIhB,MAAMgB,EAEpB,CAEA,MAAIgwB,GAAc,SAAUA,GAAc,WAAYA,GAC/CA,EAAWn4B,KAAO,GAAKm4B,EAAWj4B,QAAU,IAC3Ck4B,GAAcC,GAAYC,MAIzBH,GAAc,SAAUA,GAAc,WAAYA,GAC/CC,GAAa,SAAUA,GAAa,WAAYA,GAChDD,EAAWn4B,KAAO,GAAKm4B,EAAWj4B,QAAU,GAC5Ck4B,EAAUp4B,KAAO,GAAKo4B,EAAUl4B,QAAU,GAC1Cm4B,GAJP,CASClwB,EAAU,oBAAsB6gB,KAAKC,UAAU,CACjDvY,UAAWynB,EACXz6B,OAAQ26B,EACR1nB,SAAUynB,EACVlwB,KAAMowB,IAGR,GAAI/3B,KAAK41B,sBAIP,MAHuB,oBAAZrT,SAA2BA,QAAQC,MAC5CD,QAAQC,KAAK5a,IAER,EAEP,MAAM,IAAIhB,MAAMgB,EAEpB,CACF,EAMF0tB,EAAmBrtB,UAAU+vB,mBAC3B,WAcE,IAbA,IAOIn2B,EACA40B,EACAwB,EACAC,EAVAC,EAA0B,EAC1BC,EAAwB,EACxBC,EAAyB,EACzBC,EAAuB,EACvBC,EAAe,EACfC,EAAiB,EACjBxyB,EAAS,GAMTyyB,EAAWz4B,KAAK+1B,UAAU3wB,UACrBrI,EAAI,EAAGqyB,EAAMqJ,EAASz7B,OAAQD,EAAIqyB,EAAKryB,IAAK,CAInD,GAFA8E,EAAO,IADP40B,EAAUgC,EAAS17B,IAGPy3B,gBAAkB4D,EAE5B,IADAD,EAA0B,EACnB1B,EAAQjC,gBAAkB4D,GAC/Bv2B,GAAQ,IACRu2B,SAIF,GAAIr7B,EAAI,EAAG,CACT,IAAKy1B,EAAK4C,oCAAoCqB,EAASgC,EAAS17B,EAAI,IAClE,SAEF8E,GAAQ,GACV,CAGFA,GAAQwzB,EAAU5F,OAAOgH,EAAQhC,gBACJ0D,GAC7BA,EAA0B1B,EAAQhC,gBAEZ,MAAlBgC,EAAQt5B,SACV+6B,EAAYl4B,KAAK61B,SAAS9xB,QAAQ0yB,EAAQt5B,QAC1C0E,GAAQwzB,EAAU5F,OAAOyI,EAAYM,GACrCA,EAAiBN,EAGjBr2B,GAAQwzB,EAAU5F,OAAOgH,EAAQG,aAAe,EACnB0B,GAC7BA,EAAuB7B,EAAQG,aAAe,EAE9C/0B,GAAQwzB,EAAU5F,OAAOgH,EAAQI,eACJwB,GAC7BA,EAAyB5B,EAAQI,eAEb,MAAhBJ,EAAQ9uB,OACVswB,EAAUj4B,KAAK81B,OAAO/xB,QAAQ0yB,EAAQ9uB,MACtC9F,GAAQwzB,EAAU5F,OAAOwI,EAAUM,GACnCA,EAAeN,IAInBjyB,GAAUnE,CACZ,CAEA,OAAOmE,CACT,EAEFsvB,EAAmBrtB,UAAUywB,wBAC3B,SAAmDC,EAAUC,GAC3D,OAAOD,EAAS5yB,KAAI,SAAU5I,GAC5B,IAAK6C,KAAKg2B,iBACR,OAAO,KAEU,MAAf4C,IACFz7B,EAASq1B,EAAKmE,SAASiC,EAAaz7B,IAEtC,IAAIuU,EAAM8gB,EAAKU,YAAY/1B,GAC3B,OAAO2K,OAAOG,UAAUiJ,eAAe1L,KAAKxF,KAAKg2B,iBAAkBtkB,GAC/D1R,KAAKg2B,iBAAiBtkB,GACtB,IACN,GAAG1R,KACL,EAKFs1B,EAAmBrtB,UAAU5C,OAC3B,WACE,IAAIU,EAAM,CACRusB,QAAStyB,KAAKi2B,SACda,QAAS92B,KAAK61B,SAASzwB,UACvByzB,MAAO74B,KAAK81B,OAAO1wB,UACnBqzB,SAAUz4B,KAAKg4B,sBAYjB,OAVkB,MAAdh4B,KAAKw1B,QACPzvB,EAAIwwB,KAAOv2B,KAAKw1B,OAEM,MAApBx1B,KAAK01B,cACP3vB,EAAIswB,WAAar2B,KAAK01B,aAEpB11B,KAAKg2B,mBACPjwB,EAAI+yB,eAAiB94B,KAAK04B,wBAAwB3yB,EAAI+wB,QAAS/wB,EAAIswB,aAG9DtwB,CACT,EAKFuvB,EAAmBrtB,UAAUugB,SAC3B,WACE,OAAOC,KAAKC,UAAU1oB,KAAKqF,SAC7B,EAEFiuB,EAAQ,EAAqBgC,C,qDCja7BhC,EAAQmC,OATR,SAAgBF,EAAOwC,EAAOgB,GAC5B,GAAIhB,KAASxC,EACX,OAAOA,EAAMwC,GACR,GAAyB,IAArBiB,UAAUh8B,OACnB,OAAO+7B,EAEP,MAAM,IAAInyB,MAAM,IAAMmxB,EAAQ,4BAElC,EAGA,IAAIkB,EAAY,iEACZC,EAAgB,gBAEpB,SAASC,EAASC,GAChB,IAAIhwB,EAAQgwB,EAAKhwB,MAAM6vB,GACvB,OAAK7vB,EAGE,CACLiwB,OAAQjwB,EAAM,GACdkwB,KAAMlwB,EAAM,GACZhK,KAAMgK,EAAM,GACZmwB,KAAMnwB,EAAM,GACZib,KAAMjb,EAAM,IAPL,IASX,CAGA,SAASowB,EAAYC,GACnB,IAAIC,EAAM,GAiBV,OAhBID,EAAWJ,SACbK,GAAOD,EAAWJ,OAAS,KAE7BK,GAAO,KACHD,EAAWH,OACbI,GAAOD,EAAWH,KAAO,KAEvBG,EAAWr6B,OACbs6B,GAAOD,EAAWr6B,MAEhBq6B,EAAWF,OACbG,GAAO,IAAMD,EAAWF,MAEtBE,EAAWpV,OACbqV,GAAOD,EAAWpV,MAEbqV,CACT,CArBApG,EAAQ6F,SAAWA,EAsBnB7F,EAAQkG,YAAcA,EAkDtB,IAvCoBG,EACdC,EAsCFC,GAvCgBF,EAuCO,SAAmBG,GAC5C,IAAIzV,EAAOyV,EACPJ,EAAMP,EAASW,GACnB,GAAIJ,EAAK,CACP,IAAKA,EAAIrV,KACP,OAAOyV,EAETzV,EAAOqV,EAAIrV,IACb,CAOA,IANA,IAAI0V,EAAazG,EAAQyG,WAAW1V,GAGhC2V,EAAQ,GACRr8B,EAAQ,EACRZ,EAAI,IACK,CAGX,GAFAY,EAAQZ,GAEG,KADXA,EAAIsnB,EAAKtgB,QAAQ,IAAKpG,IACR,CACZq8B,EAAMjzB,KAAKsd,EAAK1b,MAAMhL,IACtB,KACF,CAEE,IADAq8B,EAAMjzB,KAAKsd,EAAK1b,MAAMhL,EAAOZ,IACtBA,EAAIsnB,EAAKrnB,QAAsB,MAAZqnB,EAAKtnB,IAC7BA,GAGN,CAEK,IAAIk9B,EAAMC,EAAK,EAApB,IAAuBn9B,EAAIi9B,EAAMh9B,OAAS,EAAGD,GAAK,EAAGA,IAEtC,OADbk9B,EAAOD,EAAMj9B,IAEXi9B,EAAMjc,OAAOhhB,EAAG,GACE,OAATk9B,EACTC,IACSA,EAAK,IACD,KAATD,GAIFD,EAAMjc,OAAOhhB,EAAI,EAAGm9B,GACpBA,EAAK,IAELF,EAAMjc,OAAOhhB,EAAG,GAChBm9B,MAUN,MAJa,MAFb7V,EAAO2V,EAAMlxB,KAAK,QAGhBub,EAAO0V,EAAa,IAAM,KAGxBL,GACFA,EAAIrV,KAAOA,EACJmV,EAAYE,IAEdrV,CACT,EAjGMuV,EAAQ,GAEL,SAAS7e,GACd,IAAK,IAAIhe,EAAI,EAAGA,EAAI68B,EAAM58B,OAAQD,IAChC,GAAI68B,EAAM78B,GAAGge,QAAUA,EAAO,CAC5B,IAAIof,EAAOP,EAAM,GAGjB,OAFAA,EAAM,GAAKA,EAAM78B,GACjB68B,EAAM78B,GAAKo9B,EACJP,EAAM,GAAG5zB,MAClB,CAGF,IAAIA,EAAS2zB,EAAE5e,GAWf,OATA6e,EAAM3yB,QAAQ,CACZ8T,QACA/U,WAGE4zB,EAAM58B,OA7BU,IA8BlB48B,EAAM5yB,MAGDhB,CACT,GA4FF,SAAS8C,EAAKsxB,EAAON,GACL,KAAVM,IACFA,EAAQ,KAEI,KAAVN,IACFA,EAAQ,KAEV,IAAIO,EAAWlB,EAASW,GACpBQ,EAAWnB,EAASiB,GAMxB,GALIE,IACFF,EAAQE,EAASjW,MAAQ,KAIvBgW,IAAaA,EAAShB,OAIxB,OAHIiB,IACFD,EAAShB,OAASiB,EAASjB,QAEtBG,EAAYa,GAGrB,GAAIA,GAAYP,EAAM1wB,MAAM8vB,GAC1B,OAAOY,EAIT,GAAIQ,IAAaA,EAASl7B,OAASk7B,EAASjW,KAE1C,OADAiW,EAASl7B,KAAO06B,EACTN,EAAYc,GAGrB,IAAIC,EAA6B,MAApBT,EAAMre,OAAO,GACtBqe,EACAD,EAAUO,EAAM7yB,QAAQ,OAAQ,IAAM,IAAMuyB,GAEhD,OAAIQ,GACFA,EAASjW,KAAOkW,EACTf,EAAYc,IAEdC,CACT,CA1DAjH,EAAQuG,UAAYA,EA2DpBvG,EAAQxqB,KAAOA,EAEfwqB,EAAQyG,WAAa,SAAUD,GAC7B,MAA2B,MAApBA,EAAMre,OAAO,IAAcwd,EAAUzrB,KAAKssB,EACnD,EAwCAxG,EAAQqD,SAhCR,SAAkByD,EAAON,GACT,KAAVM,IACFA,EAAQ,KAGVA,EAAQA,EAAM7yB,QAAQ,MAAO,IAO7B,IADA,IAAIizB,EAAQ,EAC0B,IAA/BV,EAAM/1B,QAAQq2B,EAAQ,MAAY,CACvC,IAAI14B,EAAQ04B,EAAMK,YAAY,KAC9B,GAAI/4B,EAAQ,EACV,OAAOo4B,EAOT,IADAM,EAAQA,EAAMzxB,MAAM,EAAGjH,IACb0H,MAAM,qBACd,OAAO0wB,IAGPU,CACJ,CAGA,OAAO39B,MAAM29B,EAAQ,GAAG1xB,KAAK,OAASgxB,EAAM3wB,OAAOixB,EAAMp9B,OAAS,EACpE,EAGA,IAAI09B,IAEO,cADC5yB,OAAOC,OAAO,OAI1B,SAAS4yB,EAAUC,GACjB,OAAOA,CACT,CA6BA,SAASC,EAAcD,GACrB,IAAKA,EACH,OAAO,EAGT,IAAI59B,EAAS49B,EAAE59B,OAEf,GAAIA,EAAS,EACX,OAAO,EAGT,GAAiC,KAA7B49B,EAAEv9B,WAAWL,EAAS,IACO,KAA7B49B,EAAEv9B,WAAWL,EAAS,IACO,MAA7B49B,EAAEv9B,WAAWL,EAAS,IACO,MAA7B49B,EAAEv9B,WAAWL,EAAS,IACO,MAA7B49B,EAAEv9B,WAAWL,EAAS,IACO,MAA7B49B,EAAEv9B,WAAWL,EAAS,IACO,MAA7B49B,EAAEv9B,WAAWL,EAAS,IACO,KAA7B49B,EAAEv9B,WAAWL,EAAS,IACO,KAA7B49B,EAAEv9B,WAAWL,EAAS,GACxB,OAAO,EAGT,IAAK,IAAID,EAAIC,EAAS,GAAID,GAAK,EAAGA,IAChC,GAAwB,KAApB69B,EAAEv9B,WAAWN,GACf,OAAO,EAIX,OAAO,CACT,CAmIA,SAAS+9B,EAAOC,EAAOC,GACrB,OAAID,IAAUC,EACL,EAGK,OAAVD,EACK,EAGK,OAAVC,GACM,EAGND,EAAQC,EACH,GAGD,CACV,CA9LA1H,EAAQJ,YAAcwH,EAAoBC,EAP1C,SAAqB3H,GACnB,OAAI6H,EAAc7H,GACT,IAAMA,EAGRA,CACT,EAUAM,EAAQ2H,cAAgBP,EAAoBC,EAP5C,SAAuB3H,GACrB,OAAI6H,EAAc7H,GACTA,EAAKrqB,MAAM,GAGbqqB,CACT,EAuEAM,EAAQ4H,2BA5BR,SAAoCpG,EAAUC,EAAUoG,GACtD,IAAIC,EAAMN,EAAOhG,EAAS33B,OAAQ43B,EAAS53B,QAC3C,OAAY,IAARi+B,GAKQ,KADZA,EAAMtG,EAAS8B,aAAe7B,EAAS6B,eAM3B,KADZwE,EAAMtG,EAAS+B,eAAiB9B,EAAS8B,iBACxBsE,GAKL,KADZC,EAAMtG,EAASL,gBAAkBM,EAASN,kBAM9B,KADZ2G,EAAMtG,EAASN,cAAgBO,EAASP,eAlB/B4G,EAuBFN,EAAOhG,EAASntB,KAAMotB,EAASptB,KACxC,EA4BA2rB,EAAQ+H,mCAzBR,SAA4CvG,EAAUC,EAAUoG,GAC9D,IAAIC,EAGJ,OAAY,KADZA,EAAMtG,EAAS8B,aAAe7B,EAAS6B,eAM3B,KADZwE,EAAMtG,EAAS+B,eAAiB9B,EAAS8B,iBACxBsE,GAKL,KADZC,EAAMtG,EAASL,gBAAkBM,EAASN,kBAM9B,KADZ2G,EAAMtG,EAASN,cAAgBO,EAASP,eAb/B4G,EAkBFN,EAAOhG,EAASntB,KAAMotB,EAASptB,KACxC,EAwCA2rB,EAAQgI,oCA5BR,SAA6CxG,EAAUC,EAAUwG,GAC/D,IAAIH,EAAMtG,EAASN,cAAgBO,EAASP,cAC5C,OAAY,IAAR4G,GAKQ,KADZA,EAAMtG,EAASL,gBAAkBM,EAASN,kBACzB8G,GAKL,KADZH,EAAMN,EAAOhG,EAAS33B,OAAQ43B,EAAS53B,UAM3B,KADZi+B,EAAMtG,EAAS8B,aAAe7B,EAAS6B,eAM3B,KADZwE,EAAMtG,EAAS+B,eAAiB9B,EAAS8B,gBAlBhCuE,EAuBFN,EAAOhG,EAASntB,KAAMotB,EAASptB,KACxC,EA0BA2rB,EAAQkI,0CAvBR,SAAmD1G,EAAUC,EAAUwG,GACrE,IAAIH,EAAMtG,EAASL,gBAAkBM,EAASN,gBAC9C,OAAY,IAAR2G,GAAaG,GAKL,KADZH,EAAMN,EAAOhG,EAAS33B,OAAQ43B,EAAS53B,UAM3B,KADZi+B,EAAMtG,EAAS8B,aAAe7B,EAAS6B,eAM3B,KADZwE,EAAMtG,EAAS+B,eAAiB9B,EAAS8B,gBAbhCuE,EAkBFN,EAAOhG,EAASntB,KAAMotB,EAASptB,KACxC,EAuDA2rB,EAAQ8B,oCA5BR,SAA6CN,EAAUC,GACrD,IAAIqG,EAAMtG,EAASN,cAAgBO,EAASP,cAC5C,OAAY,IAAR4G,GAKQ,KADZA,EAAMtG,EAASL,gBAAkBM,EAASN,kBAM9B,KADZ2G,EAAMN,EAAOhG,EAAS33B,OAAQ43B,EAAS53B,UAM3B,KADZi+B,EAAMtG,EAAS8B,aAAe7B,EAAS6B,eAM3B,KADZwE,EAAMtG,EAAS+B,eAAiB9B,EAAS8B,gBAlBhCuE,EAuBFN,EAAOhG,EAASntB,KAAMotB,EAASptB,KACxC,EAWA2rB,EAAQmI,oBAHR,SAA6BzuB,GAC3B,OAAOyb,KAAKhe,MAAMuC,EAAIzF,QAAQ,iBAAkB,IAClD,EAsDA+rB,EAAQoI,iBA/CR,SAA0BrF,EAAYsF,EAAWC,GA8B/C,GA7BAD,EAAYA,GAAa,GAErBtF,IAEwC,MAAtCA,EAAWA,EAAWr5B,OAAS,IAA+B,MAAjB2+B,EAAU,KACzDtF,GAAc,KAOhBsF,EAAYtF,EAAasF,GAiBvBC,EAAc,CAChB,IAAIC,EAAS1C,EAASyC,GACtB,IAAKC,EACH,MAAM,IAAIj1B,MAAM,oCAElB,GAAIi1B,EAAOxX,KAAM,CAEf,IAAI3iB,EAAQm6B,EAAOxX,KAAKoW,YAAY,KAChC/4B,GAAS,IACXm6B,EAAOxX,KAAOwX,EAAOxX,KAAK/hB,UAAU,EAAGZ,EAAQ,GAEnD,CACAi6B,EAAY7yB,EAAK0wB,EAAYqC,GAASF,EACxC,CAEA,OAAO9B,EAAU8B,EACnB,C","sources":["webpack://soc-connect/./node_modules/css-tree/lib/tokenizer/types.js","webpack://soc-connect/./node_modules/css-tree/lib/tokenizer/char-code-definitions.js","webpack://soc-connect/./node_modules/css-tree/lib/tokenizer/utils.js","webpack://soc-connect/./node_modules/css-tree/lib/tokenizer/names.js","webpack://soc-connect/./node_modules/css-tree/lib/tokenizer/adopt-buffer.js","webpack://soc-connect/./node_modules/css-tree/lib/tokenizer/OffsetToLocation.js","webpack://soc-connect/./node_modules/css-tree/lib/tokenizer/TokenStream.js","webpack://soc-connect/./node_modules/css-tree/lib/tokenizer/index.js","webpack://soc-connect/./node_modules/css-tree/lib/utils/List.js","webpack://soc-connect/./node_modules/css-tree/lib/utils/create-custom-error.js","webpack://soc-connect/./node_modules/css-tree/lib/parser/SyntaxError.js","webpack://soc-connect/./node_modules/css-tree/lib/parser/sequence.js","webpack://soc-connect/./node_modules/css-tree/lib/parser/create.js","webpack://soc-connect/./node_modules/css-tree/lib/generator/sourceMap.js","webpack://soc-connect/./node_modules/css-tree/lib/generator/token-before.js","webpack://soc-connect/./node_modules/css-tree/lib/generator/create.js","webpack://soc-connect/./node_modules/css-tree/lib/walker/create.js","webpack://soc-connect/./node_modules/css-tree/lib/definition-syntax/generate.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/error.js","webpack://soc-connect/./node_modules/css-tree/lib/utils/names.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/generic-const.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/generic-an-plus-b.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/generic-urange.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/generic.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/units.js","webpack://soc-connect/./node_modules/css-tree/lib/definition-syntax/SyntaxError.js","webpack://soc-connect/./node_modules/css-tree/lib/definition-syntax/scanner.js","webpack://soc-connect/./node_modules/css-tree/lib/definition-syntax/parse.js","webpack://soc-connect/./node_modules/css-tree/lib/definition-syntax/walk.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/prepare-tokens.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/match-graph.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/match.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/trace.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/search.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/structure.js","webpack://soc-connect/./node_modules/css-tree/lib/lexer/Lexer.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/config/mix.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/create.js","webpack://soc-connect/./node_modules/css-tree/lib/convertor/create.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/AnPlusB.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Atrule.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/AtrulePrelude.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/AttributeSelector.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Block.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Brackets.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/CDC.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/CDO.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/ClassSelector.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Combinator.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Comment.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Condition.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Declaration.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/DeclarationList.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Dimension.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Feature.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/FeatureFunction.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/FeatureRange.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Function.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/GeneralEnclosed.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Hash.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Identifier.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/IdSelector.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Layer.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/LayerList.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/MediaQuery.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/MediaQueryList.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/NestingSelector.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Nth.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Number.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Operator.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Parentheses.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Percentage.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/PseudoClassSelector.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/PseudoElementSelector.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Ratio.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Raw.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Rule.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Scope.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Selector.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/SelectorList.js","webpack://soc-connect/./node_modules/css-tree/lib/utils/string.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/String.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/StyleSheet.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/SupportsDeclaration.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/TypeSelector.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/UnicodeRange.js","webpack://soc-connect/./node_modules/css-tree/lib/utils/url.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Url.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/Value.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/node/WhiteSpace.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/config/lexer.js","webpack://soc-connect/./node_modules/css-tree/dist/data.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/scope/default.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/scope/atrulePrelude.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/scope/selector.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/scope/value.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/function/expression.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/function/var.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/container.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/font-face.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/import.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/index.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/layer.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/media.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/nest.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/page.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/scope.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/starting-style.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/atrule/supports.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/pseudo/index.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/pseudo/lang.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/index.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/config/parser.js","webpack://soc-connect/./node_modules/css-tree/lib/syntax/config/walker.js","webpack://soc-connect/./node_modules/css-tree/dist/version.js","webpack://soc-connect/./node_modules/css-tree/lib/utils/clone.js","webpack://soc-connect/./node_modules/css-tree/lib/utils/ident.js","webpack://soc-connect/./node_modules/css-tree/lib/index.js","webpack://soc-connect/./node_modules/source-map-js/lib/array-set.js","webpack://soc-connect/./node_modules/source-map-js/lib/base64-vlq.js","webpack://soc-connect/./node_modules/source-map-js/lib/base64.js","webpack://soc-connect/./node_modules/source-map-js/lib/mapping-list.js","webpack://soc-connect/./node_modules/source-map-js/lib/source-map-generator.js","webpack://soc-connect/./node_modules/source-map-js/lib/util.js"],"sourcesContent":["// CSS Syntax Module Level 3\n// https://www.w3.org/TR/css-syntax-3/\nexport const EOF = 0;                 // <EOF-token>\nexport const Ident = 1;               // <ident-token>\nexport const Function = 2;            // <function-token>\nexport const AtKeyword = 3;           // <at-keyword-token>\nexport const Hash = 4;                // <hash-token>\nexport const String = 5;              // <string-token>\nexport const BadString = 6;           // <bad-string-token>\nexport const Url = 7;                 // <url-token>\nexport const BadUrl = 8;              // <bad-url-token>\nexport const Delim = 9;               // <delim-token>\nexport const Number = 10;             // <number-token>\nexport const Percentage = 11;         // <percentage-token>\nexport const Dimension = 12;          // <dimension-token>\nexport const WhiteSpace = 13;         // <whitespace-token>\nexport const CDO = 14;                // <CDO-token>\nexport const CDC = 15;                // <CDC-token>\nexport const Colon = 16;              // <colon-token>     :\nexport const Semicolon = 17;          // <semicolon-token> ;\nexport const Comma = 18;              // <comma-token>     ,\nexport const LeftSquareBracket = 19;  // <[-token>\nexport const RightSquareBracket = 20; // <]-token>\nexport const LeftParenthesis = 21;    // <(-token>\nexport const RightParenthesis = 22;   // <)-token>\nexport const LeftCurlyBracket = 23;   // <{-token>\nexport const RightCurlyBracket = 24;  // <}-token>\nexport const Comment = 25;\n","const EOF = 0;\n\n// https://drafts.csswg.org/css-syntax-3/\n// § 4.2. Definitions\n\n// digit\n// A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\nexport function isDigit(code) {\n    return code >= 0x0030 && code <= 0x0039;\n}\n\n// hex digit\n// A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\n// or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\nexport function isHexDigit(code) {\n    return (\n        isDigit(code) || // 0 .. 9\n        (code >= 0x0041 && code <= 0x0046) || // A .. F\n        (code >= 0x0061 && code <= 0x0066)    // a .. f\n    );\n}\n\n// uppercase letter\n// A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\nexport function isUppercaseLetter(code) {\n    return code >= 0x0041 && code <= 0x005A;\n}\n\n// lowercase letter\n// A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\nexport function isLowercaseLetter(code) {\n    return code >= 0x0061 && code <= 0x007A;\n}\n\n// letter\n// An uppercase letter or a lowercase letter.\nexport function isLetter(code) {\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\n}\n\n// non-ASCII code point\n// A code point with a value equal to or greater than U+0080 <control>.\n//\n// 2024-09-02: The latest spec narrows the range for non-ASCII characters (see https://github.com/csstree/csstree/issues/188).\n// However, all modern browsers support a wider range, and strictly following the latest spec could result\n// in some CSS being parsed incorrectly, even though it works in the browser. Therefore, this function adheres\n// to the previous, broader definition of non-ASCII characters.\nexport function isNonAscii(code) {\n    return code >= 0x0080;\n}\n\n// name-start code point\n// A letter, a non-ASCII code point, or U+005F LOW LINE (_).\nexport function isNameStart(code) {\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\n}\n\n// name code point\n// A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\nexport function isName(code) {\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\n}\n\n// non-printable code point\n// A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\n// or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\nexport function isNonPrintable(code) {\n    return (\n        (code >= 0x0000 && code <= 0x0008) ||\n        (code === 0x000B) ||\n        (code >= 0x000E && code <= 0x001F) ||\n        (code === 0x007F)\n    );\n}\n\n// newline\n// U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\n// as they are converted to U+000A LINE FEED during preprocessing.\n// TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\nexport function isNewline(code) {\n    return code === 0x000A || code === 0x000D || code === 0x000C;\n}\n\n// whitespace\n// A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\nexport function isWhiteSpace(code) {\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\n}\n\n// § 4.3.8. Check if two code points are a valid escape\nexport function isValidEscape(first, second) {\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\n    if (first !== 0x005C) {\n        return false;\n    }\n\n    // Otherwise, if the second code point is a newline or EOF, return false.\n    if (isNewline(second) || second === EOF) {\n        return false;\n    }\n\n    // Otherwise, return true.\n    return true;\n}\n\n// § 4.3.9. Check if three code points would start an identifier\nexport function isIdentifierStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002D HYPHEN-MINUS\n    if (first === 0x002D) {\n        // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\n        // or the second and third code points are a valid escape, return true. Otherwise, return false.\n        return (\n            isNameStart(second) ||\n            second === 0x002D ||\n            isValidEscape(second, third)\n        );\n    }\n\n    // name-start code point\n    if (isNameStart(first)) {\n        // Return true.\n        return true;\n    }\n\n    // U+005C REVERSE SOLIDUS (\\)\n    if (first === 0x005C) {\n        // If the first and second code points are a valid escape, return true. Otherwise, return false.\n        return isValidEscape(first, second);\n    }\n\n    // anything else\n    // Return false.\n    return false;\n}\n\n// § 4.3.10. Check if three code points would start a number\nexport function isNumberStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002B PLUS SIGN (+)\n    // U+002D HYPHEN-MINUS (-)\n    if (first === 0x002B || first === 0x002D) {\n        // If the second code point is a digit, return true.\n        if (isDigit(second)) {\n            return 2;\n        }\n\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\n        // and the third code point is a digit, return true.\n        // Otherwise, return false.\n        return second === 0x002E && isDigit(third) ? 3 : 0;\n    }\n\n    // U+002E FULL STOP (.)\n    if (first === 0x002E) {\n        // If the second code point is a digit, return true. Otherwise, return false.\n        return isDigit(second) ? 2 : 0;\n    }\n\n    // digit\n    if (isDigit(first)) {\n        // Return true.\n        return 1;\n    }\n\n    // anything else\n    // Return false.\n    return 0;\n}\n\n//\n// Misc\n//\n\n// detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\nexport function isBOM(code) {\n    // UTF-16BE\n    if (code === 0xFEFF) {\n        return 1;\n    }\n\n    // UTF-16LE\n    if (code === 0xFFFE) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// Fast code category\n// Only ASCII code points has a special meaning, that's why we define a maps for 0..127 codes only\nconst CATEGORY = new Array(0x80);\nexport const EofCategory = 0x80;\nexport const WhiteSpaceCategory = 0x82;\nexport const DigitCategory = 0x83;\nexport const NameStartCategory = 0x84;\nexport const NonPrintableCategory = 0x85;\n\nfor (let i = 0; i < CATEGORY.length; i++) {\n    CATEGORY[i] =\n        isWhiteSpace(i) && WhiteSpaceCategory ||\n        isDigit(i) && DigitCategory ||\n        isNameStart(i) && NameStartCategory ||\n        isNonPrintable(i) && NonPrintableCategory ||\n        i || EofCategory;\n}\n\nexport function charCodeCategory(code) {\n    return code < 0x80 ? CATEGORY[code] : NameStartCategory;\n}\n","import {\n    isDigit,\n    isHexDigit,\n    isUppercaseLetter,\n    isName,\n    isWhiteSpace,\n    isValidEscape\n} from './char-code-definitions.js';\n\nfunction getCharCode(source, offset) {\n    return offset < source.length ? source.charCodeAt(offset) : 0;\n}\n\nexport function getNewlineLength(source, offset, code) {\n    if (code === 13 /* \\r */ && getCharCode(source, offset + 1) === 10 /* \\n */) {\n        return 2;\n    }\n\n    return 1;\n}\n\nexport function cmpChar(testStr, offset, referenceCode) {\n    let code = testStr.charCodeAt(offset);\n\n    // code.toLowerCase() for A..Z\n    if (isUppercaseLetter(code)) {\n        code = code | 32;\n    }\n\n    return code === referenceCode;\n}\n\nexport function cmpStr(testStr, start, end, referenceStr) {\n    if (end - start !== referenceStr.length) {\n        return false;\n    }\n\n    if (start < 0 || end > testStr.length) {\n        return false;\n    }\n\n    for (let i = start; i < end; i++) {\n        const referenceCode = referenceStr.charCodeAt(i - start);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for A..Z\n        if (isUppercaseLetter(testCode)) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function findWhiteSpaceStart(source, offset) {\n    for (; offset >= 0; offset--) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset + 1;\n}\n\nexport function findWhiteSpaceEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\nexport function findDecimalNumberEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isDigit(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.7. Consume an escaped code point\nexport function consumeEscaped(source, offset) {\n    // It assumes that the U+005C REVERSE SOLIDUS (\\) has already been consumed and\n    // that the next input code point has already been verified to be part of a valid escape.\n    offset += 2;\n\n    // hex digit\n    if (isHexDigit(getCharCode(source, offset - 1))) {\n        // Consume as many hex digits as possible, but no more than 5.\n        // Note that this means 1-6 hex digits have been consumed in total.\n        for (const maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {\n            if (!isHexDigit(getCharCode(source, offset))) {\n                break;\n            }\n        }\n\n        // If the next input code point is whitespace, consume it as well.\n        const code = getCharCode(source, offset);\n        if (isWhiteSpace(code)) {\n            offset += getNewlineLength(source, offset, code);\n        }\n    }\n\n    return offset;\n}\n\n// §4.3.11. Consume a name\n// Note: This algorithm does not do the verification of the first few code points that are necessary\n// to ensure the returned code points would constitute an <ident-token>. If that is the intended use,\n// ensure that the stream starts with an identifier before calling this algorithm.\nexport function consumeName(source, offset) {\n    // Let result initially be an empty string.\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // name code point\n        if (isName(code)) {\n            // Append the code point to result.\n            continue;\n        }\n\n        // the stream starts with a valid escape\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point. Append the returned code point to result.\n            offset = consumeEscaped(source, offset) - 1;\n            continue;\n        }\n\n        // anything else\n        // Reconsume the current input code point. Return result.\n        break;\n    }\n\n    return offset;\n}\n\n// §4.3.12. Consume a number\nexport function consumeNumber(source, offset) {\n    let code = source.charCodeAt(offset);\n\n    // 2. If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\n    // consume it and append it to repr.\n    if (code === 0x002B || code === 0x002D) {\n        code = source.charCodeAt(offset += 1);\n    }\n\n    // 3. While the next input code point is a digit, consume it and append it to repr.\n    if (isDigit(code)) {\n        offset = findDecimalNumberEnd(source, offset + 1);\n        code = source.charCodeAt(offset);\n    }\n\n    // 4. If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\n    if (code === 0x002E && isDigit(source.charCodeAt(offset + 1))) {\n        // 4.1 Consume them.\n        // 4.2 Append them to repr.\n        offset += 2;\n\n        // 4.3 Set type to \"number\".\n        // TODO\n\n        // 4.4 While the next input code point is a digit, consume it and append it to repr.\n\n        offset = findDecimalNumberEnd(source, offset);\n    }\n\n    // 5. If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\n    if (cmpChar(source, offset, 101 /* e */)) {\n        let sign = 0;\n        code = source.charCodeAt(offset + 1);\n\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\n        if (code === 0x002D || code === 0x002B) {\n            sign = 1;\n            code = source.charCodeAt(offset + 2);\n        }\n\n        // ... followed by a digit\n        if (isDigit(code)) {\n            // 5.1 Consume them.\n            // 5.2 Append them to repr.\n\n            // 5.3 Set type to \"number\".\n            // TODO\n\n            // 5.4 While the next input code point is a digit, consume it and append it to repr.\n            offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.14. Consume the remnants of a bad url\n// ... its sole use is to consume enough of the input stream to reach a recovery point\n// where normal tokenizing can resume.\nexport function consumeBadUrlRemnants(source, offset) {\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // U+0029 RIGHT PARENTHESIS ())\n        // EOF\n        if (code === 0x0029) {\n            // Return.\n            offset++;\n            break;\n        }\n\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point.\n            // Note: This allows an escaped right parenthesis (\"\\)\") to be encountered\n            // without ending the <bad-url-token>. This is otherwise identical to\n            // the \"anything else\" clause.\n            offset = consumeEscaped(source, offset);\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.7. Consume an escaped code point\n// Note: This algorithm assumes that escaped is valid without leading U+005C REVERSE SOLIDUS (\\)\nexport function decodeEscaped(escaped) {\n    // Single char escaped that's not a hex digit\n    if (escaped.length === 1 && !isHexDigit(escaped.charCodeAt(0))) {\n        return escaped[0];\n    }\n\n    // Interpret the hex digits as a hexadecimal number.\n    let code = parseInt(escaped, 16);\n\n    if (\n        (code === 0) ||                       // If this number is zero,\n        (code >= 0xD800 && code <= 0xDFFF) || // or is for a surrogate,\n        (code > 0x10FFFF)                     // or is greater than the maximum allowed code point\n    ) {\n        // ... return U+FFFD REPLACEMENT CHARACTER\n        code = 0xFFFD;\n    }\n\n    // Otherwise, return the code point with that value.\n    return String.fromCodePoint(code);\n}\n","export default [\n    'EOF-token',\n    'ident-token',\n    'function-token',\n    'at-keyword-token',\n    'hash-token',\n    'string-token',\n    'bad-string-token',\n    'url-token',\n    'bad-url-token',\n    'delim-token',\n    'number-token',\n    'percentage-token',\n    'dimension-token',\n    'whitespace-token',\n    'CDO-token',\n    'CDC-token',\n    'colon-token',\n    'semicolon-token',\n    'comma-token',\n    '[-token',\n    ']-token',\n    '(-token',\n    ')-token',\n    '{-token',\n    '}-token',\n    'comment-token'\n];\n","const MIN_SIZE = 16 * 1024;\n\nexport function adoptBuffer(buffer = null, size) {\n    if (buffer === null || buffer.length < size) {\n        return new Uint32Array(Math.max(size + 1024, MIN_SIZE));\n    }\n\n    return buffer;\n};\n","import { adoptBuffer } from './adopt-buffer.js';\nimport { isBOM } from './char-code-definitions.js';\n\nconst N = 10;\nconst F = 12;\nconst R = 13;\n\nfunction computeLinesAndColumns(host) {\n    const source = host.source;\n    const sourceLength = source.length;\n    const startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;\n    const lines = adoptBuffer(host.lines, sourceLength);\n    const columns = adoptBuffer(host.columns, sourceLength);\n    let line = host.startLine;\n    let column = host.startColumn;\n\n    for (let i = startOffset; i < sourceLength; i++) {\n        const code = source.charCodeAt(i);\n\n        lines[i] = line;\n        columns[i] = column++;\n\n        if (code === N || code === R || code === F) {\n            if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\n                i++;\n                lines[i] = line;\n                columns[i] = column;\n            }\n\n            line++;\n            column = 1;\n        }\n    }\n\n    lines[sourceLength] = line;\n    columns[sourceLength] = column;\n\n    host.lines = lines;\n    host.columns = columns;\n    host.computed = true;\n}\n\nexport class OffsetToLocation {\n    constructor(source, startOffset, startLine, startColumn) {\n        this.setSource(source, startOffset, startLine, startColumn);\n        this.lines = null;\n        this.columns = null;\n    }\n    setSource(source = '', startOffset = 0, startLine = 1, startColumn = 1) {\n        this.source = source;\n        this.startOffset = startOffset;\n        this.startLine = startLine;\n        this.startColumn = startColumn;\n        this.computed = false;\n    }\n    getLocation(offset, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            offset: this.startOffset + offset,\n            line: this.lines[offset],\n            column: this.columns[offset]\n        };\n    }\n    getLocationRange(start, end, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            start: {\n                offset: this.startOffset + start,\n                line: this.lines[start],\n                column: this.columns[start]\n            },\n            end: {\n                offset: this.startOffset + end,\n                line: this.lines[end],\n                column: this.columns[end]\n            }\n        };\n    }\n};\n","import { adoptBuffer } from './adopt-buffer.js';\nimport { cmpStr } from './utils.js';\nimport tokenNames from './names.js';\nimport {\n    WhiteSpace,\n    Comment,\n    Delim,\n    EOF,\n    Function as FunctionToken,\n    LeftParenthesis,\n    RightParenthesis,\n    LeftSquareBracket,\n    RightSquareBracket,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from './types.js';\n\nconst OFFSET_MASK = 0x00FFFFFF;\nconst TYPE_SHIFT = 24;\nconst balancePair = new Uint8Array(32); // 32b of memory ought to be enough for anyone (any number of tokens)\nbalancePair[FunctionToken] = RightParenthesis;\nbalancePair[LeftParenthesis] = RightParenthesis;\nbalancePair[LeftSquareBracket] = RightSquareBracket;\nbalancePair[LeftCurlyBracket] = RightCurlyBracket;\n\nfunction isBlockOpenerToken(tokenType) {\n    return balancePair[tokenType] !== 0;\n}\n\nexport class TokenStream {\n    constructor(source, tokenize) {\n        this.setSource(source, tokenize);\n    }\n    reset() {\n        this.eof = false;\n        this.tokenIndex = -1;\n        this.tokenType = 0;\n        this.tokenStart = this.firstCharOffset;\n        this.tokenEnd = this.firstCharOffset;\n    }\n    setSource(source = '', tokenize = () => {}) {\n        source = String(source || '');\n\n        const sourceLength = source.length;\n        const offsetAndType = adoptBuffer(this.offsetAndType, source.length + 1); // +1 because of eof-token\n        const balance = adoptBuffer(this.balance, source.length + 1);\n        let tokenCount = 0;\n        let firstCharOffset = -1;\n        let balanceCloseType = 0;\n        let balanceStart = source.length;\n\n        // capture buffers\n        this.offsetAndType = null;\n        this.balance = null;\n        balance.fill(0);\n\n        tokenize(source, (type, start, end) => {\n            const index = tokenCount++;\n\n            // type & offset\n            offsetAndType[index] = (type << TYPE_SHIFT) | end;\n\n            if (firstCharOffset === -1) {\n                firstCharOffset = start;\n            }\n\n            // balance\n            balance[index] = balanceStart;\n\n            if (type === balanceCloseType) {\n                const prevBalanceStart = balance[balanceStart];\n\n                // set reference to balance end for a block opener\n                balance[balanceStart] = index;\n\n                // pop state\n                balanceStart = prevBalanceStart;\n                balanceCloseType = balancePair[offsetAndType[prevBalanceStart] >> TYPE_SHIFT];\n            } else if (isBlockOpenerToken(type)) { // check for FunctionToken, <(-token>, <[-token> and <{-token>\n                // push state\n                balanceStart = index;\n                balanceCloseType = balancePair[type];\n            }\n        });\n\n        // finalize buffers\n        offsetAndType[tokenCount] = (EOF << TYPE_SHIFT) | sourceLength; // <EOF-token>\n        balance[tokenCount] = tokenCount; // prevents false positive balance match with any token\n\n        // reverse references from balance start to end\n        // tokens\n        //   token:   a ( [ b c ] d e ) {\n        //   index:   0 1 2 3 4 5 6 7 8 9\n        // before\n        //   balance: 0 8 5 2 2 2 1 1 1 0\n        //            - > > < < < < < < -\n        // after\n        //   balance: 9 8 5 5 5 2 8 8 1 9\n        //            > > > > > < > > < >\n        for (let i = 0; i < tokenCount; i++) {\n            const balanceStart = balance[i];\n\n            if (balanceStart <= i) {\n                const balanceEnd = balance[balanceStart];\n\n                if (balanceEnd !== i) {\n                    balance[i] = balanceEnd;\n                }\n            } else if (balanceStart > tokenCount) {\n                balance[i] = tokenCount;\n            }\n        }\n\n        // balance[0] = tokenCount;\n\n        this.source = source;\n        this.firstCharOffset = firstCharOffset === -1 ? 0 : firstCharOffset;\n        this.tokenCount = tokenCount;\n        this.offsetAndType = offsetAndType;\n        this.balance = balance;\n\n        this.reset();\n        this.next();\n    }\n\n    lookupType(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset] >> TYPE_SHIFT;\n        }\n\n        return EOF;\n    }\n    lookupTypeNonSC(idx) {\n        for (let offset = this.tokenIndex; offset < this.tokenCount; offset++) {\n            const tokenType = this.offsetAndType[offset] >> TYPE_SHIFT;\n\n            if (tokenType !== WhiteSpace && tokenType !== Comment) {\n                if (idx-- === 0) {\n                    return tokenType;\n                }\n            }\n        }\n\n        return EOF;\n    }\n    lookupOffset(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset - 1] & OFFSET_MASK;\n        }\n\n        return this.source.length;\n    }\n    lookupOffsetNonSC(idx) {\n        for (let offset = this.tokenIndex; offset < this.tokenCount; offset++) {\n            const tokenType = this.offsetAndType[offset] >> TYPE_SHIFT;\n\n            if (tokenType !== WhiteSpace && tokenType !== Comment) {\n                if (idx-- === 0) {\n                    return offset - this.tokenIndex;\n                }\n            }\n        }\n\n        return EOF;\n    }\n    lookupValue(offset, referenceStr) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return cmpStr(\n                this.source,\n                this.offsetAndType[offset - 1] & OFFSET_MASK,\n                this.offsetAndType[offset] & OFFSET_MASK,\n                referenceStr\n            );\n        }\n\n        return false;\n    }\n    getTokenStart(tokenIndex) {\n        if (tokenIndex === this.tokenIndex) {\n            return this.tokenStart;\n        }\n\n        if (tokenIndex > 0) {\n            return tokenIndex < this.tokenCount\n                ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK\n                : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\n        }\n\n        return this.firstCharOffset;\n    }\n    substrToCursor(start) {\n        return this.source.substring(start, this.tokenStart);\n    }\n\n    isBalanceEdge(pos) {\n        return this.balance[this.tokenIndex] < pos;\n        // return this.balance[this.balance[pos]] !== this.tokenIndex;\n    }\n    isDelim(code, offset) {\n        if (offset) {\n            return (\n                this.lookupType(offset) === Delim &&\n                this.source.charCodeAt(this.lookupOffset(offset)) === code\n            );\n        }\n\n        return (\n            this.tokenType === Delim &&\n            this.source.charCodeAt(this.tokenStart) === code\n        );\n    }\n\n    skip(tokenCount) {\n        let next = this.tokenIndex + tokenCount;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.tokenIndex = this.tokenCount;\n            this.next();\n        }\n    }\n    next() {\n        let next = this.tokenIndex + 1;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.tokenEnd;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.eof = true;\n            this.tokenIndex = this.tokenCount;\n            this.tokenType = EOF;\n            this.tokenStart = this.tokenEnd = this.source.length;\n        }\n    }\n    skipSC() {\n        while (this.tokenType === WhiteSpace || this.tokenType === Comment) {\n            this.next();\n        }\n    }\n    skipUntilBalanced(startToken, stopConsume) {\n        let cursor = startToken;\n        let balanceEnd = 0;\n        let offset = 0;\n\n        loop:\n        for (; cursor < this.tokenCount; cursor++) {\n            balanceEnd = this.balance[cursor];\n\n            // stop scanning on balance edge that points to offset before start token\n            if (balanceEnd < startToken) {\n                break loop;\n            }\n\n            offset = cursor > 0 ? this.offsetAndType[cursor - 1] & OFFSET_MASK : this.firstCharOffset;\n\n            // check stop condition\n            switch (stopConsume(this.source.charCodeAt(offset))) {\n                case 1: // just stop\n                    break loop;\n\n                case 2: // stop & included\n                    cursor++;\n                    break loop;\n\n                default:\n                    // fast forward to the end of balanced block for an open block tokens\n                    if (isBlockOpenerToken(this.offsetAndType[cursor] >> TYPE_SHIFT)) {\n                        cursor = balanceEnd;\n                    }\n            }\n        }\n\n        this.skip(cursor - this.tokenIndex);\n    }\n\n    forEachToken(fn) {\n        for (let i = 0, offset = this.firstCharOffset; i < this.tokenCount; i++) {\n            const start = offset;\n            const item = this.offsetAndType[i];\n            const end = item & OFFSET_MASK;\n            const type = item >> TYPE_SHIFT;\n\n            offset = end;\n\n            fn(type, start, end, i);\n        }\n    }\n    dump() {\n        const tokens = new Array(this.tokenCount);\n\n        this.forEachToken((type, start, end, index) => {\n            tokens[index] = {\n                idx: index,\n                type: tokenNames[type],\n                chunk: this.source.substring(start, end),\n                balance: this.balance[index]\n            };\n        });\n\n        return tokens;\n    }\n};\n","import * as TYPE from './types.js';\nimport {\n    isNewline,\n    isName,\n    isValidEscape,\n    isNumberStart,\n    isIdentifierStart,\n    isBOM,\n    charCodeCategory,\n    WhiteSpaceCategory,\n    DigitCategory,\n    NameStartCategory,\n    NonPrintableCategory\n} from './char-code-definitions.js';\nimport {\n    cmpStr,\n    getNewlineLength,\n    findWhiteSpaceEnd,\n    consumeEscaped,\n    consumeName,\n    consumeNumber,\n    consumeBadUrlRemnants\n} from './utils.js';\n\nexport function tokenize(source, onToken) {\n    function getCharCode(offset) {\n        return offset < sourceLength ? source.charCodeAt(offset) : 0;\n    }\n\n    // § 4.3.3. Consume a numeric token\n    function consumeNumericToken() {\n        // Consume a number and let number be the result.\n        offset = consumeNumber(source, offset);\n\n        // If the next 3 input code points would start an identifier, then:\n        if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\n            // Create a <dimension-token> with the same value and type flag as number, and a unit set initially to the empty string.\n            // Consume a name. Set the <dimension-token>’s unit to the returned value.\n            // Return the <dimension-token>.\n            type = TYPE.Dimension;\n            offset = consumeName(source, offset);\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0025 PERCENTAGE SIGN (%), consume it.\n        if (getCharCode(offset) === 0x0025) {\n            // Create a <percentage-token> with the same value as number, and return it.\n            type = TYPE.Percentage;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create a <number-token> with the same value and type flag as number, and return it.\n        type = TYPE.Number;\n    }\n\n    // § 4.3.4. Consume an ident-like token\n    function consumeIdentLikeToken() {\n        const nameStartOffset = offset;\n\n        // Consume a name, and let string be the result.\n        offset = consumeName(source, offset);\n\n        // If string’s value is an ASCII case-insensitive match for \"url\",\n        // and the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\n            // While the next two input code points are whitespace, consume the next input code point.\n            offset = findWhiteSpaceEnd(source, offset + 1);\n\n            // If the next one or two input code points are U+0022 QUOTATION MARK (\"), U+0027 APOSTROPHE ('),\n            // or whitespace followed by U+0022 QUOTATION MARK (\") or U+0027 APOSTROPHE ('),\n            // then create a <function-token> with its value set to string and return it.\n            if (getCharCode(offset) === 0x0022 ||\n                getCharCode(offset) === 0x0027) {\n                type = TYPE.Function;\n                offset = nameStartOffset + 4;\n                return;\n            }\n\n            // Otherwise, consume a url token, and return it.\n            consumeUrlToken();\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        // Create a <function-token> with its value set to string and return it.\n        if (getCharCode(offset) === 0x0028) {\n            type = TYPE.Function;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create an <ident-token> with its value set to string and return it.\n        type = TYPE.Ident;\n    }\n\n    // § 4.3.5. Consume a string token\n    function consumeStringToken(endingCodePoint) {\n        // This algorithm may be called with an ending code point, which denotes the code point\n        // that ends the string. If an ending code point is not specified,\n        // the current input code point is used.\n        if (!endingCodePoint) {\n            endingCodePoint = getCharCode(offset++);\n        }\n\n        // Initially create a <string-token> with its value set to the empty string.\n        type = TYPE.String;\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // ending code point\n                case endingCodePoint:\n                    // Return the <string-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <string-token>.\n                    // return;\n\n                // newline\n                case WhiteSpaceCategory:\n                    if (isNewline(code)) {\n                        // This is a parse error. Reconsume the current input code point,\n                        // create a <bad-string-token>, and return it.\n                        offset += getNewlineLength(source, offset, code);\n                        type = TYPE.BadString;\n                        return;\n                    }\n                    break;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the next input code point is EOF, do nothing.\n                    if (offset === source.length - 1) {\n                        break;\n                    }\n\n                    const nextCode = getCharCode(offset + 1);\n\n                    // Otherwise, if the next input code point is a newline, consume it.\n                    if (isNewline(nextCode)) {\n                        offset += getNewlineLength(source, offset + 1, nextCode);\n                    } else if (isValidEscape(code, nextCode)) {\n                        // Otherwise, (the stream starts with a valid escape) consume\n                        // an escaped code point and append the returned code point to\n                        // the <string-token>’s value.\n                        offset = consumeEscaped(source, offset) - 1;\n                    }\n                    break;\n\n                // anything else\n                // Append the current input code point to the <string-token>’s value.\n            }\n        }\n    }\n\n    // § 4.3.6. Consume a url token\n    // Note: This algorithm assumes that the initial \"url(\" has already been consumed.\n    // This algorithm also assumes that it’s being called to consume an \"unquoted\" value, like url(foo).\n    // A quoted value, like url(\"foo\"), is parsed as a <function-token>. Consume an ident-like token\n    // automatically handles this distinction; this algorithm shouldn’t be called directly otherwise.\n    function consumeUrlToken() {\n        // Initially create a <url-token> with its value set to the empty string.\n        type = TYPE.Url;\n\n        // Consume as much whitespace as possible.\n        offset = findWhiteSpaceEnd(source, offset);\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // U+0029 RIGHT PARENTHESIS ())\n                case 0x0029:\n                    // Return the <url-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <url-token>.\n                    // return;\n\n                // whitespace\n                case WhiteSpaceCategory:\n                    // Consume as much whitespace as possible.\n                    offset = findWhiteSpaceEnd(source, offset);\n\n                    // If the next input code point is U+0029 RIGHT PARENTHESIS ()) or EOF,\n                    // consume it and return the <url-token>\n                    // (if EOF was encountered, this is a parse error);\n                    if (getCharCode(offset) === 0x0029 || offset >= source.length) {\n                        if (offset < source.length) {\n                            offset++;\n                        }\n                        return;\n                    }\n\n                    // otherwise, consume the remnants of a bad url, create a <bad-url-token>,\n                    // and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+0022 QUOTATION MARK (\")\n                // U+0027 APOSTROPHE (')\n                // U+0028 LEFT PARENTHESIS (()\n                // non-printable code point\n                case 0x0022:\n                case 0x0027:\n                case 0x0028:\n                case NonPrintableCategory:\n                    // This is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the stream starts with a valid escape, consume an escaped code point and\n                    // append the returned code point to the <url-token>’s value.\n                    if (isValidEscape(code, getCharCode(offset + 1))) {\n                        offset = consumeEscaped(source, offset) - 1;\n                        break;\n                    }\n\n                    // Otherwise, this is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // anything else\n                // Append the current input code point to the <url-token>’s value.\n            }\n        }\n    }\n\n    // ensure source is a string\n    source = String(source || '');\n\n    const sourceLength = source.length;\n    let start = isBOM(getCharCode(0));\n    let offset = start;\n    let type;\n\n    // https://drafts.csswg.org/css-syntax-3/#consume-token\n    // § 4.3.1. Consume a token\n    while (offset < sourceLength) {\n        const code = source.charCodeAt(offset);\n\n        switch (charCodeCategory(code)) {\n            // whitespace\n            case WhiteSpaceCategory:\n                // Consume as much whitespace as possible. Return a <whitespace-token>.\n                type = TYPE.WhiteSpace;\n                offset = findWhiteSpaceEnd(source, offset + 1);\n                break;\n\n            // U+0022 QUOTATION MARK (\")\n            case 0x0022:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0023 NUMBER SIGN (#)\n            case 0x0023:\n                // If the next input code point is a name code point or the next two input code points are a valid escape, then:\n                if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // Create a <hash-token>.\n                    type = TYPE.Hash;\n\n                    // If the next 3 input code points would start an identifier, set the <hash-token>’s type flag to \"id\".\n                    // if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    //     // TODO: set id flag\n                    // }\n\n                    // Consume a name, and set the <hash-token>’s value to the returned string.\n                    offset = consumeName(source, offset + 1);\n\n                    // Return the <hash-token>.\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0027 APOSTROPHE (')\n            case 0x0027:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0028 LEFT PARENTHESIS (()\n            case 0x0028:\n                // Return a <(-token>.\n                type = TYPE.LeftParenthesis;\n                offset++;\n                break;\n\n            // U+0029 RIGHT PARENTHESIS ())\n            case 0x0029:\n                // Return a <)-token>.\n                type = TYPE.RightParenthesis;\n                offset++;\n                break;\n\n            // U+002B PLUS SIGN (+)\n            case 0x002B:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+002C COMMA (,)\n            case 0x002C:\n                // Return a <comma-token>.\n                type = TYPE.Comma;\n                offset++;\n                break;\n\n            // U+002D HYPHEN-MINUS (-)\n            case 0x002D:\n                // If the input stream starts with a number, reconsume the current input code point, consume a numeric token, and return it.\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, if the next 2 input code points are U+002D HYPHEN-MINUS U+003E GREATER-THAN SIGN (->), consume them and return a <CDC-token>.\n                    if (getCharCode(offset + 1) === 0x002D &&\n                        getCharCode(offset + 2) === 0x003E) {\n                        type = TYPE.CDC;\n                        offset = offset + 3;\n                    } else {\n                        // Otherwise, if the input stream starts with an identifier, ...\n                        if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                            // ... reconsume the current input code point, consume an ident-like token, and return it.\n                            consumeIdentLikeToken();\n                        } else {\n                            // Otherwise, return a <delim-token> with its value set to the current input code point.\n                            type = TYPE.Delim;\n                            offset++;\n                        }\n                    }\n                }\n                break;\n\n            // U+002E FULL STOP (.)\n            case 0x002E:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+002F SOLIDUS (/)\n            case 0x002F:\n                // If the next two input code point are U+002F SOLIDUS (/) followed by a U+002A ASTERISK (*),\n                if (getCharCode(offset + 1) === 0x002A) {\n                    // ... consume them and all following code points up to and including the first U+002A ASTERISK (*)\n                    // followed by a U+002F SOLIDUS (/), or up to an EOF code point.\n                    type = TYPE.Comment;\n                    offset = source.indexOf('*/', offset + 2);\n                    offset = offset === -1 ? source.length : offset + 2;\n                } else {\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+003A COLON (:)\n            case 0x003A:\n                // Return a <colon-token>.\n                type = TYPE.Colon;\n                offset++;\n                break;\n\n            // U+003B SEMICOLON (;)\n            case 0x003B:\n                // Return a <semicolon-token>.\n                type = TYPE.Semicolon;\n                offset++;\n                break;\n\n            // U+003C LESS-THAN SIGN (<)\n            case 0x003C:\n                // If the next 3 input code points are U+0021 EXCLAMATION MARK U+002D HYPHEN-MINUS U+002D HYPHEN-MINUS (!--), ...\n                if (getCharCode(offset + 1) === 0x0021 &&\n                    getCharCode(offset + 2) === 0x002D &&\n                    getCharCode(offset + 3) === 0x002D) {\n                    // ... consume them and return a <CDO-token>.\n                    type = TYPE.CDO;\n                    offset = offset + 4;\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0040 COMMERCIAL AT (@)\n            case 0x0040:\n                // If the next 3 input code points would start an identifier, ...\n                if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    // ... consume a name, create an <at-keyword-token> with its value set to the returned value, and return it.\n                    type = TYPE.AtKeyword;\n                    offset = consumeName(source, offset + 1);\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+005B LEFT SQUARE BRACKET ([)\n            case 0x005B:\n                // Return a <[-token>.\n                type = TYPE.LeftSquareBracket;\n                offset++;\n                break;\n\n            // U+005C REVERSE SOLIDUS (\\)\n            case 0x005C:\n                // If the input stream starts with a valid escape, ...\n                if (isValidEscape(code, getCharCode(offset + 1))) {\n                    // ... reconsume the current input code point, consume an ident-like token, and return it.\n                    consumeIdentLikeToken();\n                } else {\n                    // Otherwise, this is a parse error. Return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+005D RIGHT SQUARE BRACKET (])\n            case 0x005D:\n                // Return a <]-token>.\n                type = TYPE.RightSquareBracket;\n                offset++;\n                break;\n\n            // U+007B LEFT CURLY BRACKET ({)\n            case 0x007B:\n                // Return a <{-token>.\n                type = TYPE.LeftCurlyBracket;\n                offset++;\n                break;\n\n            // U+007D RIGHT CURLY BRACKET (})\n            case 0x007D:\n                // Return a <}-token>.\n                type = TYPE.RightCurlyBracket;\n                offset++;\n                break;\n\n            // digit\n            case DigitCategory:\n                // Reconsume the current input code point, consume a numeric token, and return it.\n                consumeNumericToken();\n                break;\n\n            // name-start code point\n            case NameStartCategory:\n                // Reconsume the current input code point, consume an ident-like token, and return it.\n                consumeIdentLikeToken();\n                break;\n\n                // EOF\n                // case EofCategory:\n                // Return an <EOF-token>.\n                // break;\n\n            // anything else\n            default:\n                // Return a <delim-token> with its value set to the current input code point.\n                type = TYPE.Delim;\n                offset++;\n        }\n\n        // put token to stream\n        onToken(type, start, start = offset);\n    }\n}\n\nexport * from './types.js';\nexport * as tokenTypes from './types.js';\nexport { default as tokenNames } from './names.js';\nexport * from './char-code-definitions.js';\nexport * from './utils.js';\nexport * from './OffsetToLocation.js';\nexport * from './TokenStream.js';\n","//\n//                              list\n//                            ┌──────┐\n//             ┌──────────────┼─head │\n//             │              │ tail─┼──────────────┐\n//             │              └──────┘              │\n//             ▼                                    ▼\n//            item        item        item        item\n//          ┌──────┐    ┌──────┐    ┌──────┐    ┌──────┐\n//  null ◀──┼─prev │◀───┼─prev │◀───┼─prev │◀───┼─prev │\n//          │ next─┼───▶│ next─┼───▶│ next─┼───▶│ next─┼──▶ null\n//          ├──────┤    ├──────┤    ├──────┤    ├──────┤\n//          │ data │    │ data │    │ data │    │ data │\n//          └──────┘    └──────┘    └──────┘    └──────┘\n//\n\nlet releasedCursors = null;\n\nexport class List {\n    static createItem(data) {\n        return {\n            prev: null,\n            next: null,\n            data\n        };\n    }\n\n    constructor() {\n        this.head = null;\n        this.tail = null;\n        this.cursor = null;\n    }\n    createItem(data) {\n        return List.createItem(data);\n    }\n\n    // cursor helpers\n    allocateCursor(prev, next) {\n        let cursor;\n\n        if (releasedCursors !== null) {\n            cursor = releasedCursors;\n            releasedCursors = releasedCursors.cursor;\n            cursor.prev = prev;\n            cursor.next = next;\n            cursor.cursor = this.cursor;\n        } else {\n            cursor = {\n                prev,\n                next,\n                cursor: this.cursor\n            };\n        }\n\n        this.cursor = cursor;\n\n        return cursor;\n    }\n    releaseCursor() {\n        const { cursor } = this;\n\n        this.cursor = cursor.cursor;\n        cursor.prev = null;\n        cursor.next = null;\n        cursor.cursor = releasedCursors;\n        releasedCursors = cursor;\n    }\n    updateCursors(prevOld, prevNew, nextOld, nextNew) {\n        let { cursor } = this;\n\n        while (cursor !== null) {\n            if (cursor.prev === prevOld) {\n                cursor.prev = prevNew;\n            }\n\n            if (cursor.next === nextOld) {\n                cursor.next = nextNew;\n            }\n\n            cursor = cursor.cursor;\n        }\n    }\n    *[Symbol.iterator]() {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            yield cursor.data;\n        }\n    }\n\n    // getters\n    get size() {\n        let size = 0;\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            size++;\n        }\n\n        return size;\n    }\n    get isEmpty() {\n        return this.head === null;\n    }\n    get first() {\n        return this.head && this.head.data;\n    }\n    get last() {\n        return this.tail && this.tail.data;\n    }\n\n    // convertors\n    fromArray(array) {\n        let cursor = null;\n        this.head = null;\n\n        for (let data of array) {\n            const item = List.createItem(data);\n\n            if (cursor !== null) {\n                cursor.next = item;\n            } else {\n                this.head = item;\n            }\n\n            item.prev = cursor;\n            cursor = item;\n        }\n\n        this.tail = cursor;\n        return this;\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return [...this];\n    }\n\n    // array-like methods\n    forEach(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(null, this.head);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    forEachRight(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(this.tail, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    reduce(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(null, this.head);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.next !== null) {\n            item = cursor.next;\n            cursor.next = item.next;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    reduceRight(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(this.tail, null);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.prev !== null) {\n            item = cursor.prev;\n            cursor.prev = item.prev;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    some(fn, thisArg = this) {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n    map(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            result.appendData(fn.call(thisArg, cursor.data, cursor, this));\n        }\n\n        return result;\n    }\n    filter(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                result.appendData(cursor.data);\n            }\n        }\n\n        return result;\n    }\n\n    nextUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(null, start);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    prevUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(start, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n\n    // mutation\n    clear() {\n        this.head = null;\n        this.tail = null;\n    }\n    copy() {\n        const result = new List();\n\n        for (let data of this) {\n            result.appendData(data);\n        }\n\n        return result;\n    }\n    prepend(item) {\n        //      head\n        //    ^\n        // item\n        this.updateCursors(null, item, this.head, item);\n\n        // insert to the beginning of the list\n        if (this.head !== null) {\n            // new item <- first item\n            this.head.prev = item;\n            // new item -> first item\n            item.next = this.head;\n        } else {\n            // if list has no head, then it also has no tail\n            // in this case tail points to the new item\n            this.tail = item;\n        }\n\n        // head always points to new item\n        this.head = item;\n        return this;\n    }\n    prependData(data) {\n        return this.prepend(List.createItem(data));\n    }\n    append(item) {\n        return this.insert(item);\n    }\n    appendData(data) {\n        return this.insert(List.createItem(data));\n    }\n    insert(item, before = null) {\n        if (before !== null) {\n            // prev   before\n            //      ^\n            //     item\n            this.updateCursors(before.prev, item, before, item);\n\n            if (before.prev === null) {\n                // insert to the beginning of list\n                if (this.head !== before) {\n                    throw new Error('before doesn\\'t belong to list');\n                }\n                // since head points to before therefore list doesn't empty\n                // no need to check tail\n                this.head = item;\n                before.prev = item;\n                item.next = before;\n                this.updateCursors(null, item);\n            } else {\n                // insert between two items\n                before.prev.next = item;\n                item.prev = before.prev;\n                before.prev = item;\n                item.next = before;\n            }\n        } else {\n            // tail\n            //      ^\n            //      item\n            this.updateCursors(this.tail, item, null, item);\n\n            // insert to the ending of the list\n            if (this.tail !== null) {\n                // last item -> new item\n                this.tail.next = item;\n                // last item <- new item\n                item.prev = this.tail;\n            } else {\n                // if list has no tail, then it also has no head\n                // in this case head points to new item\n                this.head = item;\n            }\n\n            // tail always points to new item\n            this.tail = item;\n        }\n\n        return this;\n    }\n    insertData(data, before) {\n        return this.insert(List.createItem(data), before);\n    }\n    remove(item) {\n        //      item\n        //       ^\n        // prev     next\n        this.updateCursors(item, item.prev, item, item.next);\n\n        if (item.prev !== null) {\n            item.prev.next = item.next;\n        } else {\n            if (this.head !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.head = item.next;\n        }\n\n        if (item.next !== null) {\n            item.next.prev = item.prev;\n        } else {\n            if (this.tail !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.tail = item.prev;\n        }\n\n        item.prev = null;\n        item.next = null;\n\n        return item;\n    }\n    push(data) {\n        this.insert(List.createItem(data));\n    }\n    pop() {\n        return this.tail !== null ? this.remove(this.tail) : null;\n    }\n    unshift(data) {\n        this.prepend(List.createItem(data));\n    }\n    shift() {\n        return this.head !== null ? this.remove(this.head) : null;\n    }\n    prependList(list) {\n        return this.insertList(list, this.head);\n    }\n    appendList(list) {\n        return this.insertList(list);\n    }\n    insertList(list, before) {\n        // ignore empty lists\n        if (list.head === null) {\n            return this;\n        }\n\n        if (before !== undefined && before !== null) {\n            this.updateCursors(before.prev, list.tail, before, list.head);\n\n            // insert in the middle of dist list\n            if (before.prev !== null) {\n                // before.prev <-> list.head\n                before.prev.next = list.head;\n                list.head.prev = before.prev;\n            } else {\n                this.head = list.head;\n            }\n\n            before.prev = list.tail;\n            list.tail.next = before;\n        } else {\n            this.updateCursors(this.tail, list.tail, null, list.head);\n\n            // insert to end of the list\n            if (this.tail !== null) {\n                // if destination list has a tail, then it also has a head,\n                // but head doesn't change\n                // dest tail -> source head\n                this.tail.next = list.head;\n                // dest tail <- source head\n                list.head.prev = this.tail;\n            } else {\n                // if list has no a tail, then it also has no a head\n                // in this case points head to new item\n                this.head = list.head;\n            }\n\n            // tail always start point to new item\n            this.tail = list.tail;\n        }\n\n        list.head = null;\n        list.tail = null;\n        return this;\n    }\n    replace(oldItem, newItemOrList) {\n        if ('head' in newItemOrList) {\n            this.insertList(newItemOrList, oldItem);\n        } else {\n            this.insert(newItemOrList, oldItem);\n        }\n\n        this.remove(oldItem);\n    }\n}\n","export function createCustomError(name, message) {\n    // use Object.create(), because some VMs prevent setting line/column otherwise\n    // (iOS Safari 10 even throws an exception)\n    const error = Object.create(SyntaxError.prototype);\n    const errorStack = new Error();\n\n    return Object.assign(error, {\n        name,\n        message,\n        get stack() {\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, `${name}: ${message}\\n`);\n        }\n    });\n};\n","import { createCustomError } from '../utils/create-custom-error.js';\n\nconst MAX_LINE_LENGTH = 100;\nconst OFFSET_CORRECTION = 60;\nconst TAB_REPLACEMENT = '    ';\n\nfunction sourceFragment({ source, line, column, baseLine, baseColumn }, extraLines) {\n    function processLines(start, end) {\n        return lines\n            .slice(start, end)\n            .map((line, idx) =>\n                String(start + idx + 1).padStart(maxNumLength) + ' |' + line\n            ).join('\\n');\n    }\n\n    const prelines = '\\n'.repeat(Math.max(baseLine - 1, 0));\n    const precolumns = ' '.repeat(Math.max(baseColumn - 1, 0));\n    const lines = (prelines + precolumns + source).split(/\\r\\n?|\\n|\\f/);\n    const startLine = Math.max(1, line - extraLines) - 1;\n    const endLine = Math.min(line + extraLines, lines.length + 1);\n    const maxNumLength = Math.max(4, String(endLine).length) + 1;\n    let cutLeft = 0;\n\n    // column correction according to replaced tab before column\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n\n    if (column > MAX_LINE_LENGTH) {\n        cutLeft = column - OFFSET_CORRECTION + 3;\n        column = OFFSET_CORRECTION - 2;\n    }\n\n    for (let i = startLine; i <= endLine; i++) {\n        if (i >= 0 && i < lines.length) {\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n            lines[i] =\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\n        }\n    }\n\n    return [\n        processLines(startLine, line),\n        new Array(column + maxNumLength + 2).join('-') + '^',\n        processLines(line, endLine)\n    ].filter(Boolean)\n        .join('\\n')\n        .replace(/^(\\s+\\d+\\s+\\|\\n)+/, '')\n        .replace(/\\n(\\s+\\d+\\s+\\|)+$/, '');\n}\n\nexport function SyntaxError(message, source, offset, line, column, baseLine = 1, baseColumn = 1) {\n    const error = Object.assign(createCustomError('SyntaxError', message), {\n        source,\n        offset,\n        line,\n        column,\n        sourceFragment(extraLines) {\n            return sourceFragment({ source, line, column, baseLine, baseColumn }, isNaN(extraLines) ? 0 : extraLines);\n        },\n        get formattedMessage() {\n            return (\n                `Parse error: ${message}\\n` +\n                sourceFragment({ source, line, column, baseLine, baseColumn }, 2)\n            );\n        }\n    });\n\n    return error;\n}\n","import { WhiteSpace, Comment } from '../tokenizer/index.js';\n\nexport function readSequence(recognizer) {\n    const children = this.createList();\n    let space = false;\n    const context = {\n        recognizer\n    };\n\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n                this.next();\n                continue;\n\n            case WhiteSpace:\n                space = true;\n                this.next();\n                continue;\n        }\n\n        let child = recognizer.getNode.call(this, context);\n\n        if (child === undefined) {\n            break;\n        }\n\n        if (space) {\n            if (recognizer.onWhiteSpace) {\n                recognizer.onWhiteSpace.call(this, child, children, context);\n            }\n            space = false;\n        }\n\n        children.push(child);\n    }\n\n    if (space && recognizer.onWhiteSpace) {\n        recognizer.onWhiteSpace.call(this, null, children, context);\n    }\n\n    return children;\n};\n","import { List } from '../utils/List.js';\nimport { SyntaxError } from './SyntaxError.js';\nimport {\n    tokenize,\n    OffsetToLocation,\n    TokenStream,\n    tokenNames,\n\n    consumeNumber,\n    findWhiteSpaceStart,\n    cmpChar,\n    cmpStr,\n\n    WhiteSpace,\n    Comment,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Percentage,\n    Number as NumberToken\n} from '../tokenizer/index.js';\nimport { readSequence } from './sequence.js';\n\nconst NOOP = () => {};\nconst EXCLAMATIONMARK = 0x0021;  // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;       // U+0023 NUMBER SIGN (#)\nconst SEMICOLON = 0x003B;        // U+003B SEMICOLON (;)\nconst LEFTCURLYBRACKET = 0x007B; // U+007B LEFT CURLY BRACKET ({)\nconst NULL = 0;\n\nfunction createParseContext(name) {\n    return function() {\n        return this[name]();\n    };\n}\n\nfunction fetchParseValues(dict) {\n    const result = Object.create(null);\n\n    for (const name of Object.keys(dict)) {\n        const item = dict[name];\n        const fn = item.parse || item;\n\n        if (fn) {\n            result[name] = fn;\n        }\n    }\n\n    return result;\n}\n\nfunction processConfig(config) {\n    const parseConfig = {\n        context: Object.create(null),\n        features: Object.assign(Object.create(null), config.features),\n        scope: Object.assign(Object.create(null), config.scope),\n        atrule: fetchParseValues(config.atrule),\n        pseudo: fetchParseValues(config.pseudo),\n        node: fetchParseValues(config.node)\n    };\n\n    for (const [name, context] of Object.entries(config.parseContext)) {\n        switch (typeof context) {\n            case 'function':\n                parseConfig.context[name] = context;\n                break;\n\n            case 'string':\n                parseConfig.context[name] = createParseContext(context);\n                break;\n        }\n    }\n\n    return {\n        config: parseConfig,\n        ...parseConfig,\n        ...parseConfig.node\n    };\n}\n\nexport function createParser(config) {\n    let source = '';\n    let filename = '<unknown>';\n    let needPositions = false;\n    let onParseError = NOOP;\n    let onParseErrorThrow = false;\n\n    const locationMap = new OffsetToLocation();\n    const parser = Object.assign(new TokenStream(), processConfig(config || {}), {\n        parseAtrulePrelude: true,\n        parseRulePrelude: true,\n        parseValue: true,\n        parseCustomProperty: false,\n\n        readSequence,\n\n        consumeUntilBalanceEnd: () => 0,\n        consumeUntilLeftCurlyBracket(code) {\n            return code === LEFTCURLYBRACKET ? 1 : 0;\n        },\n        consumeUntilLeftCurlyBracketOrSemicolon(code) {\n            return code === LEFTCURLYBRACKET || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilExclamationMarkOrSemicolon(code) {\n            return code === EXCLAMATIONMARK || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilSemicolonIncluded(code) {\n            return code === SEMICOLON ? 2 : 0;\n        },\n\n        createList() {\n            return new List();\n        },\n        createSingleNodeList(node) {\n            return new List().appendData(node);\n        },\n        getFirstListNode(list) {\n            return list && list.first;\n        },\n        getLastListNode(list) {\n            return list && list.last;\n        },\n\n        parseWithFallback(consumer, fallback) {\n            const startIndex = this.tokenIndex;\n\n            try {\n                return consumer.call(this);\n            } catch (e) {\n                if (onParseErrorThrow) {\n                    throw e;\n                }\n\n                this.skip(startIndex - this.tokenIndex);\n                const fallbackNode = fallback.call(this);\n\n                onParseErrorThrow = true;\n                onParseError(e, fallbackNode);\n                onParseErrorThrow = false;\n\n                return fallbackNode;\n            }\n        },\n\n        lookupNonWSType(offset) {\n            let type;\n\n            do {\n                type = this.lookupType(offset++);\n                if (type !== WhiteSpace && type !== Comment) {\n                    return type;\n                }\n            } while (type !== NULL);\n\n            return NULL;\n        },\n\n        charCodeAt(offset) {\n            return offset >= 0 && offset < source.length ? source.charCodeAt(offset) : 0;\n        },\n        substring(offsetStart, offsetEnd) {\n            return source.substring(offsetStart, offsetEnd);\n        },\n        substrToCursor(start) {\n            return this.source.substring(start, this.tokenStart);\n        },\n\n        cmpChar(offset, charCode) {\n            return cmpChar(source, offset, charCode);\n        },\n        cmpStr(offsetStart, offsetEnd, str) {\n            return cmpStr(source, offsetStart, offsetEnd, str);\n        },\n\n        consume(tokenType) {\n            const start = this.tokenStart;\n\n            this.eat(tokenType);\n\n            return this.substrToCursor(start);\n        },\n        consumeFunctionName() {\n            const name = source.substring(this.tokenStart, this.tokenEnd - 1);\n\n            this.eat(FunctionToken);\n\n            return name;\n        },\n        consumeNumber(type) {\n            const number = source.substring(this.tokenStart, consumeNumber(source, this.tokenStart));\n\n            this.eat(type);\n\n            return number;\n        },\n\n        eat(tokenType) {\n            if (this.tokenType !== tokenType) {\n                const tokenName = tokenNames[tokenType].slice(0, -6).replace(/-/g, ' ').replace(/^./, m => m.toUpperCase());\n                let message = `${/[[\\](){}]/.test(tokenName) ? `\"${tokenName}\"` : tokenName} is expected`;\n                let offset = this.tokenStart;\n\n                // tweak message and offset\n                switch (tokenType) {\n                    case Ident:\n                        // when identifier is expected but there is a function or url\n                        if (this.tokenType === FunctionToken || this.tokenType === Url) {\n                            offset = this.tokenEnd - 1;\n                            message = 'Identifier is expected but function found';\n                        } else {\n                            message = 'Identifier is expected';\n                        }\n                        break;\n\n                    case Hash:\n                        if (this.isDelim(NUMBERSIGN)) {\n                            this.next();\n                            offset++;\n                            message = 'Name is expected';\n                        }\n                        break;\n\n                    case Percentage:\n                        if (this.tokenType === NumberToken) {\n                            offset = this.tokenEnd;\n                            message = 'Percent sign is expected';\n                        }\n                        break;\n                }\n\n                this.error(message, offset);\n            }\n\n            this.next();\n        },\n        eatIdent(name) {\n            if (this.tokenType !== Ident || this.lookupValue(0, name) === false) {\n                this.error(`Identifier \"${name}\" is expected`);\n            }\n\n            this.next();\n        },\n        eatDelim(code) {\n            if (!this.isDelim(code)) {\n                this.error(`Delim \"${String.fromCharCode(code)}\" is expected`);\n            }\n\n            this.next();\n        },\n\n        getLocation(start, end) {\n            if (needPositions) {\n                return locationMap.getLocationRange(\n                    start,\n                    end,\n                    filename\n                );\n            }\n\n            return null;\n        },\n        getLocationFromList(list) {\n            if (needPositions) {\n                const head = this.getFirstListNode(list);\n                const tail = this.getLastListNode(list);\n                return locationMap.getLocationRange(\n                    head !== null ? head.loc.start.offset - locationMap.startOffset : this.tokenStart,\n                    tail !== null ? tail.loc.end.offset - locationMap.startOffset : this.tokenStart,\n                    filename\n                );\n            }\n\n            return null;\n        },\n\n        error(message, offset) {\n            const location = typeof offset !== 'undefined' && offset < source.length\n                ? locationMap.getLocation(offset)\n                : this.eof\n                    ? locationMap.getLocation(findWhiteSpaceStart(source, source.length - 1))\n                    : locationMap.getLocation(this.tokenStart);\n\n            throw new SyntaxError(\n                message || 'Unexpected input',\n                source,\n                location.offset,\n                location.line,\n                location.column,\n                locationMap.startLine,\n                locationMap.startColumn\n            );\n        }\n    });\n\n    const parse = function(source_, options) {\n        source = source_;\n        options = options || {};\n\n        parser.setSource(source, tokenize);\n        locationMap.setSource(\n            source,\n            options.offset,\n            options.line,\n            options.column\n        );\n\n        filename = options.filename || '<unknown>';\n        needPositions = Boolean(options.positions);\n        onParseError = typeof options.onParseError === 'function' ? options.onParseError : NOOP;\n        onParseErrorThrow = false;\n\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n\n        const { context = 'default', onComment } = options;\n\n        if (context in parser.context === false) {\n            throw new Error('Unknown context `' + context + '`');\n        }\n\n        if (typeof onComment === 'function') {\n            parser.forEachToken((type, start, end) => {\n                if (type === Comment) {\n                    const loc = parser.getLocation(start, end);\n                    const value = cmpStr(source, end - 2, end, '*/')\n                        ? source.slice(start + 2, end - 2)\n                        : source.slice(start + 2, end);\n\n                    onComment(value, loc);\n                }\n            });\n        }\n\n        const ast = parser.context[context].call(parser, options);\n\n        if (!parser.eof) {\n            parser.error();\n        }\n\n        return ast;\n    };\n\n    return Object.assign(parse, {\n        SyntaxError,\n        config: parser.config\n    });\n};\n","import { SourceMapGenerator } from 'source-map-js/lib/source-map-generator.js';\n\nconst trackNodes = new Set(['Atrule', 'Selector', 'Declaration']);\n\nexport function generateSourceMap(handlers) {\n    const map = new SourceMapGenerator();\n    const generated = {\n        line: 1,\n        column: 0\n    };\n    const original = {\n        line: 0, // should be zero to add first mapping\n        column: 0\n    };\n    const activatedGenerated = {\n        line: 1,\n        column: 0\n    };\n    const activatedMapping = {\n        generated: activatedGenerated\n    };\n    let line = 1;\n    let column = 0;\n    let sourceMappingActive = false;\n\n    const origHandlersNode = handlers.node;\n    handlers.node = function(node) {\n        if (node.loc && node.loc.start && trackNodes.has(node.type)) {\n            const nodeLine = node.loc.start.line;\n            const nodeColumn = node.loc.start.column - 1;\n\n            if (original.line !== nodeLine ||\n                original.column !== nodeColumn) {\n                original.line = nodeLine;\n                original.column = nodeColumn;\n\n                generated.line = line;\n                generated.column = column;\n\n                if (sourceMappingActive) {\n                    sourceMappingActive = false;\n                    if (generated.line !== activatedGenerated.line ||\n                        generated.column !== activatedGenerated.column) {\n                        map.addMapping(activatedMapping);\n                    }\n                }\n\n                sourceMappingActive = true;\n                map.addMapping({\n                    source: node.loc.source,\n                    original,\n                    generated\n                });\n            }\n        }\n\n        origHandlersNode.call(this, node);\n\n        if (sourceMappingActive && trackNodes.has(node.type)) {\n            activatedGenerated.line = line;\n            activatedGenerated.column = column;\n        }\n    };\n\n    const origHandlersEmit = handlers.emit;\n    handlers.emit = function(value, type, auto) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 10) { // \\n\n                line++;\n                column = 0;\n            } else {\n                column++;\n            }\n        }\n\n        origHandlersEmit(value, type, auto);\n    };\n\n    const origHandlersResult = handlers.result;\n    handlers.result = function() {\n        if (sourceMappingActive) {\n            map.addMapping(activatedMapping);\n        }\n\n        return {\n            css: origHandlersResult(),\n            map\n        };\n    };\n\n    return handlers;\n};\n","import {\n    WhiteSpace,\n    Delim,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    BadUrl,\n    AtKeyword,\n    Hash,\n    Percentage,\n    Dimension,\n    Number as NumberToken,\n    String as StringToken,\n    Colon,\n    LeftParenthesis,\n    RightParenthesis,\n    CDC\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n\nconst code = (type, value) => {\n    if (type === Delim) {\n        type = value;\n    }\n\n    if (typeof type === 'string') {\n        const charCode = type.charCodeAt(0);\n        return charCode > 0x7F ? 0x8000 : charCode << 8;\n    }\n\n    return type;\n};\n\n// https://www.w3.org/TR/css-syntax-3/#serialization\n// The only requirement for serialization is that it must \"round-trip\" with parsing,\n// that is, parsing the stylesheet must produce the same data structures as parsing,\n// serializing, and parsing again, except for consecutive <whitespace-token>s,\n// which may be collapsed into a single token.\n\nconst specPairs = [\n    [Ident, Ident],\n    [Ident, FunctionToken],\n    [Ident, Url],\n    [Ident, BadUrl],\n    [Ident, '-'],\n    [Ident, NumberToken],\n    [Ident, Percentage],\n    [Ident, Dimension],\n    [Ident, CDC],\n    [Ident, LeftParenthesis],\n\n    [AtKeyword, Ident],\n    [AtKeyword, FunctionToken],\n    [AtKeyword, Url],\n    [AtKeyword, BadUrl],\n    [AtKeyword, '-'],\n    [AtKeyword, NumberToken],\n    [AtKeyword, Percentage],\n    [AtKeyword, Dimension],\n    [AtKeyword, CDC],\n\n    [Hash, Ident],\n    [Hash, FunctionToken],\n    [Hash, Url],\n    [Hash, BadUrl],\n    [Hash, '-'],\n    [Hash, NumberToken],\n    [Hash, Percentage],\n    [Hash, Dimension],\n    [Hash, CDC],\n\n    [Dimension, Ident],\n    [Dimension, FunctionToken],\n    [Dimension, Url],\n    [Dimension, BadUrl],\n    [Dimension, '-'],\n    [Dimension, NumberToken],\n    [Dimension, Percentage],\n    [Dimension, Dimension],\n    [Dimension, CDC],\n\n    ['#', Ident],\n    ['#', FunctionToken],\n    ['#', Url],\n    ['#', BadUrl],\n    ['#', '-'],\n    ['#', NumberToken],\n    ['#', Percentage],\n    ['#', Dimension],\n    ['#', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['-', Ident],\n    ['-', FunctionToken],\n    ['-', Url],\n    ['-', BadUrl],\n    ['-', '-'],\n    ['-', NumberToken],\n    ['-', Percentage],\n    ['-', Dimension],\n    ['-', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    [NumberToken, Ident],\n    [NumberToken, FunctionToken],\n    [NumberToken, Url],\n    [NumberToken, BadUrl],\n    [NumberToken, NumberToken],\n    [NumberToken, Percentage],\n    [NumberToken, Dimension],\n    [NumberToken, '%'],\n    [NumberToken, CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['@', Ident],\n    ['@', FunctionToken],\n    ['@', Url],\n    ['@', BadUrl],\n    ['@', '-'],\n    ['@', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['.', NumberToken],\n    ['.', Percentage],\n    ['.', Dimension],\n\n    ['+', NumberToken],\n    ['+', Percentage],\n    ['+', Dimension],\n\n    ['/', '*']\n];\n// validate with scripts/generate-safe\nconst safePairs = specPairs.concat([\n    [Ident, Hash],\n\n    [Dimension, Hash],\n\n    [Hash, Hash],\n\n    [AtKeyword, LeftParenthesis],\n    [AtKeyword, StringToken],\n    [AtKeyword, Colon],\n\n    [Percentage, Percentage],\n    [Percentage, Dimension],\n    [Percentage, FunctionToken],\n    [Percentage, '-'],\n\n    [RightParenthesis, Ident],\n    [RightParenthesis, FunctionToken],\n    [RightParenthesis, Percentage],\n    [RightParenthesis, Dimension],\n    [RightParenthesis, Hash],\n    [RightParenthesis, '-']\n]);\n\nfunction createMap(pairs) {\n    const isWhiteSpaceRequired = new Set(\n        pairs.map(([prev, next]) => (code(prev) << 16 | code(next)))\n    );\n\n    return function(prevCode, type, value) {\n        const nextCode = code(type, value);\n        const nextCharCode = value.charCodeAt(0);\n        const emitWs =\n            (nextCharCode === HYPHENMINUS &&\n                type !== Ident &&\n                type !== FunctionToken &&\n                type !== CDC) ||\n            (nextCharCode === PLUSSIGN)\n                ? isWhiteSpaceRequired.has(prevCode << 16 | nextCharCode << 8)\n                : isWhiteSpaceRequired.has(prevCode << 16 | nextCode);\n\n        if (emitWs) {\n            this.emit(' ', WhiteSpace, true);\n        }\n\n        return nextCode;\n    };\n}\n\nexport const spec = createMap(specPairs);\nexport const safe = createMap(safePairs);\n","import { tokenize, Delim, WhiteSpace } from '../tokenizer/index.js';\nimport { generateSourceMap } from './sourceMap.js';\nimport * as tokenBefore from './token-before.js';\n\nconst REVERSESOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nfunction processChildren(node, delimeter) {\n    if (typeof delimeter === 'function') {\n        let prev = null;\n\n        node.children.forEach(node => {\n            if (prev !== null) {\n                delimeter.call(this, prev);\n            }\n\n            this.node(node);\n            prev = node;\n        });\n\n        return;\n    }\n\n    node.children.forEach(this.node, this);\n}\n\nfunction processChunk(chunk) {\n    tokenize(chunk, (type, start, end) => {\n        this.token(type, chunk.slice(start, end));\n    });\n}\n\nexport function createGenerator(config) {\n    const types = new Map();\n\n    for (let [name, item] of Object.entries(config.node)) {\n        const fn = item.generate || item;\n\n        if (typeof fn === 'function') {\n            types.set(name, item.generate || item);\n        }\n    }\n\n    return function(node, options) {\n        let buffer = '';\n        let prevCode = 0;\n        let handlers = {\n            node(node) {\n                if (types.has(node.type)) {\n                    types.get(node.type).call(publicApi, node);\n                } else {\n                    throw new Error('Unknown node type: ' + node.type);\n                }\n            },\n            tokenBefore: tokenBefore.safe,\n            token(type, value) {\n                prevCode = this.tokenBefore(prevCode, type, value);\n\n                this.emit(value, type, false);\n\n                if (type === Delim && value.charCodeAt(0) === REVERSESOLIDUS) {\n                    this.emit('\\n', WhiteSpace, true);\n                }\n            },\n            emit(value) {\n                buffer += value;\n            },\n            result() {\n                return buffer;\n            }\n        };\n\n        if (options) {\n            if (typeof options.decorator === 'function') {\n                handlers = options.decorator(handlers);\n            }\n\n            if (options.sourceMap) {\n                handlers = generateSourceMap(handlers);\n            }\n\n            if (options.mode in tokenBefore) {\n                handlers.tokenBefore = tokenBefore[options.mode];\n            }\n        }\n\n        const publicApi = {\n            node: (node) => handlers.node(node),\n            children: processChildren,\n            token: (type, value) => handlers.token(type, value),\n            tokenize: processChunk\n        };\n\n        handlers.node(node);\n\n        return handlers.result();\n    };\n};\n","const { hasOwnProperty } = Object.prototype;\nconst noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n    return function(node, item, list) {\n        if (node.type === type) {\n            fn.call(this, node, item, list);\n        }\n    };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const walkers = [];\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        let fieldTypes = structure[key];\n        const walker = {\n            name: key,\n            type: false,\n            nullable: false\n        };\n\n        if (!Array.isArray(fieldTypes)) {\n            fieldTypes = [fieldTypes];\n        }\n\n        for (const fieldType of fieldTypes) {\n            if (fieldType === null) {\n                walker.nullable = true;\n            } else if (typeof fieldType === 'string') {\n                walker.type = 'node';\n            } else if (Array.isArray(fieldType)) {\n                walker.type = 'list';\n            }\n        }\n\n        if (walker.type) {\n            walkers.push(walker);\n        }\n    }\n\n    if (walkers.length) {\n        return {\n            context: nodeType.walkContext,\n            fields: walkers\n        };\n    }\n\n    return null;\n}\n\nfunction getTypesFromConfig(config) {\n    const types = {};\n\n    for (const name in config.node) {\n        if (hasOwnProperty.call(config.node, name)) {\n            const nodeType = config.node[name];\n\n            if (!nodeType.structure) {\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\n            }\n\n            types[name] = getWalkersFromStructure(name, nodeType);\n        }\n    }\n\n    return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n    const fields = config.fields.slice();\n    const contextName = config.context;\n    const useContext = typeof contextName === 'string';\n\n    if (reverse) {\n        fields.reverse();\n    }\n\n    return function(node, context, walk, walkReducer) {\n        let prevContextValue;\n\n        if (useContext) {\n            prevContextValue = context[contextName];\n            context[contextName] = node;\n        }\n\n        for (const field of fields) {\n            const ref = node[field.name];\n\n            if (!field.nullable || ref) {\n                if (field.type === 'list') {\n                    const breakWalk = reverse\n                        ? ref.reduceRight(walkReducer, false)\n                        : ref.reduce(walkReducer, false);\n\n                    if (breakWalk) {\n                        return true;\n                    }\n                } else if (walk(ref)) {\n                    return true;\n                }\n            }\n        }\n\n        if (useContext) {\n            context[contextName] = prevContextValue;\n        }\n    };\n}\n\nfunction createFastTraveralMap({\n    StyleSheet,\n    Atrule,\n    Rule,\n    Block,\n    DeclarationList\n}) {\n    return {\n        Atrule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Rule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Declaration: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block,\n            DeclarationList\n        }\n    };\n}\n\nexport function createWalker(config) {\n    const types = getTypesFromConfig(config);\n    const iteratorsNatural = {};\n    const iteratorsReverse = {};\n    const breakWalk = Symbol('break-walk');\n    const skipNode = Symbol('skip-node');\n\n    for (const name in types) {\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\n        }\n    }\n\n    const fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n    const fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n    const walk = function(root, options) {\n        function walkNode(node, item, list) {\n            const enterRet = enter.call(context, node, item, list);\n\n            if (enterRet === breakWalk) {\n                return true;\n            }\n\n            if (enterRet === skipNode) {\n                return false;\n            }\n\n            if (iterators.hasOwnProperty(node.type)) {\n                if (iterators[node.type](node, context, walkNode, walkReducer)) {\n                    return true;\n                }\n            }\n\n            if (leave.call(context, node, item, list) === breakWalk) {\n                return true;\n            }\n\n            return false;\n        }\n\n        let enter = noop;\n        let leave = noop;\n        let iterators = iteratorsNatural;\n        let walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);\n        const context = {\n            break: breakWalk,\n            skip: skipNode,\n\n            root,\n            stylesheet: null,\n            atrule: null,\n            atrulePrelude: null,\n            rule: null,\n            selector: null,\n            block: null,\n            declaration: null,\n            function: null\n        };\n\n        if (typeof options === 'function') {\n            enter = options;\n        } else if (options) {\n            enter = ensureFunction(options.enter);\n            leave = ensureFunction(options.leave);\n\n            if (options.reverse) {\n                iterators = iteratorsReverse;\n            }\n\n            if (options.visit) {\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n                    iterators = options.reverse\n                        ? fastTraversalIteratorsReverse[options.visit]\n                        : fastTraversalIteratorsNatural[options.visit];\n                } else if (!types.hasOwnProperty(options.visit)) {\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).sort().join(', ') + ')');\n                }\n\n                enter = invokeForType(enter, options.visit);\n                leave = invokeForType(leave, options.visit);\n            }\n        }\n\n        if (enter === noop && leave === noop) {\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n        }\n\n        walkNode(root);\n    };\n\n    walk.break = breakWalk;\n    walk.skip = skipNode;\n\n    walk.find = function(ast, fn) {\n        let found = null;\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found = node;\n                return breakWalk;\n            }\n        });\n\n        return found;\n    };\n\n    walk.findLast = function(ast, fn) {\n        let found = null;\n\n        walk(ast, {\n            reverse: true,\n            enter(node, item, list) {\n                if (fn.call(this, node, item, list)) {\n                    found = node;\n                    return breakWalk;\n                }\n            }\n        });\n\n        return found;\n    };\n\n    walk.findAll = function(ast, fn) {\n        const found = [];\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found.push(node);\n            }\n        });\n\n        return found;\n    };\n\n    return walk;\n};\n","function noop(value) {\n    return value;\n}\n\nfunction generateMultiplier(multiplier) {\n    const { min, max, comma } = multiplier;\n\n    if (min === 0 && max === 0) {\n        return comma ? '#?' : '*';\n    }\n\n    if (min === 0 && max === 1) {\n        return '?';\n    }\n\n    if (min === 1 && max === 0) {\n        return comma ? '#' : '+';\n    }\n\n    if (min === 1 && max === 1) {\n        return '';\n    }\n\n    return (\n        (comma ? '#' : '') +\n        (min === max\n            ? '{' + min + '}'\n            : '{' + min + ',' + (max !== 0 ? max : '') + '}'\n        )\n    );\n}\n\nfunction generateTypeOpts(node) {\n    switch (node.type) {\n        case 'Range':\n            return (\n                ' [' +\n                (node.min === null ? '-∞' : node.min) +\n                ',' +\n                (node.max === null ? '∞' : node.max) +\n                ']'\n            );\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n    const combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n    const result = node.terms\n        .map(term => internalGenerate(term, decorate, forceBraces, compact))\n        .join(combinator);\n\n    if (node.explicit || forceBraces) {\n        return (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n    }\n\n    return result;\n}\n\nfunction internalGenerate(node, decorate, forceBraces, compact) {\n    let result;\n\n    switch (node.type) {\n        case 'Group':\n            result =\n                generateSequence(node, decorate, forceBraces, compact) +\n                (node.disallowEmpty ? '!' : '');\n            break;\n\n        case 'Multiplier':\n            // return since node is a composition\n            return (\n                internalGenerate(node.term, decorate, forceBraces, compact) +\n                decorate(generateMultiplier(node), node)\n            );\n\n        case 'Boolean':\n            result = '<boolean-expr[' + internalGenerate(node.term, decorate, forceBraces, compact) + ']>';\n            break;\n\n        case 'Type':\n            result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n            break;\n\n        case 'Property':\n            result = '<\\'' + node.name + '\\'>';\n            break;\n\n        case 'Keyword':\n            result = node.name;\n            break;\n\n        case 'AtKeyword':\n            result = '@' + node.name;\n            break;\n\n        case 'Function':\n            result = node.name + '(';\n            break;\n\n        case 'String':\n        case 'Token':\n            result = node.value;\n            break;\n\n        case 'Comma':\n            result = ',';\n            break;\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n\n    return decorate(result, node);\n}\n\nexport function generate(node, options) {\n    let decorate = noop;\n    let forceBraces = false;\n    let compact = false;\n\n    if (typeof options === 'function') {\n        decorate = options;\n    } else if (options) {\n        forceBraces = Boolean(options.forceBraces);\n        compact = Boolean(options.compact);\n        if (typeof options.decorate === 'function') {\n            decorate = options.decorate;\n        }\n    }\n\n    return internalGenerate(node, decorate, forceBraces, compact);\n};\n","import { createCustomError } from '../utils/create-custom-error.js';\nimport { generate } from '../definition-syntax/generate.js';\n\nconst defaultLoc = { offset: 0, line: 1, column: 1 };\n\nfunction locateMismatch(matchResult, node) {\n    const tokens = matchResult.tokens;\n    const longestMatch = matchResult.longestMatch;\n    const mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    const badNode = mismatchNode !== node ? mismatchNode : null;\n    let mismatchOffset = 0;\n    let mismatchLength = 0;\n    let entries = 0;\n    let css = '';\n    let start;\n    let end;\n\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i].value;\n\n        if (i === longestMatch) {\n            mismatchLength = token.length;\n            mismatchOffset = css.length;\n        }\n\n        if (badNode !== null && tokens[i].node === badNode) {\n            if (i <= longestMatch) {\n                entries++;\n            } else {\n                entries = 0;\n            }\n        }\n\n        css += token;\n    }\n\n    if (longestMatch === tokens.length || entries > 1) { // last\n        start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n        end = buildLoc(start);\n    } else {\n        start = fromLoc(badNode, 'start') ||\n            buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n        end = fromLoc(badNode, 'end') ||\n            buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n\n    return {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    };\n}\n\nfunction fromLoc(node, point) {\n    const value = node && node.loc && node.loc[point];\n\n    if (value) {\n        return 'line' in value ? buildLoc(value) : value;\n    }\n\n    return null;\n}\n\nfunction buildLoc({ offset, line, column }, extra) {\n    const loc = {\n        offset,\n        line,\n        column\n    };\n\n    if (extra) {\n        const lines = extra.split(/\\n|\\r\\n?|\\f/);\n\n        loc.offset += extra.length;\n        loc.line += lines.length - 1;\n        loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n\n    return loc;\n}\n\nexport const SyntaxReferenceError = function(type, referenceName) {\n    const error = createCustomError(\n        'SyntaxReferenceError',\n        type + (referenceName ? ' `' + referenceName + '`' : '')\n    );\n\n    error.reference = referenceName;\n\n    return error;\n};\n\nexport const SyntaxMatchError = function(message, syntax, node, matchResult) {\n    const error = createCustomError('SyntaxMatchError', message);\n    const {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    } = locateMismatch(matchResult, node);\n\n    error.rawMessage = message;\n    error.syntax = syntax ? generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' +\n        '  syntax: ' + error.syntax + '\\n' +\n        '   value: ' + (css || '<empty string>') + '\\n' +\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n\n    Object.assign(error, start);\n    error.loc = {\n        source: (node && node.loc && node.loc.source) || '<unknown>',\n        start,\n        end\n    };\n\n    return error;\n};\n","const keywords = new Map();\nconst properties = new Map();\nconst HYPHENMINUS = 45; // '-'.charCodeAt()\n\nexport const keyword = getKeywordDescriptor;\nexport const property = getPropertyDescriptor;\nexport const vendorPrefix = getVendorPrefix;\nexport function isCustomProperty(str, offset) {\n    offset = offset || 0;\n\n    return str.length - offset >= 2 &&\n           str.charCodeAt(offset) === HYPHENMINUS &&\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\n}\n\nfunction getVendorPrefix(str, offset) {\n    offset = offset || 0;\n\n    // verdor prefix should be at least 3 chars length\n    if (str.length - offset >= 3) {\n        // vendor prefix starts with hyper minus following non-hyper minus\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\n            // vendor prefix should contain a hyper minus at the ending\n            const secondDashIndex = str.indexOf('-', offset + 2);\n\n            if (secondDashIndex !== -1) {\n                return str.substring(offset, secondDashIndex + 1);\n            }\n        }\n    }\n\n    return '';\n}\n\nfunction getKeywordDescriptor(keyword) {\n    if (keywords.has(keyword)) {\n        return keywords.get(keyword);\n    }\n\n    const name = keyword.toLowerCase();\n    let descriptor = keywords.get(name);\n\n    if (descriptor === undefined) {\n        const custom = isCustomProperty(name, 0);\n        const vendor = !custom ? getVendorPrefix(name, 0) : '';\n        descriptor = Object.freeze({\n            basename: name.substr(vendor.length),\n            name,\n            prefix: vendor,\n            vendor,\n            custom\n        });\n    }\n\n    keywords.set(keyword, descriptor);\n\n    return descriptor;\n}\n\nfunction getPropertyDescriptor(property) {\n    if (properties.has(property)) {\n        return properties.get(property);\n    }\n\n    let name = property;\n    let hack = property[0];\n\n    if (hack === '/') {\n        hack = property[1] === '/' ? '//' : '/';\n    } else if (hack !== '_' &&\n               hack !== '*' &&\n               hack !== '$' &&\n               hack !== '#' &&\n               hack !== '+' &&\n               hack !== '&') {\n        hack = '';\n    }\n\n    const custom = isCustomProperty(name, hack.length);\n\n    // re-use result when possible (the same as for lower case)\n    if (!custom) {\n        name = name.toLowerCase();\n        if (properties.has(name)) {\n            const descriptor = properties.get(name);\n            properties.set(property, descriptor);\n            return descriptor;\n        }\n    }\n\n    const vendor = !custom ? getVendorPrefix(name, hack.length) : '';\n    const prefix = name.substr(0, hack.length + vendor.length);\n    const descriptor = Object.freeze({\n        basename: name.substr(prefix.length),\n        name: name.substr(hack.length),\n        hack,\n        vendor,\n        prefix,\n        custom\n    });\n\n    properties.set(property, descriptor);\n\n    return descriptor;\n}\n","// https://drafts.csswg.org/css-cascade-5/\nexport const cssWideKeywords = [\n    'initial',\n    'inherit',\n    'unset',\n    'revert',\n    'revert-layer'\n];\n","import {\n    isDigit,\n    cmpChar,\n    Delim,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction skipSC(token, offset, getNextToken) {\n    while (token !== null && (token.type === WhiteSpace || token.type === Comment)) {\n        token = getNextToken(++offset);\n    }\n\n    return offset;\n}\n\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\n    if (!token) {\n        return 0;\n    }\n\n    const code = token.value.charCodeAt(valueOffset);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            // Number sign is not allowed\n            return 0;\n        }\n        valueOffset++;\n    }\n\n    for (; valueOffset < token.value.length; valueOffset++) {\n        if (!isDigit(token.value.charCodeAt(valueOffset))) {\n            // Integer is expected\n            return 0;\n        }\n    }\n\n    return offset + 1;\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB(token, offset_, getNextToken) {\n    let sign = false;\n    let offset = skipSC(token, offset_, getNextToken);\n\n    token = getNextToken(offset);\n\n    if (token === null) {\n        return offset_;\n    }\n\n    if (token.type !== NumberToken) {\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\n            sign = true;\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\n            token = getNextToken(offset);\n\n            if (token === null || token.type !== NumberToken) {\n                return 0;\n            }\n        } else {\n            return offset_;\n        }\n    }\n\n    if (!sign) {\n        const code = token.value.charCodeAt(0);\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\n            // Number sign is expected\n            return 0;\n        }\n    }\n\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport default function anPlusB(token, getNextToken) {\n    /* eslint-disable brace-style*/\n    let offset = 0;\n\n    if (!token) {\n        return 0;\n    }\n\n    // <integer>\n    if (token.type === NumberToken) {\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (token.type === Ident && token.value.charCodeAt(0) === HYPHENMINUS) {\n        // expect 1st char is N\n        if (!cmpChar(token.value, 1, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // -n- <signless-integer>\n            case 3:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // <dashndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (token.type === Ident || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === Ident)) {\n        // just ignore a plus\n        if (token.type !== Ident) {\n            token = getNextToken(++offset);\n        }\n\n        if (token === null || !cmpChar(token.value, 0, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // '+'? n- <signless-integer>\n            case 2:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // '+'? <ndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (token.type === Dimension) {\n        let code = token.value.charCodeAt(0);\n        let sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\n        let i = sign;\n\n        for (; i < token.value.length; i++) {\n            if (!isDigit(token.value.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === sign) {\n            // Integer is expected\n            return 0;\n        }\n\n        if (!cmpChar(token.value, i, N)) {\n            return 0;\n        }\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === token.value.length) {\n            return consumeB(getNextToken(++offset), offset, getNextToken);\n        } else {\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\n                return 0;\n            }\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === token.value.length) {\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n            }\n            // <ndashdigit-dimension>\n            else {\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\n            }\n        }\n    }\n\n    return 0;\n};\n","import {\n    isHexDigit,\n    cmpChar,\n    Ident,\n    Delim,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\nconst U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction startsWith(token, code) {\n    return token.value.charCodeAt(0) === code;\n}\n\nfunction hexSequence(token, offset, allowDash) {\n    let hexlen = 0;\n\n    for (let pos = offset; pos < token.value.length; pos++) {\n        const code = token.value.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\n            hexSequence(token, offset + hexlen + 1, false);\n            return 6; // dissallow following question marks\n        }\n\n        if (!isHexDigit(code)) {\n            return 0; // not a hex digit\n        }\n\n        if (++hexlen > 6) {\n            return 0; // too many hex digits\n        };\n    }\n\n    return hexlen;\n}\n\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\n    if (!consumed) {\n        return 0; // nothing consumed\n    }\n\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\n        if (++consumed > 6) {\n            return 0; // too many question marks\n        }\n\n        length++;\n    }\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nexport default function urange(token, getNextToken) {\n    let length = 0;\n\n    // should start with `u` or `U`\n    if (token === null || token.type !== Ident || !cmpChar(token.value, 0, U)) {\n        return 0;\n    }\n\n    token = getNextToken(++length);\n    if (token === null) {\n        return 0;\n    }\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (isDelim(token, PLUSSIGN)) {\n        token = getNextToken(++length);\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === Ident) {\n            // u '+' <ident-token> '?'*\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\n        }\n\n        if (isDelim(token, QUESTIONMARK)) {\n            // u '+' '?'+\n            return withQuestionMarkSequence(1, ++length, getNextToken);\n        }\n\n        // Hex digit or question mark is expected\n        return 0;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (token.type === NumberToken) {\n        const consumedHexLength = hexSequence(token, 1, true);\n        if (consumedHexLength === 0) {\n            return 0;\n        }\n\n        token = getNextToken(++length);\n        if (token === null) {\n            // u <number-token> <eof>\n            return length;\n        }\n\n        if (token.type === Dimension || token.type === NumberToken) {\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\n                return 0;\n            }\n\n            return length + 1;\n        }\n\n        // u <number-token> '?'*\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\n    }\n\n    // u <dimension-token> '?'*\n    if (token.type === Dimension) {\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\n    }\n\n    return 0;\n};\n","import { cssWideKeywords } from './generic-const.js';\nimport anPlusB from './generic-an-plus-b.js';\nimport urange from './generic-urange.js';\nimport {\n    isIdentifierStart,\n    isHexDigit,\n    isDigit,\n    cmpStr,\n    consumeNumber,\n\n    Ident,\n    Function as FunctionToken,\n    AtKeyword,\n    Hash,\n    String as StringToken,\n    BadString,\n    Url,\n    BadUrl,\n    Delim,\n    Number as NumberToken,\n    Percentage,\n    Dimension,\n    WhiteSpace,\n    CDO,\n    CDC,\n    Colon,\n    Semicolon,\n    Comma,\n    LeftSquareBracket,\n    RightSquareBracket,\n    LeftParenthesis,\n    RightParenthesis,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../tokenizer/index.js';\n\nconst calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\nconst balancePair = new Map([\n    [FunctionToken, RightParenthesis],\n    [LeftParenthesis, RightParenthesis],\n    [LeftSquareBracket, RightSquareBracket],\n    [LeftCurlyBracket, RightCurlyBracket]\n]);\n\n// safe char code getter\nfunction charCodeAt(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n    return cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n    for (let i = 0; i < expected.length; i++) {\n        if (eqStr(actual, expected[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n        return false;\n    }\n\n    return (\n        charCodeAt(str, offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\n        isDigit(charCodeAt(str, offset + 1))\n    );\n}\n\nfunction outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n        const num = Number(\n            numEnd !== undefined && numEnd !== value.length\n                ? value.substr(0, numEnd)\n                : value\n        );\n\n        if (isNaN(num)) {\n            return true;\n        }\n\n        // FIXME: when opts.min is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.min !== null && num < opts.min && typeof opts.min !== 'string') {\n            return true;\n        }\n\n        // FIXME: when opts.max is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.max !== null && num > opts.max && typeof opts.max !== 'string') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // balanced token consuming\n    scan:\n    do {\n        switch (token.type) {\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n\n                if (balanceStash.length === 0) {\n                    length++;\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n    return function(token, getNextToken, opts) {\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === FunctionToken && eqStrAny(token.value, calcFunctionNames)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\nfunction tokenType(expectedTokenType) {\n    return function(token) {\n        if (token === null || token.type !== expectedTokenType) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    const name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n        return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n        return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n    // in that property’s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-values-4/#dashed-idents\n// The <dashed-ident> production is a <custom-ident>, with all the case-sensitivity that implies,\n// with the additional restriction that it must start with two dashes (U+002D HYPHEN-MINUS).\nfunction dashedIdent(token) {\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    // ... must start with two dashes (U+002D HYPHEN-MINUS)\n    if (charCodeAt(token.value, 0) !== 0x002D || charCodeAt(token.value, 1) !== 0x002D) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any <dashed-ident>\n// (a valid identifier that starts with two dashes), except -- itself, which is reserved for future use by CSS.\nfunction customPropertyName(token) {\n    // ... it’s defined as any <dashed-ident>\n    if (!dashedIdent(token)) {\n        return 0;\n    }\n\n    // ... except -- itself, which is reserved for future use by CSS\n    if (token.value === '--') {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    const length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n        return 0;\n    }\n\n    for (let i = 1; i < length; i++) {\n        if (!isHexDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nfunction idSelector(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    if (!isIdentifierStart(charCodeAt(token.value, 1), charCodeAt(token.value, 2), charCodeAt(token.value, 3))) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence does not contain ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            // ... or top-level <semicolon-token> tokens\n            case Semicolon:\n                if (balanceCloseType === 0) {\n                    break scan;\n                }\n\n                break;\n\n            // ... or <delim-token> tokens with a value of \"!\"\n            case Delim:\n                if (balanceCloseType === 0 && token.value === '!') {\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n    if (type) {\n        type = new Set(type);\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token === null || token.type !== Dimension) {\n            return 0;\n        }\n\n        const numberEnd = consumeNumber(token.value, 0);\n\n        // check unit\n        if (type !== null) {\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n            const reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n            const unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\n                ? token.value.substr(numberEnd)\n                : token.value.substring(numberEnd, reverseSolidusOffset);\n\n            if (type.has(unit.toLowerCase()) === false) {\n                return 0;\n            }\n        }\n\n        // check range if specified\n        if (outOfRange(opts, token.value, numberEnd)) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Percentage\n//\n\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== Percentage) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n    if (typeof next !== 'function') {\n        next = function() {\n            return 0;\n        };\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token !== null && token.type === NumberToken) {\n            if (Number(token.value) === 0) {\n                return 1;\n            }\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\n// § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n    if (token === null) {\n        return 0;\n    }\n\n    const numberEnd = consumeNumber(token.value, 0);\n    const isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== NumberToken) {\n        return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n    let i = charCodeAt(token.value, 0) === 0x002B ||       // U+002B PLUS SIGN (+)\n            charCodeAt(token.value, 0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n        if (!isDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// token types\nexport const tokenTypes = {\n    'ident-token': tokenType(Ident),\n    'function-token': tokenType(FunctionToken),\n    'at-keyword-token': tokenType(AtKeyword),\n    'hash-token': tokenType(Hash),\n    'string-token': tokenType(StringToken),\n    'bad-string-token': tokenType(BadString),\n    'url-token': tokenType(Url),\n    'bad-url-token': tokenType(BadUrl),\n    'delim-token': tokenType(Delim),\n    'number-token': tokenType(NumberToken),\n    'percentage-token': tokenType(Percentage),\n    'dimension-token': tokenType(Dimension),\n    'whitespace-token': tokenType(WhiteSpace),\n    'CDO-token': tokenType(CDO),\n    'CDC-token': tokenType(CDC),\n    'colon-token': tokenType(Colon),\n    'semicolon-token': tokenType(Semicolon),\n    'comma-token': tokenType(Comma),\n    '[-token': tokenType(LeftSquareBracket),\n    ']-token': tokenType(RightSquareBracket),\n    '(-token': tokenType(LeftParenthesis),\n    ')-token': tokenType(RightParenthesis),\n    '{-token': tokenType(LeftCurlyBracket),\n    '}-token': tokenType(RightCurlyBracket)\n};\n\n// token production types\nexport const productionTypes = {\n    // token type aliases\n    'string': tokenType(StringToken),\n    'ident': tokenType(Ident),\n\n    // percentage\n    'percentage': calc(percentage),\n\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n\n    // complex types\n    'custom-ident': customIdent,\n    'dashed-ident': dashedIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector, // element( <id-selector> )\n    'an-plus-b': anPlusB,\n    'urange': urange,\n    'declaration-value': declarationValue,\n    'any-value': anyValue\n};\n\nexport const unitGroups = [\n    'length',\n    'angle',\n    'time',\n    'frequency',\n    'resolution',\n    'flex',\n    'decibel',\n    'semitones'\n];\n\n// dimensions types depend on units set\nexport function createDemensionTypes(units) {\n    const {\n        angle,\n        decibel,\n        frequency,\n        flex,\n        length,\n        resolution,\n        semitones,\n        time\n    } = units || {};\n\n    return {\n        'dimension': calc(dimension(null)),\n        'angle': calc(dimension(angle)),\n        'decibel': calc(dimension(decibel)),\n        'frequency': calc(dimension(frequency)),\n        'flex': calc(dimension(flex)),\n        'length': calc(zero(dimension(length))),\n        'resolution': calc(dimension(resolution)),\n        'semitones': calc(dimension(semitones)),\n        'time': calc(dimension(time))\n    };\n}\n\nexport function createGenericTypes(units) {\n    return {\n        ...tokenTypes,\n        ...productionTypes,\n        ...createDemensionTypes(units)\n    };\n};\n","export const length = [\n    // absolute length units https://www.w3.org/TR/css-values-3/#lengths\n    'cm', 'mm', 'q', 'in', 'pt', 'pc', 'px',\n    // font-relative length units https://drafts.csswg.org/css-values-4/#font-relative-lengths\n    'em', 'rem',\n    'ex', 'rex',\n    'cap', 'rcap',\n    'ch', 'rch',\n    'ic', 'ric',\n    'lh', 'rlh',\n    // viewport-percentage lengths https://drafts.csswg.org/css-values-4/#viewport-relative-lengths\n    'vw', 'svw', 'lvw', 'dvw',\n    'vh', 'svh', 'lvh', 'dvh',\n    'vi', 'svi', 'lvi', 'dvi',\n    'vb', 'svb', 'lvb', 'dvb',\n    'vmin', 'svmin', 'lvmin', 'dvmin',\n    'vmax', 'svmax', 'lvmax', 'dvmax',\n    // container relative lengths https://drafts.csswg.org/css-contain-3/#container-lengths\n    'cqw', 'cqh', 'cqi', 'cqb', 'cqmin', 'cqmax'\n];\nexport const angle = ['deg', 'grad', 'rad', 'turn'];    // https://www.w3.org/TR/css-values-3/#angles\nexport const time = ['s', 'ms'];                        // https://www.w3.org/TR/css-values-3/#time\nexport const frequency = ['hz', 'khz'];                 // https://www.w3.org/TR/css-values-3/#frequency\nexport const resolution = ['dpi', 'dpcm', 'dppx', 'x']; // https://www.w3.org/TR/css-values-3/#resolution\nexport const flex = ['fr'];                             // https://drafts.csswg.org/css-grid/#fr-unit\nexport const decibel = ['db'];                          // https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nexport const semitones = ['st'];                        // https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\n","import { createCustomError } from '../utils/create-custom-error.js';\n\nexport function SyntaxError(message, input, offset) {\n    return Object.assign(createCustomError('SyntaxError', message), {\n        input,\n        offset,\n        rawMessage: message,\n        message: message + '\\n' +\n            '  ' + input + '\\n' +\n            '--' + new Array((offset || input.length) + 1).join('-') + '^'\n    });\n};\n","import { SyntaxError } from './SyntaxError.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\nconst NAME_CHAR = new Uint8Array(128).map((_, idx) =>\n    /[a-zA-Z0-9\\-]/.test(String.fromCharCode(idx)) ? 1 : 0\n);\n\nexport class Scanner {\n    constructor(str) {\n        this.str = str;\n        this.pos = 0;\n    }\n\n    charCodeAt(pos) {\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n    }\n    charCode() {\n        return this.charCodeAt(this.pos);\n    }\n    isNameCharCode(code = this.charCode()) {\n        return code < 128 && NAME_CHAR[code] === 1;\n    }\n    nextCharCode() {\n        return this.charCodeAt(this.pos + 1);\n    }\n    nextNonWsCode(pos) {\n        return this.charCodeAt(this.findWsEnd(pos));\n    }\n    skipWs() {\n        this.pos = this.findWsEnd(this.pos);\n    }\n    findWsEnd(pos) {\n        for (; pos < this.str.length; pos++) {\n            const code = this.str.charCodeAt(pos);\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n                break;\n            }\n        }\n\n        return pos;\n    }\n    substringToPos(end) {\n        return this.str.substring(this.pos, this.pos = end);\n    }\n    eat(code) {\n        if (this.charCode() !== code) {\n            this.error('Expect `' + String.fromCharCode(code) + '`');\n        }\n\n        this.pos++;\n    }\n    peek() {\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n    }\n    error(message) {\n        throw new SyntaxError(message, this.str, this.pos);\n    }\n\n    scanSpaces() {\n        return this.substringToPos(this.findWsEnd(this.pos));\n    }\n    scanWord() {\n        let end = this.pos;\n\n        for (; end < this.str.length; end++) {\n            const code = this.str.charCodeAt(end);\n            if (code >= 128 || NAME_CHAR[code] === 0) {\n                break;\n            }\n        }\n\n        if (this.pos === end) {\n            this.error('Expect a keyword');\n        }\n\n        return this.substringToPos(end);\n    }\n    scanNumber() {\n        let end = this.pos;\n\n        for (; end < this.str.length; end++) {\n            const code = this.str.charCodeAt(end);\n\n            if (code < 48 || code > 57) {\n                break;\n            }\n        }\n\n        if (this.pos === end) {\n            this.error('Expect a number');\n        }\n\n        return this.substringToPos(end);\n    }\n    scanString() {\n        const end = this.str.indexOf('\\'', this.pos + 1);\n\n        if (end === -1) {\n            this.pos = this.str.length;\n            this.error('Expect an apostrophe');\n        }\n\n        return this.substringToPos(end + 1);\n    }\n};\n","import { Scanner } from './scanner.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\nconst EXCLAMATIONMARK = 33;    // !\nconst NUMBERSIGN = 35;         // #\nconst AMPERSAND = 38;          // &\nconst APOSTROPHE = 39;         // '\nconst LEFTPARENTHESIS = 40;    // (\nconst RIGHTPARENTHESIS = 41;   // )\nconst ASTERISK = 42;           // *\nconst PLUSSIGN = 43;           // +\nconst COMMA = 44;              // ,\nconst HYPERMINUS = 45;         // -\nconst LESSTHANSIGN = 60;       // <\nconst GREATERTHANSIGN = 62;    // >\nconst QUESTIONMARK = 63;       // ?\nconst COMMERCIALAT = 64;       // @\nconst LEFTSQUAREBRACKET = 91;  // [\nconst RIGHTSQUAREBRACKET = 93; // ]\nconst LEFTCURLYBRACKET = 123;  // {\nconst VERTICALLINE = 124;      // |\nconst RIGHTCURLYBRACKET = 125; // }\nconst INFINITY = 8734;         // ∞\nconst COMBINATOR_PRECEDENCE = {\n    ' ': 1,\n    '&&': 2,\n    '||': 3,\n    '|': 4\n};\n\nfunction readMultiplierRange(scanner) {\n    let min = null;\n    let max = null;\n\n    scanner.eat(LEFTCURLYBRACKET);\n    scanner.skipWs();\n\n    min = scanner.scanNumber(scanner);\n    scanner.skipWs();\n\n    if (scanner.charCode() === COMMA) {\n        scanner.pos++;\n        scanner.skipWs();\n\n        if (scanner.charCode() !== RIGHTCURLYBRACKET) {\n            max = scanner.scanNumber(scanner);\n            scanner.skipWs();\n        }\n    } else {\n        max = min;\n    }\n\n    scanner.eat(RIGHTCURLYBRACKET);\n\n    return {\n        min: Number(min),\n        max: max ? Number(max) : 0\n    };\n}\n\nfunction readMultiplier(scanner) {\n    let range = null;\n    let comma = false;\n\n    switch (scanner.charCode()) {\n        case ASTERISK:\n            scanner.pos++;\n\n            range = {\n                min: 0,\n                max: 0\n            };\n\n            break;\n\n        case PLUSSIGN:\n            scanner.pos++;\n\n            range = {\n                min: 1,\n                max: 0\n            };\n\n            break;\n\n        case QUESTIONMARK:\n            scanner.pos++;\n\n            range = {\n                min: 0,\n                max: 1\n            };\n\n            break;\n\n        case NUMBERSIGN:\n            scanner.pos++;\n\n            comma = true;\n\n            if (scanner.charCode() === LEFTCURLYBRACKET) {\n                range = readMultiplierRange(scanner);\n            } else if (scanner.charCode() === QUESTIONMARK) {\n                // https://www.w3.org/TR/css-values-4/#component-multipliers\n                // > the # and ? multipliers may be stacked as #?\n                // In this case just treat \"#?\" as a single multiplier\n                // { min: 0, max: 0, comma: true }\n                scanner.pos++;\n                range = {\n                    min: 0,\n                    max: 0\n                };\n            } else {\n                range = {\n                    min: 1,\n                    max: 0\n                };\n            }\n\n            break;\n\n        case LEFTCURLYBRACKET:\n            range = readMultiplierRange(scanner);\n            break;\n\n        default:\n            return null;\n    }\n\n    return {\n        type: 'Multiplier',\n        comma,\n        min: range.min,\n        max: range.max,\n        term: null\n    };\n}\n\nfunction maybeMultiplied(scanner, node) {\n    const multiplier = readMultiplier(scanner);\n\n    if (multiplier !== null) {\n        multiplier.term = node;\n\n        // https://www.w3.org/TR/css-values-4/#component-multipliers\n        // > The + and # multipliers may be stacked as +#;\n        // Represent \"+#\" as nested multipliers:\n        // { ...<multiplier #>,\n        //   term: {\n        //     ...<multipler +>,\n        //     term: node\n        //   }\n        // }\n        if (scanner.charCode() === NUMBERSIGN &&\n            scanner.charCodeAt(scanner.pos - 1) === PLUSSIGN) {\n            return maybeMultiplied(scanner, multiplier);\n        }\n\n        return multiplier;\n    }\n\n    return node;\n}\n\nfunction maybeToken(scanner) {\n    const ch = scanner.peek();\n\n    if (ch === '') {\n        return null;\n    }\n\n    return maybeMultiplied(scanner, {\n        type: 'Token',\n        value: ch\n    });\n}\n\nfunction readProperty(scanner) {\n    let name;\n\n    scanner.eat(LESSTHANSIGN);\n    scanner.eat(APOSTROPHE);\n\n    name = scanner.scanWord();\n\n    scanner.eat(APOSTROPHE);\n    scanner.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(scanner, {\n        type: 'Property',\n        name\n    });\n}\n\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\n// 4.1. Range Restrictions and Range Definition Notation\n//\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\n// range notation—[min,max]—within the angle brackets, after the identifying keyword,\n// indicating a closed range between (and including) min and max.\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\nfunction readTypeRange(scanner) {\n    // use null for Infinity to make AST format JSON serializable/deserializable\n    let min = null; // -Infinity\n    let max = null; // Infinity\n    let sign = 1;\n\n    scanner.eat(LEFTSQUAREBRACKET);\n\n    if (scanner.charCode() === HYPERMINUS) {\n        scanner.peek();\n        sign = -1;\n    }\n\n    if (sign == -1 && scanner.charCode() === INFINITY) {\n        scanner.peek();\n    } else {\n        min = sign * Number(scanner.scanNumber(scanner));\n\n        if (scanner.isNameCharCode()) {\n            min += scanner.scanWord();\n        }\n    }\n\n    scanner.skipWs();\n    scanner.eat(COMMA);\n    scanner.skipWs();\n\n    if (scanner.charCode() === INFINITY) {\n        scanner.peek();\n    } else {\n        sign = 1;\n\n        if (scanner.charCode() === HYPERMINUS) {\n            scanner.peek();\n            sign = -1;\n        }\n\n        max = sign * Number(scanner.scanNumber(scanner));\n\n        if (scanner.isNameCharCode()) {\n            max += scanner.scanWord();\n        }\n    }\n\n    scanner.eat(RIGHTSQUAREBRACKET);\n\n    return {\n        type: 'Range',\n        min,\n        max\n    };\n}\n\nfunction readType(scanner) {\n    let name;\n    let opts = null;\n\n    scanner.eat(LESSTHANSIGN);\n    name = scanner.scanWord();\n\n    // https://drafts.csswg.org/css-values-5/#boolean\n    if (name === 'boolean-expr') {\n        scanner.eat(LEFTSQUAREBRACKET);\n\n        const implicitGroup = readImplicitGroup(scanner, RIGHTSQUAREBRACKET);\n\n        scanner.eat(RIGHTSQUAREBRACKET);\n        scanner.eat(GREATERTHANSIGN);\n\n        return maybeMultiplied(scanner, {\n            type: 'Boolean',\n            term: implicitGroup.terms.length === 1\n                ? implicitGroup.terms[0]\n                : implicitGroup\n        });\n    }\n\n    if (scanner.charCode() === LEFTPARENTHESIS &&\n        scanner.nextCharCode() === RIGHTPARENTHESIS) {\n        scanner.pos += 2;\n        name += '()';\n    }\n\n    if (scanner.charCodeAt(scanner.findWsEnd(scanner.pos)) === LEFTSQUAREBRACKET) {\n        scanner.skipWs();\n        opts = readTypeRange(scanner);\n    }\n\n    scanner.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(scanner, {\n        type: 'Type',\n        name,\n        opts\n    });\n}\n\nfunction readKeywordOrFunction(scanner) {\n    const name = scanner.scanWord();\n\n    if (scanner.charCode() === LEFTPARENTHESIS) {\n        scanner.pos++;\n\n        return {\n            type: 'Function',\n            name\n        };\n    }\n\n    return maybeMultiplied(scanner, {\n        type: 'Keyword',\n        name\n    });\n}\n\nfunction regroupTerms(terms, combinators) {\n    function createGroup(terms, combinator) {\n        return {\n            type: 'Group',\n            terms,\n            combinator,\n            disallowEmpty: false,\n            explicit: false\n        };\n    }\n\n    let combinator;\n\n    combinators = Object.keys(combinators)\n        .sort((a, b) => COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b]);\n\n    while (combinators.length > 0) {\n        combinator = combinators.shift();\n\n        let i = 0;\n        let subgroupStart = 0;\n\n        for (; i < terms.length; i++) {\n            const term = terms[i];\n\n            if (term.type === 'Combinator') {\n                if (term.value === combinator) {\n                    if (subgroupStart === -1) {\n                        subgroupStart = i - 1;\n                    }\n                    terms.splice(i, 1);\n                    i--;\n                } else {\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\n                        terms.splice(\n                            subgroupStart,\n                            i - subgroupStart,\n                            createGroup(terms.slice(subgroupStart, i), combinator)\n                        );\n                        i = subgroupStart + 1;\n                    }\n                    subgroupStart = -1;\n                }\n            }\n        }\n\n        if (subgroupStart !== -1 && combinators.length) {\n            terms.splice(\n                subgroupStart,\n                i - subgroupStart,\n                createGroup(terms.slice(subgroupStart, i), combinator)\n            );\n        }\n    }\n\n    return combinator;\n}\n\nfunction readImplicitGroup(scanner, stopCharCode) {\n    const combinators = Object.create(null);\n    const terms = [];\n    let token;\n    let prevToken = null;\n    let prevTokenPos = scanner.pos;\n\n    while (scanner.charCode() !== stopCharCode && (token = peek(scanner, stopCharCode))) {\n        if (token.type !== 'Spaces') {\n            if (token.type === 'Combinator') {\n                // check for combinator in group beginning and double combinator sequence\n                if (prevToken === null || prevToken.type === 'Combinator') {\n                    scanner.pos = prevTokenPos;\n                    scanner.error('Unexpected combinator');\n                }\n\n                combinators[token.value] = true;\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\n                combinators[' '] = true;  // a b\n                terms.push({\n                    type: 'Combinator',\n                    value: ' '\n                });\n            }\n\n            terms.push(token);\n            prevToken = token;\n            prevTokenPos = scanner.pos;\n        }\n    }\n\n    // check for combinator in group ending\n    if (prevToken !== null && prevToken.type === 'Combinator') {\n        scanner.pos -= prevTokenPos;\n        scanner.error('Unexpected combinator');\n    }\n\n    return {\n        type: 'Group',\n        terms,\n        combinator: regroupTerms(terms, combinators) || ' ',\n        disallowEmpty: false,\n        explicit: false\n    };\n}\n\nfunction readGroup(scanner, stopCharCode) {\n    let result;\n\n    scanner.eat(LEFTSQUAREBRACKET);\n    result = readImplicitGroup(scanner, stopCharCode);\n    scanner.eat(RIGHTSQUAREBRACKET);\n\n    result.explicit = true;\n\n    if (scanner.charCode() === EXCLAMATIONMARK) {\n        scanner.pos++;\n        result.disallowEmpty = true;\n    }\n\n    return result;\n}\n\nfunction peek(scanner, stopCharCode) {\n    let code = scanner.charCode();\n\n    switch (code) {\n        case RIGHTSQUAREBRACKET:\n            // don't eat, stop scan a group\n            break;\n\n        case LEFTSQUAREBRACKET:\n            return maybeMultiplied(scanner, readGroup(scanner, stopCharCode));\n\n        case LESSTHANSIGN:\n            return scanner.nextCharCode() === APOSTROPHE\n                ? readProperty(scanner)\n                : readType(scanner);\n\n        case VERTICALLINE:\n            return {\n                type: 'Combinator',\n                value: scanner.substringToPos(\n                    scanner.pos + (scanner.nextCharCode() === VERTICALLINE ? 2 : 1)\n                )\n            };\n\n        case AMPERSAND:\n            scanner.pos++;\n            scanner.eat(AMPERSAND);\n\n            return {\n                type: 'Combinator',\n                value: '&&'\n            };\n\n        case COMMA:\n            scanner.pos++;\n            return {\n                type: 'Comma'\n            };\n\n        case APOSTROPHE:\n            return maybeMultiplied(scanner, {\n                type: 'String',\n                value: scanner.scanString()\n            });\n\n        case SPACE:\n        case TAB:\n        case N:\n        case R:\n        case F:\n            return {\n                type: 'Spaces',\n                value: scanner.scanSpaces()\n            };\n\n        case COMMERCIALAT:\n            code = scanner.nextCharCode();\n\n            if (scanner.isNameCharCode(code)) {\n                scanner.pos++;\n                return {\n                    type: 'AtKeyword',\n                    name: scanner.scanWord()\n                };\n            }\n\n            return maybeToken(scanner);\n\n        case ASTERISK:\n        case PLUSSIGN:\n        case QUESTIONMARK:\n        case NUMBERSIGN:\n        case EXCLAMATIONMARK:\n            // prohibited tokens (used as a multiplier start)\n            break;\n\n        case LEFTCURLYBRACKET:\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\n            // check next char isn't a number, because it's likely a disjoined multiplier\n            code = scanner.nextCharCode();\n\n            if (code < 48 || code > 57) {\n                return maybeToken(scanner);\n            }\n\n            break;\n\n        default:\n            if (scanner.isNameCharCode(code)) {\n                return readKeywordOrFunction(scanner);\n            }\n\n            return maybeToken(scanner);\n    }\n}\n\nexport function parse(source) {\n    const scanner = new Scanner(source);\n    const result = readImplicitGroup(scanner);\n\n    if (scanner.pos !== source.length) {\n        scanner.error('Unexpected input');\n    }\n\n    // reduce redundant groups with single group term\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\n        return result.terms[0];\n    }\n\n    return result;\n};\n","const noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nexport function walk(node, options, context) {\n    function walk(node) {\n        enter.call(context, node);\n\n        switch (node.type) {\n            case 'Group':\n                node.terms.forEach(walk);\n                break;\n\n            case 'Multiplier':\n            case 'Boolean':\n                walk(node.term);\n                break;\n\n            case 'Type':\n            case 'Property':\n            case 'Keyword':\n            case 'AtKeyword':\n            case 'Function':\n            case 'String':\n            case 'Token':\n            case 'Comma':\n                break;\n\n            default:\n                throw new Error('Unknown type: ' + node.type);\n        }\n\n        leave.call(context, node);\n    }\n\n    let enter = noop;\n    let leave = noop;\n\n    if (typeof options === 'function') {\n        enter = options;\n    } else if (options) {\n        enter = ensureFunction(options.enter);\n        leave = ensureFunction(options.leave);\n    }\n\n    if (enter === noop && leave === noop) {\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walk(node, context);\n};\n","import { tokenize } from '../tokenizer/index.js';\n\nconst astToTokens = {\n    decorator(handlers) {\n        const tokens = [];\n        let curNode = null;\n\n        return {\n            ...handlers,\n            node(node) {\n                const tmp = curNode;\n                curNode = node;\n                handlers.node.call(this, node);\n                curNode = tmp;\n            },\n            emit(value, type, auto) {\n                tokens.push({\n                    type,\n                    value,\n                    node: auto ? null : curNode\n                });\n            },\n            result() {\n                return tokens;\n            }\n        };\n    }\n};\n\nfunction stringToTokens(str) {\n    const tokens = [];\n\n    tokenize(str, (type, start, end) =>\n        tokens.push({\n            type,\n            value: str.slice(start, end),\n            node: null\n        })\n    );\n\n    return tokens;\n}\n\nexport default function(value, syntax) {\n    if (typeof value === 'string') {\n        return stringToTokens(value);\n    }\n\n    return syntax.generate(value, astToTokens);\n};\n","import { parse } from '../definition-syntax/parse.js';\n\nexport const MATCH = { type: 'Match' };\nexport const MISMATCH = { type: 'Mismatch' };\nexport const DISALLOW_EMPTY = { type: 'DisallowEmpty' };\n\nconst LEFTPARENTHESIS = 40;  // (\nconst RIGHTPARENTHESIS = 41; // )\n\nfunction createCondition(match, thenBranch, elseBranch) {\n    // reduce node count\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\n        return match;\n    }\n\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\n        return match;\n    }\n\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\n        thenBranch = match.then;\n        match = match.match;\n    }\n\n    return {\n        type: 'If',\n        match,\n        then: thenBranch,\n        else: elseBranch\n    };\n}\n\nfunction isFunctionType(name) {\n    return (\n        name.length > 2 &&\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\n    );\n}\n\nfunction isEnumCapatible(term) {\n    return (\n        term.type === 'Keyword' ||\n        term.type === 'AtKeyword' ||\n        term.type === 'Function' ||\n        term.type === 'Type' && isFunctionType(term.name)\n    );\n}\n\nfunction groupNode(terms, combinator = ' ', explicit = false) {\n    return {\n        type: 'Group',\n        terms,\n        combinator,\n        disallowEmpty: false,\n        explicit\n    };\n}\n\nfunction replaceTypeInGraph(node, replacements, visited = new Set()) {\n    if (!visited.has(node)) {\n        visited.add(node);\n\n        switch (node.type) {\n            case 'If':\n                node.match = replaceTypeInGraph(node.match, replacements, visited);\n                node.then = replaceTypeInGraph(node.then, replacements, visited);\n                node.else = replaceTypeInGraph(node.else, replacements, visited);\n                break;\n\n            case 'Type':\n                return replacements[node.name] || node;\n        }\n    }\n\n    return node;\n}\n\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\n    switch (combinator) {\n        case ' ': {\n            // Juxtaposing components means that all of them must occur, in the given order.\n            //\n            // a b c\n            // =\n            // match a\n            //   then match b\n            //     then match c\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            //   else MISMATCH\n            let result = MATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n\n                result = createCondition(\n                    term,\n                    result,\n                    MISMATCH\n                );\n            };\n\n            return result;\n        }\n\n        case '|': {\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\n            //\n            // a | b | c\n            // =\n            // match a\n            //   then MATCH\n            //   else match b\n            //     then MATCH\n            //     else match c\n            //       then MATCH\n            //       else MISMATCH\n\n            let result = MISMATCH;\n            let map = null;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                let term = terms[i];\n\n                // reduce sequence of keywords into a Enum\n                if (isEnumCapatible(term)) {\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\n                        map = Object.create(null);\n                        result = createCondition(\n                            {\n                                type: 'Enum',\n                                map\n                            },\n                            MATCH,\n                            result\n                        );\n                    }\n\n                    if (map !== null) {\n                        const key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\n                        if (key in map === false) {\n                            map[key] = term;\n                            continue;\n                        }\n                    }\n                }\n\n                map = null;\n\n                // create a new conditonal node\n                result = createCondition(\n                    term,\n                    MATCH,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '&&': {\n            // A double ampersand (&&) separates two or more components,\n            // all of which must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since &&-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: true\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a && b && c\n            // =\n            // match a\n            //   then [b && c]\n            //   else match b\n            //     then [a && c]\n            //     else match c\n            //       then [a && b]\n            //       else MISMATCH\n            //\n            // a && b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MISMATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            let result = MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        false\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '||': {\n            // A double bar (||) separates two or more options:\n            // one or more of them must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since ||-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: false\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a || b || c\n            // =\n            // match a\n            //   then [b || c]\n            //   else match b\n            //     then [a || c]\n            //     else match c\n            //       then [a || b]\n            //       else MISMATCH\n            //\n            // a || b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MATCH\n            //     else MISMATCH\n            let result = atLeastOneTermMatched ? MATCH : MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        true\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n    }\n}\n\nfunction buildMultiplierMatchGraph(node) {\n    let result = MATCH;\n    let matchTerm = buildMatchGraphInternal(node.term);\n\n    if (node.max === 0) {\n        // disable repeating of empty match to prevent infinite loop\n        matchTerm = createCondition(\n            matchTerm,\n            DISALLOW_EMPTY,\n            MISMATCH\n        );\n\n        // an occurrence count is not limited, make a cycle;\n        // to collect more terms on each following matching mismatch\n        result = createCondition(\n            matchTerm,\n            null, // will be a loop\n            MISMATCH\n        );\n\n        result.then = createCondition(\n            MATCH,\n            MATCH,\n            result // make a loop\n        );\n\n        if (node.comma) {\n            result.then.else = createCondition(\n                { type: 'Comma', syntax: node },\n                result,\n                MISMATCH\n            );\n        }\n    } else {\n        // create a match node chain for [min .. max] interval with optional matches\n        for (let i = node.min || 1; i <= node.max; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                createCondition(\n                    MATCH,\n                    MATCH,\n                    result\n                ),\n                MISMATCH\n            );\n        }\n    }\n\n    if (node.min === 0) {\n        // allow zero match\n        result = createCondition(\n            MATCH,\n            MATCH,\n            result\n        );\n    } else {\n        // create a match node chain to collect [0 ... min - 1] required matches\n        for (let i = 0; i < node.min - 1; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                result,\n                MISMATCH\n            );\n        }\n    }\n\n    return result;\n}\n\nfunction buildMatchGraphInternal(node) {\n    if (typeof node === 'function') {\n        return {\n            type: 'Generic',\n            fn: node\n        };\n    }\n\n    switch (node.type) {\n        case 'Group': {\n            let result = buildGroupMatchGraph(\n                node.combinator,\n                node.terms.map(buildMatchGraphInternal),\n                false\n            );\n\n            if (node.disallowEmpty) {\n                result = createCondition(\n                    result,\n                    DISALLOW_EMPTY,\n                    MISMATCH\n                );\n            }\n\n            return result;\n        }\n\n        case 'Multiplier':\n            return buildMultiplierMatchGraph(node);\n\n        // https://drafts.csswg.org/css-values-5/#boolean\n        case 'Boolean': {\n            const term = buildMatchGraphInternal(node.term);\n            // <boolean-expr[ <test> ]> = not <boolean-expr-group> | <boolean-expr-group> [ [ and <boolean-expr-group> ]* | [ or <boolean-expr-group> ]* ]\n            const matchNode = buildMatchGraphInternal(groupNode([\n                groupNode([\n                    { type: 'Keyword', name: 'not' },\n                    { type: 'Type', name: '!boolean-group' }\n                ]),\n                groupNode([\n                    { type: 'Type', name: '!boolean-group' },\n                    groupNode([\n                        { type: 'Multiplier', comma: false, min: 0, max: 0, term: groupNode([\n                            { type: 'Keyword', name: 'and' },\n                            { type: 'Type', name: '!boolean-group' }\n                        ]) },\n                        { type: 'Multiplier', comma: false, min: 0, max: 0, term: groupNode([\n                            { type: 'Keyword', name: 'or' },\n                            { type: 'Type', name: '!boolean-group' }\n                        ]) }\n                    ], '|')\n                ])\n            ], '|'));\n            // <boolean-expr-group> = <test> | ( <boolean-expr[ <test> ]> ) | <general-enclosed>\n            const booleanGroup = buildMatchGraphInternal(\n                groupNode([\n                    { type: 'Type', name: '!term' },\n                    groupNode([\n                        { type: 'Token', value: '(' },\n                        { type: 'Type', name: '!self' },\n                        { type: 'Token', value: ')' }\n                    ]),\n                    { type: 'Type', name: 'general-enclosed' }\n                ], '|')\n            );\n\n            replaceTypeInGraph(booleanGroup, { '!term': term, '!self': matchNode });\n            replaceTypeInGraph(matchNode, { '!boolean-group': booleanGroup });\n\n            return matchNode;\n        }\n\n        case 'Type':\n        case 'Property':\n            return {\n                type: node.type,\n                name: node.name,\n                syntax: node\n            };\n\n        case 'Keyword':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'AtKeyword':\n            return {\n                type: node.type,\n                name: '@' + node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'Function':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase() + '(',\n                syntax: node\n            };\n\n        case 'String':\n            // convert a one char length String to a Token\n            if (node.value.length === 3) {\n                return {\n                    type: 'Token',\n                    value: node.value.charAt(1),\n                    syntax: node\n                };\n            }\n\n            // otherwise use it as is\n            return {\n                type: node.type,\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\n                syntax: node\n            };\n\n        case 'Token':\n            return {\n                type: node.type,\n                value: node.value,\n                syntax: node\n            };\n\n        case 'Comma':\n            return {\n                type: node.type,\n                syntax: node\n            };\n\n        default:\n            throw new Error('Unknown node type:', node.type);\n    }\n}\n\nexport function buildMatchGraph(syntaxTree, ref) {\n    if (typeof syntaxTree === 'string') {\n        syntaxTree = parse(syntaxTree);\n    }\n\n    return {\n        type: 'MatchGraph',\n        match: buildMatchGraphInternal(syntaxTree),\n        syntax: ref || null,\n        source: syntaxTree\n    };\n}\n","import { MATCH, MISMATCH, DISALLOW_EMPTY } from './match-graph.js';\nimport * as TYPE from '../tokenizer/types.js';\n\nconst { hasOwnProperty } = Object.prototype;\nconst STUB = 0;\nconst TOKEN = 1;\nconst OPEN_SYNTAX = 2;\nconst CLOSE_SYNTAX = 3;\n\nconst EXIT_REASON_MATCH = 'Match';\nconst EXIT_REASON_MISMATCH = 'Mismatch';\nconst EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\n\nconst ITERATION_LIMIT = 15000;\nexport let totalIterationCount = 0;\n\nfunction reverseList(list) {\n    let prev = null;\n    let next = null;\n    let item = list;\n\n    while (item !== null) {\n        next = item.prev;\n        item.prev = prev;\n        prev = item;\n        item = next;\n    }\n\n    return prev;\n}\n\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\n    if (testStr.length !== referenceStr.length) {\n        return false;\n    }\n\n    for (let i = 0; i < testStr.length; i++) {\n        const referenceCode = referenceStr.charCodeAt(i);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isContextEdgeDelim(token) {\n    if (token.type !== TYPE.Delim) {\n        return false;\n    }\n\n    // Fix matching for unicode-range: U+30??, U+FF00-FF9F\n    // Probably we need to check out previous match instead\n    return token.value !== '?';\n}\n\nfunction isCommaContextStart(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.Comma ||\n        token.type === TYPE.Function ||\n        token.type === TYPE.LeftParenthesis ||\n        token.type === TYPE.LeftSquareBracket ||\n        token.type === TYPE.LeftCurlyBracket ||\n        isContextEdgeDelim(token)\n    );\n}\n\nfunction isCommaContextEnd(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.RightParenthesis ||\n        token.type === TYPE.RightSquareBracket ||\n        token.type === TYPE.RightCurlyBracket ||\n        (token.type === TYPE.Delim && token.value === '/')\n    );\n}\n\nfunction internalMatch(tokens, state, syntaxes) {\n    function moveToNextToken() {\n        do {\n            tokenIndex++;\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n        } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));\n    }\n\n    function getNextToken(offset) {\n        const nextIndex = tokenIndex + offset;\n\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\n    }\n\n    function stateSnapshotFromSyntax(nextState, prev) {\n        return {\n            nextState,\n            matchStack,\n            syntaxStack,\n            thenStack,\n            tokenIndex,\n            prev\n        };\n    }\n\n    function pushThenStack(nextState) {\n        thenStack = {\n            nextState,\n            matchStack,\n            syntaxStack,\n            prev: thenStack\n        };\n    }\n\n    function pushElseStack(nextState) {\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\n    }\n\n    function addTokenToMatch() {\n        matchStack = {\n            type: TOKEN,\n            syntax: state.syntax,\n            token,\n            prev: matchStack\n        };\n\n        moveToNextToken();\n        syntaxStash = null;\n\n        if (tokenIndex > longestMatch) {\n            longestMatch = tokenIndex;\n        }\n    }\n\n    function openSyntax() {\n        syntaxStack = {\n            syntax: state.syntax,\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\n            prev: syntaxStack\n        };\n\n        matchStack = {\n            type: OPEN_SYNTAX,\n            syntax: state.syntax,\n            token: matchStack.token,\n            prev: matchStack\n        };\n    }\n\n    function closeSyntax() {\n        if (matchStack.type === OPEN_SYNTAX) {\n            matchStack = matchStack.prev;\n        } else {\n            matchStack = {\n                type: CLOSE_SYNTAX,\n                syntax: syntaxStack.syntax,\n                token: matchStack.token,\n                prev: matchStack\n            };\n        }\n\n        syntaxStack = syntaxStack.prev;\n    }\n\n    let syntaxStack = null;\n    let thenStack = null;\n    let elseStack = null;\n\n    // null – stashing allowed, nothing stashed\n    // false – stashing disabled, nothing stashed\n    // anithing else – fail stashable syntaxes, some syntax stashed\n    let syntaxStash = null;\n\n    let iterationCount = 0; // count iterations and prevent infinite loop\n    let exitReason = null;\n\n    let token = null;\n    let tokenIndex = -1;\n    let longestMatch = 0;\n    let matchStack = {\n        type: STUB,\n        syntax: null,\n        token: null,\n        prev: null\n    };\n\n    moveToNextToken();\n\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\n        // function mapList(list, fn) {\n        //     const result = [];\n        //     while (list) {\n        //         result.unshift(fn(list));\n        //         list = list.prev;\n        //     }\n        //     return result;\n        // }\n        // console.log('--\\n',\n        //     '#' + iterationCount,\n        //     require('util').inspect({\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\n        //         token: token && token.value,\n        //         tokenIndex,\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\n        //     }, { depth: null })\n        // );\n        switch (state.type) {\n            case 'Match':\n                if (thenStack === null) {\n                    // turn to MISMATCH when some tokens left unmatched\n                    if (token !== null) {\n                        // doesn't mismatch if just one token left and it's an IE hack\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\n                            state = MISMATCH;\n                            break;\n                        }\n                    }\n\n                    // break the main loop, return a result - MATCH\n                    exitReason = EXIT_REASON_MATCH;\n                    break;\n                }\n\n                // go to next syntax (`then` branch)\n                state = thenStack.nextState;\n\n                // check match is not empty\n                if (state === DISALLOW_EMPTY) {\n                    if (thenStack.matchStack === matchStack) {\n                        state = MISMATCH;\n                        break;\n                    } else {\n                        state = MATCH;\n                    }\n                }\n\n                // close syntax if needed\n                while (thenStack.syntaxStack !== syntaxStack) {\n                    closeSyntax();\n                }\n\n                // pop stack\n                thenStack = thenStack.prev;\n                break;\n\n            case 'Mismatch':\n                // when some syntax is stashed\n                if (syntaxStash !== null && syntaxStash !== false) {\n                    // there is no else branches or a branch reduce match stack\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\n                        // restore state from the stash\n                        elseStack = syntaxStash;\n                        syntaxStash = false; // disable stashing\n                    }\n                } else if (elseStack === null) {\n                    // no else branches -> break the main loop\n                    // return a result - MISMATCH\n                    exitReason = EXIT_REASON_MISMATCH;\n                    break;\n                }\n\n                // go to next syntax (`else` branch)\n                state = elseStack.nextState;\n\n                // restore all the rest stack states\n                thenStack = elseStack.thenStack;\n                syntaxStack = elseStack.syntaxStack;\n                matchStack = elseStack.matchStack;\n                tokenIndex = elseStack.tokenIndex;\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n\n                // pop stack\n                elseStack = elseStack.prev;\n                break;\n\n            case 'MatchGraph':\n                state = state.match;\n                break;\n\n            case 'If':\n                // IMPORTANT: else stack push must go first,\n                // since it stores the state of thenStack before changes\n                if (state.else !== MISMATCH) {\n                    pushElseStack(state.else);\n                }\n\n                if (state.then !== MATCH) {\n                    pushThenStack(state.then);\n                }\n\n                state = state.match;\n                break;\n\n            case 'MatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state,\n                    index: 0,\n                    mask: 0\n                };\n                break;\n\n            case 'MatchOnceBuffer': {\n                const terms = state.syntax.terms;\n\n                if (state.index === terms.length) {\n                    // no matches at all or it's required all terms to be matched\n                    if (state.mask === 0 || state.syntax.all) {\n                        state = MISMATCH;\n                        break;\n                    }\n\n                    // a partial match is ok\n                    state = MATCH;\n                    break;\n                }\n\n                // all terms are matched\n                if (state.mask === (1 << terms.length) - 1) {\n                    state = MATCH;\n                    break;\n                }\n\n                for (; state.index < terms.length; state.index++) {\n                    const matchFlag = 1 << state.index;\n\n                    if ((state.mask & matchFlag) === 0) {\n                        // IMPORTANT: else stack push must go first,\n                        // since it stores the state of thenStack before changes\n                        pushElseStack(state);\n                        pushThenStack({\n                            type: 'AddMatchOnce',\n                            syntax: state.syntax,\n                            mask: state.mask | matchFlag\n                        });\n\n                        // match\n                        state = terms[state.index++];\n                        break;\n                    }\n                }\n                break;\n            }\n\n            case 'AddMatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state.syntax,\n                    index: 0,\n                    mask: state.mask\n                };\n                break;\n\n            case 'Enum':\n                if (token !== null) {\n                    let name = token.value.toLowerCase();\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (name.indexOf('\\\\') !== -1) {\n                        name = name.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (hasOwnProperty.call(state.map, name)) {\n                        state = state.map[name];\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Generic': {\n                const opts = syntaxStack !== null ? syntaxStack.opts : null;\n                const lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\n\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n            }\n\n            case 'Type':\n            case 'Property': {\n                const syntaxDict = state.type === 'Type' ? 'types' : 'properties';\n                const dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\n\n                if (!dictSyntax || !dictSyntax.match) {\n                    throw new Error(\n                        'Bad syntax reference: ' +\n                        (state.type === 'Type'\n                            ? '<' + state.name + '>'\n                            : '<\\'' + state.name + '\\'>')\n                    );\n                }\n\n                // stash a syntax for types with low priority\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\n                    const lowPriorityMatching =\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\n                        // can only claim the keyword if no other unfulfilled production can claim it.\n                        (state.name === 'custom-ident' && token.type === TYPE.Ident) ||\n\n                        // https://drafts.csswg.org/css-values-4/#lengths\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\n                        // it must parse as a <number>\n                        (state.name === 'length' && token.value === '0');\n\n                    if (lowPriorityMatching) {\n                        if (syntaxStash === null) {\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\n                        }\n\n                        state = MISMATCH;\n                        break;\n                    }\n                }\n\n                openSyntax();\n                state = dictSyntax.matchRef || dictSyntax.match;\n                break;\n            }\n\n            case 'Keyword': {\n                const name = state.name;\n\n                if (token !== null) {\n                    let keywordName = token.value;\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (keywordName.indexOf('\\\\') !== -1) {\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\n                        addTokenToMatch();\n                        state = MATCH;\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n            }\n\n            case 'AtKeyword':\n            case 'Function':\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Token':\n                if (token !== null && token.value === state.value) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Comma':\n                if (token !== null && token.type === TYPE.Comma) {\n                    if (isCommaContextStart(matchStack.token)) {\n                        state = MISMATCH;\n                    } else {\n                        addTokenToMatch();\n                        state = isCommaContextEnd(token) ? MISMATCH : MATCH;\n                    }\n                } else {\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;\n                }\n\n                break;\n\n            case 'String':\n                let string = '';\n                let lastTokenIndex = tokenIndex;\n\n                for (; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\n                    string += tokens[lastTokenIndex].value;\n                }\n\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n\n            default:\n                throw new Error('Unknown node type: ' + state.type);\n        }\n    }\n\n    totalIterationCount += iterationCount;\n\n    switch (exitReason) {\n        case null:\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\n            matchStack = null;\n            break;\n\n        case EXIT_REASON_MATCH:\n            while (syntaxStack !== null) {\n                closeSyntax();\n            }\n            break;\n\n        default:\n            matchStack = null;\n    }\n\n    return {\n        tokens,\n        reason: exitReason,\n        iterations: iterationCount,\n        match: matchStack,\n        longestMatch\n    };\n}\n\nexport function matchAsList(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match !== null) {\n        let item = reverseList(matchResult.match).prev;\n\n        matchResult.match = [];\n\n        while (item !== null) {\n            switch (item.type) {\n                case OPEN_SYNTAX:\n                case CLOSE_SYNTAX:\n                    matchResult.match.push({\n                        type: item.type,\n                        syntax: item.syntax\n                    });\n                    break;\n\n                default:\n                    matchResult.match.push({\n                        token: item.token.value,\n                        node: item.token.node\n                    });\n                    break;\n            }\n\n            item = item.prev;\n        }\n    }\n\n    return matchResult;\n}\n\nexport function matchAsTree(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match === null) {\n        return matchResult;\n    }\n\n    let item = matchResult.match;\n    let host = matchResult.match = {\n        syntax: matchGraph.syntax || null,\n        match: []\n    };\n    const hostStack = [host];\n\n    // revert a list and start with 2nd item since 1st is a stub item\n    item = reverseList(item).prev;\n\n    // build a tree\n    while (item !== null) {\n        switch (item.type) {\n            case OPEN_SYNTAX:\n                host.match.push(host = {\n                    syntax: item.syntax,\n                    match: []\n                });\n                hostStack.push(host);\n                break;\n\n            case CLOSE_SYNTAX:\n                hostStack.pop();\n                host = hostStack[hostStack.length - 1];\n                break;\n\n            default:\n                host.match.push({\n                    syntax: item.syntax || null,\n                    token: item.token.value,\n                    node: item.token.node\n                });\n        }\n\n        item = item.prev;\n    }\n\n    return matchResult;\n}\n","export function getTrace(node) {\n    function shouldPutToTrace(syntax) {\n        if (syntax === null) {\n            return false;\n        }\n\n        return (\n            syntax.type === 'Type' ||\n            syntax.type === 'Property' ||\n            syntax.type === 'Keyword'\n        );\n    }\n\n    function hasMatch(matchNode) {\n        if (Array.isArray(matchNode.match)) {\n            // use for-loop for better perfomance\n            for (let i = 0; i < matchNode.match.length; i++) {\n                if (hasMatch(matchNode.match[i])) {\n                    if (shouldPutToTrace(matchNode.syntax)) {\n                        result.unshift(matchNode.syntax);\n                    }\n\n                    return true;\n                }\n            }\n        } else if (matchNode.node === node) {\n            result = shouldPutToTrace(matchNode.syntax)\n                ? [matchNode.syntax]\n                : [];\n\n            return true;\n        }\n\n        return false;\n    }\n\n    let result = null;\n\n    if (this.matched !== null) {\n        hasMatch(this.matched);\n    }\n\n    return result;\n}\n\nexport function isType(node, type) {\n    return testNode(this, node, match => match.type === 'Type' && match.name === type);\n}\n\nexport function isProperty(node, property) {\n    return testNode(this, node, match => match.type === 'Property' && match.name === property);\n}\n\nexport function isKeyword(node) {\n    return testNode(this, node, match => match.type === 'Keyword');\n}\n\nfunction testNode(match, node, fn) {\n    const trace = getTrace.call(match, node);\n\n    if (trace === null) {\n        return false;\n    }\n\n    return trace.some(fn);\n}\n","import { List } from '../utils/List.js';\n\nfunction getFirstMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getFirstMatchNode(matchNode.match[0]);\n}\n\nfunction getLastMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\n}\n\nexport function matchFragments(lexer, ast, match, type, name) {\n    function findFragments(matchNode) {\n        if (matchNode.syntax !== null &&\n            matchNode.syntax.type === type &&\n            matchNode.syntax.name === name) {\n            const start = getFirstMatchNode(matchNode);\n            const end = getLastMatchNode(matchNode);\n\n            lexer.syntax.walk(ast, function(node, item, list) {\n                if (node === start) {\n                    const nodes = new List();\n\n                    do {\n                        nodes.appendData(item.data);\n\n                        if (item.data === end) {\n                            break;\n                        }\n\n                        item = item.next;\n                    } while (item !== null);\n\n                    fragments.push({\n                        parent: list,\n                        nodes\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(matchNode.match)) {\n            matchNode.match.forEach(findFragments);\n        }\n    }\n\n    const fragments = [];\n\n    if (match.matched !== null) {\n        findFragments(match.matched);\n    }\n\n    return fragments;\n}\n","import { List } from '../utils/List.js';\n\nconst { hasOwnProperty } = Object.prototype;\n\nfunction isValidNumber(value) {\n    // Number.isInteger(value) && value >= 0\n    return (\n        typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value &&\n        value >= 0\n    );\n}\n\nfunction isValidLocation(loc) {\n    return (\n        Boolean(loc) &&\n        isValidNumber(loc.offset) &&\n        isValidNumber(loc.line) &&\n        isValidNumber(loc.column)\n    );\n}\n\nfunction createNodeStructureChecker(type, fields) {\n    return function checkNode(node, warn) {\n        if (!node || node.constructor !== Object) {\n            return warn(node, 'Type of node should be an Object');\n        }\n\n        for (let key in node) {\n            let valid = true;\n\n            if (hasOwnProperty.call(node, key) === false) {\n                continue;\n            }\n\n            if (key === 'type') {\n                if (node.type !== type) {\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\n                }\n            } else if (key === 'loc') {\n                if (node.loc === null) {\n                    continue;\n                } else if (node.loc && node.loc.constructor === Object) {\n                    if (typeof node.loc.source !== 'string') {\n                        key += '.source';\n                    } else if (!isValidLocation(node.loc.start)) {\n                        key += '.start';\n                    } else if (!isValidLocation(node.loc.end)) {\n                        key += '.end';\n                    } else {\n                        continue;\n                    }\n                }\n\n                valid = false;\n            } else if (fields.hasOwnProperty(key)) {\n                valid = false;\n\n                for (let i = 0; !valid && i < fields[key].length; i++) {\n                    const fieldType = fields[key][i];\n\n                    switch (fieldType) {\n                        case String:\n                            valid = typeof node[key] === 'string';\n                            break;\n\n                        case Boolean:\n                            valid = typeof node[key] === 'boolean';\n                            break;\n\n                        case null:\n                            valid = node[key] === null;\n                            break;\n\n                        default:\n                            if (typeof fieldType === 'string') {\n                                valid = node[key] && node[key].type === fieldType;\n                            } else if (Array.isArray(fieldType)) {\n                                valid = node[key] instanceof List;\n                            }\n                    }\n                }\n            } else {\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\n            }\n\n            if (!valid) {\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\n            }\n        }\n\n        for (const key in fields) {\n            if (hasOwnProperty.call(fields, key) &&\n                hasOwnProperty.call(node, key) === false) {\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\n            }\n        }\n    };\n}\n\nfunction genTypesList(fieldTypes, path) {\n    const docsTypes = [];\n\n    for (let i = 0; i < fieldTypes.length; i++) {\n        const fieldType = fieldTypes[i];\n        if (fieldType === String || fieldType === Boolean) {\n            docsTypes.push(fieldType.name.toLowerCase());\n        } else if (fieldType === null) {\n            docsTypes.push('null');\n        } else if (typeof fieldType === 'string') {\n            docsTypes.push(fieldType);\n        } else if (Array.isArray(fieldType)) {\n            docsTypes.push('List<' + (genTypesList(fieldType, path) || 'any') + '>'); // TODO: use type enum\n        } else {\n            throw new Error('Wrong value `' + fieldType + '` in `' + path + '` structure definition');\n        }\n    }\n\n    return docsTypes.join(' | ');\n}\n\nfunction processStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const fields = {\n        type: String,\n        loc: true\n    };\n    const docs = {\n        type: '\"' + name + '\"'\n    };\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        const fieldTypes = fields[key] = Array.isArray(structure[key])\n            ? structure[key].slice()\n            : [structure[key]];\n\n        docs[key] = genTypesList(fieldTypes, name + '.' + key);\n    }\n\n    return {\n        docs,\n        check: createNodeStructureChecker(name, fields)\n    };\n}\n\nexport function getStructureFromConfig(config) {\n    const structure = {};\n\n    if (config.node) {\n        for (const name in config.node) {\n            if (hasOwnProperty.call(config.node, name)) {\n                const nodeType = config.node[name];\n\n                if (nodeType.structure) {\n                    structure[name] = processStructure(name, nodeType);\n                } else {\n                    throw new Error('Missed `structure` field in `' + name + '` node type definition');\n                }\n            }\n        }\n    }\n\n    return structure;\n};\n","import { SyntaxReferenceError, SyntaxMatchError } from './error.js';\nimport * as names from '../utils/names.js';\nimport { cssWideKeywords } from './generic-const.js';\nimport { createGenericTypes } from './generic.js';\nimport * as units from './units.js';\nimport { parse, generate, walk } from '../definition-syntax/index.js';\nimport prepareTokens from './prepare-tokens.js';\nimport { buildMatchGraph } from './match-graph.js';\nimport { matchAsTree } from './match.js';\nimport * as trace from './trace.js';\nimport { matchFragments } from './search.js';\nimport { getStructureFromConfig } from './structure.js';\n\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const name in map) {\n        if (map[name].syntax) {\n            result[name] = syntaxAsAst\n                ? map[name].syntax\n                : generate(map[name].syntax, { compact });\n        }\n    }\n\n    return result;\n}\n\nfunction dumpAtruleMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const [name, atrule] of Object.entries(map)) {\n        result[name] = {\n            prelude: atrule.prelude && (\n                syntaxAsAst\n                    ? atrule.prelude.syntax\n                    : generate(atrule.prelude.syntax, { compact })\n            ),\n            descriptors: atrule.descriptors && dumpMapSyntax(atrule.descriptors, compact, syntaxAsAst)\n        };\n    }\n\n    return result;\n}\n\nfunction valueHasVar(tokens) {\n    for (let i = 0; i < tokens.length; i++) {\n        if (tokens[i].value.toLowerCase() === 'var(') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction syntaxHasTopLevelCommaMultiplier(syntax) {\n    const singleTerm = syntax.terms[0];\n\n    return (\n        syntax.explicit === false &&\n        syntax.terms.length === 1 &&\n        singleTerm.type === 'Multiplier' &&\n        singleTerm.comma === true\n    );\n}\n\nfunction buildMatchResult(matched, error, iterations) {\n    return {\n        matched,\n        iterations,\n        error,\n        ...trace\n    };\n}\n\nfunction matchSyntax(lexer, syntax, value, useCssWideKeywords) {\n    const tokens = prepareTokens(value, lexer.syntax);\n    let result;\n\n    if (valueHasVar(tokens)) {\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\n    }\n\n    if (useCssWideKeywords) {\n        result = matchAsTree(tokens, lexer.cssWideKeywordsSyntax, lexer);\n    }\n\n    if (!useCssWideKeywords || !result.match) {\n        result = matchAsTree(tokens, syntax.match, lexer);\n        if (!result.match) {\n            return buildMatchResult(\n                null,\n                new SyntaxMatchError(result.reason, syntax.syntax, value, result),\n                result.iterations\n            );\n        }\n    }\n\n    return buildMatchResult(result.match, null, result.iterations);\n}\n\nexport class Lexer {\n    constructor(config, syntax, structure) {\n        this.cssWideKeywords = cssWideKeywords;\n        this.syntax = syntax;\n        this.generic = false;\n        this.units = { ...units };\n        this.atrules = Object.create(null);\n        this.properties = Object.create(null);\n        this.types = Object.create(null);\n        this.structure = structure || getStructureFromConfig(config);\n\n        if (config) {\n            if (config.cssWideKeywords) {\n                this.cssWideKeywords = config.cssWideKeywords;\n            }\n\n            if (config.units) {\n                for (const group of Object.keys(units)) {\n                    if (Array.isArray(config.units[group])) {\n                        this.units[group] = config.units[group];\n                    }\n                }\n            }\n\n            if (config.types) {\n                for (const [name, type] of Object.entries(config.types)) {\n                    this.addType_(name, type);\n                }\n            }\n\n            if (config.generic) {\n                this.generic = true;\n                for (const [name, value] of Object.entries(createGenericTypes(this.units))) {\n                    this.addType_(name, value);\n                }\n            }\n\n            if (config.atrules) {\n                for (const [name, atrule] of Object.entries(config.atrules)) {\n                    this.addAtrule_(name, atrule);\n                }\n            }\n\n            if (config.properties) {\n                for (const [name, property] of Object.entries(config.properties)) {\n                    this.addProperty_(name, property);\n                }\n            }\n        }\n\n        this.cssWideKeywordsSyntax = buildMatchGraph(this.cssWideKeywords.join(' |  '));\n    }\n\n    checkStructure(ast) {\n        function collectWarning(node, message) {\n            warns.push({ node, message });\n        }\n\n        const structure = this.structure;\n        const warns = [];\n\n        this.syntax.walk(ast, function(node) {\n            if (structure.hasOwnProperty(node.type)) {\n                structure[node.type].check(node, collectWarning);\n            } else {\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\n            }\n        });\n\n        return warns.length ? warns : false;\n    }\n\n    createDescriptor(syntax, type, name, parent = null) {\n        const ref = {\n            type,\n            name\n        };\n        const descriptor = {\n            type,\n            name,\n            parent,\n            serializable: typeof syntax === 'string' || (syntax && typeof syntax.type === 'string'),\n            syntax: null,\n            match: null,\n            matchRef: null // used for properties when a syntax referenced as <'property'> in other syntax definitions\n        };\n\n        if (typeof syntax === 'function') {\n            descriptor.match = buildMatchGraph(syntax, ref);\n        } else {\n            if (typeof syntax === 'string') {\n                // lazy parsing on first access\n                Object.defineProperty(descriptor, 'syntax', {\n                    get() {\n                        Object.defineProperty(descriptor, 'syntax', {\n                            value: parse(syntax)\n                        });\n\n                        return descriptor.syntax;\n                    }\n                });\n            } else {\n                descriptor.syntax = syntax;\n            }\n\n            // lazy graph build on first access\n            Object.defineProperty(descriptor, 'match', {\n                get() {\n                    Object.defineProperty(descriptor, 'match', {\n                        value: buildMatchGraph(descriptor.syntax, ref)\n                    });\n\n                    return descriptor.match;\n                }\n            });\n\n            if (type === 'Property') {\n                Object.defineProperty(descriptor, 'matchRef', {\n                    get() {\n                        const syntax = descriptor.syntax;\n                        const value = syntaxHasTopLevelCommaMultiplier(syntax)\n                            ? buildMatchGraph({\n                                ...syntax,\n                                terms: [syntax.terms[0].term]\n                            }, ref)\n                            : null;\n\n                        Object.defineProperty(descriptor, 'matchRef', {\n                            value\n                        });\n\n                        return value;\n                    }\n                });\n            }\n        }\n\n        return descriptor;\n    }\n    addAtrule_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.atrules[name] = {\n            type: 'Atrule',\n            name: name,\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\n            descriptors: syntax.descriptors\n                ? Object.keys(syntax.descriptors).reduce(\n                    (map, descName) => {\n                        map[descName] = this.createDescriptor(syntax.descriptors[descName], 'AtruleDescriptor', descName, name);\n                        return map;\n                    },\n                    Object.create(null)\n                )\n                : null\n        };\n    }\n    addProperty_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\n    }\n    addType_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\n    }\n\n    checkAtruleName(atruleName) {\n        if (!this.getAtrule(atruleName)) {\n            return new SyntaxReferenceError('Unknown at-rule', '@' + atruleName);\n        }\n    }\n    checkAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude && prelude) {\n            return new SyntaxError('At-rule `@' + atruleName + '` should not contain a prelude');\n        }\n\n        if (atrule.prelude && !prelude) {\n            if (!matchSyntax(this, atrule.prelude, '', false).matched) {\n                return new SyntaxError('At-rule `@' + atruleName + '` should contain a prelude');\n            }\n        }\n    }\n    checkAtruleDescriptorName(atruleName, descriptorName) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        if (!atrule.descriptors) {\n            return new SyntaxError('At-rule `@' + atruleName + '` has no known descriptors');\n        }\n\n        if (!atrule.descriptors[descriptor.name] &&\n            !atrule.descriptors[descriptor.basename]) {\n            return new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName);\n        }\n    }\n    checkPropertyName(propertyName) {\n        if (!this.getProperty(propertyName)) {\n            return new SyntaxReferenceError('Unknown property', propertyName);\n        }\n    }\n\n    matchAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtrulePrelude(atruleName, prelude);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude) {\n            return buildMatchResult(null, null);\n        }\n\n        return matchSyntax(this, atrule.prelude, prelude || '', false);\n    }\n    matchAtruleDescriptor(atruleName, descriptorName, value) {\n        const error = this.checkAtruleDescriptorName(atruleName, descriptorName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        return matchSyntax(this, atrule.descriptors[descriptor.name] || atrule.descriptors[descriptor.basename], value, false);\n    }\n    matchDeclaration(node) {\n        if (node.type !== 'Declaration') {\n            return buildMatchResult(null, new Error('Not a Declaration node'));\n        }\n\n        return this.matchProperty(node.property, node.value);\n    }\n    matchProperty(propertyName, value) {\n        // don't match syntax for a custom property at the moment\n        if (names.property(propertyName).custom) {\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\n        }\n\n        const error = this.checkPropertyName(propertyName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        return matchSyntax(this, this.getProperty(propertyName), value, true);\n    }\n    matchType(typeName, value) {\n        const typeSyntax = this.getType(typeName);\n\n        if (!typeSyntax) {\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));\n        }\n\n        return matchSyntax(this, typeSyntax, value, false);\n    }\n    match(syntax, value) {\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\n            return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));\n        }\n\n        if (typeof syntax === 'string' || !syntax.match) {\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\n        }\n\n        return matchSyntax(this, syntax, value, false);\n    }\n\n    findValueFragments(propertyName, value, type, name) {\n        return matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\n    }\n    findDeclarationValueFragments(declaration, type, name) {\n        return matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\n    }\n    findAllFragments(ast, type, name) {\n        const result = [];\n\n        this.syntax.walk(ast, {\n            visit: 'Declaration',\n            enter: (declaration) => {\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\n            }\n        });\n\n        return result;\n    }\n\n    getAtrule(atruleName, fallbackBasename = true) {\n        const atrule = names.keyword(atruleName);\n        const atruleEntry = atrule.vendor && fallbackBasename\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\n            : this.atrules[atrule.name];\n\n        return atruleEntry || null;\n    }\n    getAtrulePrelude(atruleName, fallbackBasename = true) {\n        const atrule = this.getAtrule(atruleName, fallbackBasename);\n\n        return atrule && atrule.prelude || null;\n    }\n    getAtruleDescriptor(atruleName, name) {\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\n            ? this.atrules[atruleName].declarators[name] || null\n            : null;\n    }\n    getProperty(propertyName, fallbackBasename = true) {\n        const property = names.property(propertyName);\n        const propertyEntry = property.vendor && fallbackBasename\n            ? this.properties[property.name] || this.properties[property.basename]\n            : this.properties[property.name];\n\n        return propertyEntry || null;\n    }\n    getType(name) {\n        return hasOwnProperty.call(this.types, name) ? this.types[name] : null;\n    }\n\n    validate() {\n        function syntaxRef(name, isType) {\n            return isType ? `<${name}>` : `<'${name}'>`;\n        }\n\n        function validate(syntax, name, broken, descriptor) {\n            if (broken.has(name)) {\n                return broken.get(name);\n            }\n\n            broken.set(name, false);\n            if (descriptor.syntax !== null) {\n                walk(descriptor.syntax, function(node) {\n                    if (node.type !== 'Type' && node.type !== 'Property') {\n                        return;\n                    }\n\n                    const map = node.type === 'Type' ? syntax.types : syntax.properties;\n                    const brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\n\n                    if (!hasOwnProperty.call(map, node.name)) {\n                        errors.push(`${syntaxRef(name, broken === brokenTypes)} used missed syntax definition ${syntaxRef(node.name, node.type === 'Type')}`);\n                        broken.set(name, true);\n                    } else if (validate(syntax, node.name, brokenMap, map[node.name])) {\n                        errors.push(`${syntaxRef(name, broken === brokenTypes)} used broken syntax definition ${syntaxRef(node.name, node.type === 'Type')}`);\n                        broken.set(name, true);\n                    }\n                }, this);\n            }\n        }\n\n        const errors = [];\n        let brokenTypes = new Map();\n        let brokenProperties = new Map();\n\n        for (const key in this.types) {\n            validate(this, key, brokenTypes, this.types[key]);\n        }\n\n        for (const key in this.properties) {\n            validate(this, key, brokenProperties, this.properties[key]);\n        }\n\n        const brokenTypesArray = [...brokenTypes.keys()].filter(name => brokenTypes.get(name));\n        const brokenPropertiesArray = [...brokenProperties.keys()].filter(name => brokenProperties.get(name));\n\n        if (brokenTypesArray.length || brokenPropertiesArray.length) {\n            return {\n                errors,\n                types: brokenTypesArray,\n                properties: brokenPropertiesArray\n            };\n        }\n\n        return null;\n    }\n    dump(syntaxAsAst, pretty) {\n        return {\n            generic: this.generic,\n            cssWideKeywords: this.cssWideKeywords,\n            units: this.units,\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst),\n            atrules: dumpAtruleMapSyntax(this.atrules, !pretty, syntaxAsAst)\n        };\n    }\n    toString() {\n        return JSON.stringify(this.dump());\n    }\n};\n","function appendOrSet(a, b) {\n    if (typeof b === 'string' && /^\\s*\\|/.test(b)) {\n        return typeof a === 'string'\n            ? a + b\n            : b.replace(/^\\s*\\|\\s*/, '');\n    }\n\n    return b || null;\n}\n\nfunction sliceProps(obj, props) {\n    const result = Object.create(null);\n\n    for (const [key, value] of Object.entries(obj)) {\n        if (value) {\n            result[key] = {};\n            for (const prop of Object.keys(value)) {\n                if (props.includes(prop)) {\n                    result[key][prop] = value[prop];\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default function mix(dest, src) {\n    const result = { ...dest };\n\n    for (const [prop, value] of Object.entries(src)) {\n        switch (prop) {\n            case 'generic':\n                result[prop] = Boolean(value);\n                break;\n\n            case 'cssWideKeywords':\n                result[prop] = dest[prop]\n                    ? [...dest[prop], ...value]\n                    : value || [];\n                break;\n\n            case 'units':\n                result[prop] = { ...dest[prop] };\n                for (const [name, patch] of Object.entries(value)) {\n                    result[prop][name] = Array.isArray(patch) ? patch : [];\n                }\n                break;\n\n            case 'atrules':\n                result[prop] = { ...dest[prop] };\n\n                for (const [name, atrule] of Object.entries(value)) {\n                    const exists = result[prop][name] || {};\n                    const current = result[prop][name] = {\n                        prelude: exists.prelude || null,\n                        descriptors: {\n                            ...exists.descriptors\n                        }\n                    };\n\n                    if (!atrule) {\n                        continue;\n                    }\n\n                    current.prelude = atrule.prelude\n                        ? appendOrSet(current.prelude, atrule.prelude)\n                        : current.prelude || null;\n\n                    for (const [descriptorName, descriptorValue] of Object.entries(atrule.descriptors || {})) {\n                        current.descriptors[descriptorName] = descriptorValue\n                            ? appendOrSet(current.descriptors[descriptorName], descriptorValue)\n                            : null;\n                    }\n\n                    if (!Object.keys(current.descriptors).length) {\n                        current.descriptors = null;\n                    }\n                }\n                break;\n\n            case 'types':\n            case 'properties':\n                result[prop] = { ...dest[prop] };\n                for (const [name, syntax] of Object.entries(value)) {\n                    result[prop][name] = appendOrSet(result[prop][name], syntax);\n                }\n                break;\n\n            case 'scope':\n            case 'features':\n                result[prop] = { ...dest[prop] };\n                for (const [name, props] of Object.entries(value)) {\n                    result[prop][name] = { ...result[prop][name], ...props };\n                }\n                break;\n\n            case 'parseContext':\n                result[prop] = {\n                    ...dest[prop],\n                    ...value\n                };\n                break;\n\n            case 'atrule':\n            case 'pseudo':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['parse'])\n                };\n                break;\n\n            case 'node':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['name', 'structure', 'parse', 'generate', 'walkContext'])\n                };\n                break;\n        }\n    }\n\n    return result;\n}\n","import { tokenize } from '../tokenizer/index.js';\nimport { createParser } from '../parser/create.js';\nimport { createGenerator } from '../generator/create.js';\nimport { createConvertor } from '../convertor/create.js';\nimport { createWalker } from '../walker/create.js';\nimport { Lexer } from '../lexer/Lexer.js';\nimport mix from './config/mix.js';\n\nfunction createSyntax(config) {\n    const parse = createParser(config);\n    const walk = createWalker(config);\n    const generate = createGenerator(config);\n    const { fromPlainObject, toPlainObject } = createConvertor(walk);\n\n    const syntax = {\n        lexer: null,\n        createLexer: config => new Lexer(config, syntax, syntax.lexer.structure),\n\n        tokenize,\n        parse,\n        generate,\n\n        walk,\n        find: walk.find,\n        findLast: walk.findLast,\n        findAll: walk.findAll,\n\n        fromPlainObject,\n        toPlainObject,\n\n        fork(extension) {\n            const base = mix({}, config); // copy of config\n\n            return createSyntax(\n                typeof extension === 'function'\n                    ? extension(base) // TODO: remove Object.assign as second parameter\n                    : mix(base, extension)\n            );\n        }\n    };\n\n    syntax.lexer = new Lexer({\n        generic: config.generic,\n        cssWideKeywords: config.cssWideKeywords,\n        units: config.units,\n        types: config.types,\n        atrules: config.atrules,\n        properties: config.properties,\n        node: config.node\n    }, syntax);\n\n    return syntax;\n};\n\nexport default config => createSyntax(mix({}, config));\n","import { List } from '../utils/List.js';\n\nexport function createConvertor(walk) {\n    return {\n        fromPlainObject(ast) {\n            walk(ast, {\n                enter(node) {\n                    if (node.children && node.children instanceof List === false) {\n                        node.children = new List().fromArray(node.children);\n                    }\n                }\n            });\n\n            return ast;\n        },\n        toPlainObject(ast) {\n            walk(ast, {\n                leave(node) {\n                    if (node.children && node.children instanceof List) {\n                        node.children = node.children.toArray();\n                    }\n                }\n            });\n\n            return ast;\n        }\n    };\n};\n","import {\n    isDigit,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction checkInteger(offset, disallowSign) {\n    let pos = this.tokenStart + offset;\n    const code = this.charCodeAt(pos);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            this.error('Number sign is not allowed');\n        }\n        pos++;\n    }\n\n    for (; pos < this.tokenEnd; pos++) {\n        if (!isDigit(this.charCodeAt(pos))) {\n            this.error('Integer is expected', pos);\n        }\n    }\n}\n\nfunction checkTokenIsInteger(disallowSign) {\n    return checkInteger.call(this, 0, disallowSign);\n}\n\nfunction expectCharCode(offset, code) {\n    if (!this.cmpChar(this.tokenStart + offset, code)) {\n        let msg = '';\n\n        switch (code) {\n            case N:\n                msg = 'N is expected';\n                break;\n            case HYPHENMINUS:\n                msg = 'HyphenMinus is expected';\n                break;\n        }\n\n        this.error(msg, this.tokenStart + offset);\n    }\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB() {\n    let offset = 0;\n    let sign = 0;\n    let type = this.tokenType;\n\n    while (type === WhiteSpace || type === Comment) {\n        type = this.lookupType(++offset);\n    }\n\n    if (type !== Number) {\n        if (this.isDelim(PLUSSIGN, offset) ||\n            this.isDelim(HYPHENMINUS, offset)) {\n            sign = this.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\n\n            do {\n                type = this.lookupType(++offset);\n            } while (type === WhiteSpace || type === Comment);\n\n            if (type !== Number) {\n                this.skip(offset);\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    if (offset > 0) {\n        this.skip(offset);\n    }\n\n    if (sign === 0) {\n        type = this.charCodeAt(this.tokenStart);\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\n            this.error('Number sign is expected');\n        }\n    }\n\n    checkTokenIsInteger.call(this, sign !== 0);\n    return sign === HYPHENMINUS ? '-' + this.consume(Number) : this.consume(Number);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport const name = 'AnPlusB';\nexport const structure = {\n    a: [String, null],\n    b: [String, null]\n};\n\nexport function parse() {\n    /* eslint-disable brace-style*/\n    const start = this.tokenStart;\n    let a = null;\n    let b = null;\n\n    // <integer>\n    if (this.tokenType === Number) {\n        checkTokenIsInteger.call(this, ALLOW_SIGN);\n        b = this.consume(Number);\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (this.tokenType === Ident && this.cmpChar(this.tokenStart, HYPHENMINUS)) {\n        a = '-1';\n\n        expectCharCode.call(this, 1, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // -n- <signless-integer>\n            case 3:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // <dashndashdigit-ident>\n            default:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n                checkInteger.call(this, 3, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + 2);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (this.tokenType === Ident || (this.isDelim(PLUSSIGN) && this.lookupType(1) === Ident)) {\n        let sign = 0;\n        a = '1';\n\n        // just ignore a plus\n        if (this.isDelim(PLUSSIGN)) {\n            sign = 1;\n            this.next();\n        }\n\n        expectCharCode.call(this, 0, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // '+'? n- <signless-integer>\n            case 2:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // '+'? <ndashdigit-ident>\n            default:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n                checkInteger.call(this, 2, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + sign + 1);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (this.tokenType === Dimension) {\n        const code = this.charCodeAt(this.tokenStart);\n        const sign = code === PLUSSIGN || code === HYPHENMINUS;\n        let i = this.tokenStart + sign;\n\n        for (; i < this.tokenEnd; i++) {\n            if (!isDigit(this.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === this.tokenStart + sign) {\n            this.error('Integer is expected', this.tokenStart + sign);\n        }\n\n        expectCharCode.call(this, i - this.tokenStart, N);\n        a = this.substring(start, i);\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === this.tokenEnd) {\n            this.next();\n            b = consumeB.call(this);\n        } else {\n            expectCharCode.call(this, i - this.tokenStart + 1, HYPHENMINUS);\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === this.tokenEnd) {\n                this.next();\n                this.skipSC();\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n                b = '-' + this.consume(Number);\n            }\n            // <ndashdigit-dimension>\n            else {\n                checkInteger.call(this, i - this.tokenStart + 2, DISALLOW_SIGN);\n                this.next();\n                b = this.substrToCursor(i + 1);\n            }\n        }\n    } else {\n        this.error();\n    }\n\n    if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\n        a = a.substr(1);\n    }\n\n    if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\n        b = b.substr(1);\n    }\n\n    return {\n        type: 'AnPlusB',\n        loc: this.getLocation(start, this.tokenStart),\n        a,\n        b\n    };\n}\n\nexport function generate(node) {\n    if (node.a) {\n        const a =\n            node.a === '+1' && 'n' ||\n            node.a ===  '1' && 'n' ||\n            node.a === '-1' && '-n' ||\n            node.a + 'n';\n\n        if (node.b) {\n            const b = node.b[0] === '-' || node.b[0] === '+'\n                ? node.b\n                : '+' + node.b;\n            this.tokenize(a + b);\n        } else {\n            this.tokenize(a);\n        }\n    } else {\n        this.tokenize(node.b);\n    }\n}\n","import {\n    AtKeyword,\n    Semicolon,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nfunction consumeRaw() {\n    return this.Raw(this.consumeUntilLeftCurlyBracketOrSemicolon, true);\n}\n\nfunction isDeclarationBlockAtrule() {\n    for (let offset = 1, type; type = this.lookupType(offset); offset++) {\n        if (type === RightCurlyBracket) {\n            return true;\n        }\n\n        if (type === LeftCurlyBracket ||\n            type === AtKeyword) {\n            return false;\n        }\n    }\n\n    return false;\n}\n\n\nexport const name = 'Atrule';\nexport const walkContext = 'atrule';\nexport const structure = {\n    name: String,\n    prelude: ['AtrulePrelude', 'Raw', null],\n    block: ['Block', null]\n};\n\nexport function parse(isDeclaration = false) {\n    const start = this.tokenStart;\n    let name;\n    let nameLowerCase;\n    let prelude = null;\n    let block = null;\n\n    this.eat(AtKeyword);\n\n    name = this.substrToCursor(start + 1);\n    nameLowerCase = name.toLowerCase();\n    this.skipSC();\n\n    // parse prelude\n    if (this.eof === false &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        if (this.parseAtrulePrelude) {\n            prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name, isDeclaration), consumeRaw);\n        } else {\n            prelude = consumeRaw.call(this, this.tokenIndex);\n        }\n\n        this.skipSC();\n    }\n\n    switch (this.tokenType) {\n        case Semicolon:\n            this.next();\n            break;\n\n        case LeftCurlyBracket:\n            if (hasOwnProperty.call(this.atrule, nameLowerCase) &&\n                typeof this.atrule[nameLowerCase].block === 'function') {\n                block = this.atrule[nameLowerCase].block.call(this, isDeclaration);\n            } else {\n                // TODO: should consume block content as Raw?\n                block = this.Block(isDeclarationBlockAtrule.call(this));\n            }\n\n            break;\n    }\n\n    return {\n        type: 'Atrule',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        prelude,\n        block\n    };\n}\n\nexport function generate(node) {\n    this.token(AtKeyword, '@' + node.name);\n\n    if (node.prelude !== null) {\n        this.node(node.prelude);\n    }\n\n    if (node.block) {\n        this.node(node.block);\n    } else {\n        this.token(Semicolon, ';');\n    }\n}\n","import {\n    Semicolon,\n    LeftCurlyBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'AtrulePrelude';\nexport const walkContext = 'atrulePrelude';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(name) {\n    let children = null;\n\n    if (name !== null) {\n        name = name.toLowerCase();\n    }\n\n    this.skipSC();\n\n    if (hasOwnProperty.call(this.atrule, name) &&\n        typeof this.atrule[name].prelude === 'function') {\n        // custom consumer\n        children = this.atrule[name].prelude.call(this);\n    } else {\n        // default consumer\n        children = this.readSequence(this.scope.AtrulePrelude);\n    }\n\n    this.skipSC();\n\n    if (this.eof !== true &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        this.error('Semicolon or block is expected');\n    }\n\n    return {\n        type: 'AtrulePrelude',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n","import {\n    Ident,\n    String as StringToken,\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nconst DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\nconst ASTERISK = 0x002A;         // U+002A ASTERISK (*)\nconst EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\nconst CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\nconst VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;            // U+007E TILDE (~)\n\nfunction getAttributeName() {\n    if (this.eof) {\n        this.error('Unexpected end of input');\n    }\n\n    const start = this.tokenStart;\n    let expectIdent = false;\n\n    if (this.isDelim(ASTERISK)) {\n        expectIdent = true;\n        this.next();\n    } else if (!this.isDelim(VERTICALLINE)) {\n        this.eat(Ident);\n    }\n\n    if (this.isDelim(VERTICALLINE)) {\n        if (this.charCodeAt(this.tokenStart + 1) !== EQUALSSIGN) {\n            this.next();\n            this.eat(Ident);\n        } else if (expectIdent) {\n            this.error('Identifier is expected', this.tokenEnd);\n        }\n    } else if (expectIdent) {\n        this.error('Vertical line is expected');\n    }\n\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nfunction getOperator() {\n    const start = this.tokenStart;\n    const code = this.charCodeAt(start);\n\n    if (code !== EQUALSSIGN &&        // =\n        code !== TILDE &&             // ~=\n        code !== CIRCUMFLEXACCENT &&  // ^=\n        code !== DOLLARSIGN &&        // $=\n        code !== ASTERISK &&          // *=\n        code !== VERTICALLINE         // |=\n    ) {\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\n    }\n\n    this.next();\n\n    if (code !== EQUALSSIGN) {\n        if (!this.isDelim(EQUALSSIGN)) {\n            this.error('Equal sign is expected');\n        }\n\n        this.next();\n    }\n\n    return this.substrToCursor(start);\n}\n\n// '[' <wq-name> ']'\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\nexport const name = 'AttributeSelector';\nexport const structure = {\n    name: 'Identifier',\n    matcher: [String, null],\n    value: ['String', 'Identifier', null],\n    flags: [String, null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n    let matcher = null;\n    let value = null;\n    let flags = null;\n\n    this.eat(LeftSquareBracket);\n    this.skipSC();\n\n    name = getAttributeName.call(this);\n    this.skipSC();\n\n    if (this.tokenType !== RightSquareBracket) {\n        // avoid case `[name i]`\n        if (this.tokenType !== Ident) {\n            matcher = getOperator.call(this);\n\n            this.skipSC();\n\n            value = this.tokenType === StringToken\n                ? this.String()\n                : this.Identifier();\n\n            this.skipSC();\n        }\n\n        // attribute flags\n        if (this.tokenType === Ident) {\n            flags = this.consume(Ident);\n\n            this.skipSC();\n        }\n    }\n\n    this.eat(RightSquareBracket);\n\n    return {\n        type: 'AttributeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        matcher,\n        value,\n        flags\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.node(node.name);\n\n    if (node.matcher !== null) {\n        this.tokenize(node.matcher);\n        this.node(node.value);\n    }\n\n    if (node.flags !== null) {\n        this.token(Ident, node.flags);\n    }\n\n    this.token(Delim, ']');\n}\n","import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw() {\n    return this.Raw(null, true);\n}\nfunction consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n}\nfunction consumeRawDeclaration() {\n    return this.Raw(this.consumeUntilSemicolonIncluded, true);\n}\nfunction consumeDeclaration() {\n    if (this.tokenType === Semicolon) {\n        return consumeRawDeclaration.call(this, this.tokenIndex);\n    }\n\n    const node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n    if (this.tokenType === Semicolon) {\n        this.next();\n    }\n\n    return node;\n}\n\nexport const name = 'Block';\nexport const walkContext = 'block';\nexport const structure = {\n    children: [[\n        'Atrule',\n        'Rule',\n        'Declaration'\n    ]]\n};\n\nexport function parse(isStyleBlock) {\n    const consumer = isStyleBlock ? consumeDeclaration : consumeRule;\n    const start = this.tokenStart;\n    let children = this.createList();\n\n    this.eat(LeftCurlyBracket);\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case RightCurlyBracket:\n                break scan;\n\n            case WhiteSpace:\n            case Comment:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, isStyleBlock), consumeRaw));\n                break;\n\n            default:\n                if (isStyleBlock && this.isDelim(AMPERSAND))  {\n                    children.push(consumeRule.call(this));\n                } else {\n                    children.push(consumer.call(this));\n                }\n        }\n    }\n\n    if (!this.eof) {\n        this.eat(RightCurlyBracket);\n    }\n\n    return {\n        type: 'Block',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftCurlyBracket, '{');\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n    this.token(RightCurlyBracket, '}');\n}\n","import {\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'Brackets';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftSquareBracket);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightSquareBracket);\n    }\n\n    return {\n        type: 'Brackets',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.children(node);\n    this.token(Delim, ']');\n}\n","import { CDC } from '../../tokenizer/index.js';\n\nexport const name = 'CDC';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDC); // -->\n\n    return {\n        type: 'CDC',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDC, '-->');\n}\n","import { CDO } from '../../tokenizer/index.js';\n\nexport const name = 'CDO';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDO); // <!--\n\n    return {\n        type: 'CDO',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDO, '<!--');\n}\n","import { Delim, Ident } from '../../tokenizer/index.js';\n\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// '.' ident\nexport const name = 'ClassSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    this.eatDelim(FULLSTOP);\n\n    return {\n        type: 'ClassSelector',\n        loc: this.getLocation(this.tokenStart - 1, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '.');\n    this.token(Ident, node.name);\n}\n","import { WhiteSpace, Delim } from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nexport const name = 'Combinator';\nexport const structure = {\n    name: String\n};\n\n// + | > | ~ | /deep/\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n\n    switch (this.tokenType) {\n        case WhiteSpace:\n            name = ' ';\n            break;\n\n        case Delim:\n            switch (this.charCodeAt(this.tokenStart)) {\n                case GREATERTHANSIGN:\n                case PLUSSIGN:\n                case TILDE:\n                    this.next();\n                    break;\n\n                case SOLIDUS:\n                    this.next();\n                    this.eatIdent('deep');\n                    this.eatDelim(SOLIDUS);\n                    break;\n\n                default:\n                    this.error('Combinator is expected');\n            }\n\n            name = this.substrToCursor(start);\n            break;\n    }\n\n    return {\n        type: 'Combinator',\n        loc: this.getLocation(start, this.tokenStart),\n        name\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n","import { Comment } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\n\nexport const name = 'Comment';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let end = this.tokenEnd;\n\n    this.eat(Comment);\n\n    if ((end - start + 2) >= 2 &&\n        this.charCodeAt(end - 2) === ASTERISK &&\n        this.charCodeAt(end - 1) === SOLIDUS) {\n        end -= 2;\n    }\n\n    return {\n        type: 'Comment',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substring(start + 2, end)\n    };\n}\n\nexport function generate(node) {\n    this.token(Comment, '/*' + node.value + '*/');\n}\n","import {\n    WhiteSpace,\n    Comment,\n    Ident,\n    LeftParenthesis,\n    RightParenthesis,\n    Function as FunctionToken,\n    Colon,\n    EOF\n} from '../../tokenizer/index.js';\n\nconst likelyFeatureToken = new Set([Colon, RightParenthesis, EOF]);\n\nexport const name = 'Condition';\nexport const structure = {\n    kind: String,\n    children: [[\n        'Identifier',\n        'Feature',\n        'FeatureFunction',\n        'FeatureRange',\n        'SupportsDeclaration'\n    ]]\n};\n\nfunction featureOrRange(kind) {\n    if (this.lookupTypeNonSC(1) === Ident &&\n        likelyFeatureToken.has(this.lookupTypeNonSC(2))) {\n        return this.Feature(kind);\n    }\n\n    return this.FeatureRange(kind);\n}\n\nconst parentheses = {\n    media: featureOrRange,\n    container: featureOrRange,\n    supports() {\n        return this.SupportsDeclaration();\n    }\n};\n\nexport function parse(kind = 'media') {\n    const children = this.createList();\n\n    scan: while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Ident:\n                children.push(this.Identifier());\n                break;\n\n            case LeftParenthesis: {\n                let term = this.parseWithFallback(\n                    () => parentheses[kind].call(this, kind),\n                    () => null\n                );\n\n                if (!term) {\n                    term = this.parseWithFallback(\n                        () => {\n                            this.eat(LeftParenthesis);\n                            const res = this.Condition(kind);\n                            this.eat(RightParenthesis);\n                            return res;\n                        },\n                        () => {\n                            return this.GeneralEnclosed(kind);\n                        }\n                    );\n                }\n\n                children.push(term);\n                break;\n            }\n\n            case FunctionToken: {\n                let term = this.parseWithFallback(\n                    () => this.FeatureFunction(kind),\n                    () => null\n                );\n\n                if (!term) {\n                    term = this.GeneralEnclosed(kind);\n                }\n\n                children.push(term);\n                break;\n            }\n\n            default:\n                break scan;\n        }\n    }\n\n    if (children.isEmpty) {\n        this.error('Condition is expected');\n    }\n\n    return {\n        type: 'Condition',\n        loc: this.getLocationFromList(children),\n        kind,\n        children\n    };\n}\n\nexport function generate(node) {\n    node.children.forEach(child => {\n        if (child.type === 'Condition') {\n            this.token(LeftParenthesis, '(');\n            this.node(child);\n            this.token(RightParenthesis, ')');\n        } else {\n            this.node(child);\n        }\n    });\n}\n\n","import { isCustomProperty } from '../../utils/names.js';\nimport {\n    Ident,\n    Hash,\n    Colon,\n    Semicolon,\n    Delim,\n    WhiteSpace\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw() {\n    return this.Raw(this.consumeUntilExclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw() {\n    return this.Raw(this.consumeUntilExclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n    const startValueToken = this.tokenIndex;\n    const value = this.Value();\n\n    if (value.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isDelim(EXCLAMATIONMARK) === false &&\n        this.isBalanceEdge(startValueToken) === false) {\n        this.error();\n    }\n\n    return value;\n}\n\nexport const name = 'Declaration';\nexport const walkContext = 'declaration';\nexport const structure = {\n    important: [Boolean, String],\n    property: String,\n    value: ['Value', 'Raw']\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const startToken = this.tokenIndex;\n    const property = readProperty.call(this);\n    const customProperty = isCustomProperty(property);\n    const parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n    const consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n    let important = false;\n    let value;\n\n    this.skipSC();\n    this.eat(Colon);\n\n    const valueStart = this.tokenIndex;\n\n    if (!customProperty) {\n        this.skipSC();\n    }\n\n    if (parseValue) {\n        value = this.parseWithFallback(consumeValue, consumeRaw);\n    } else {\n        value = consumeRaw.call(this, this.tokenIndex);\n    }\n\n    if (customProperty && value.type === 'Value' && value.children.isEmpty) {\n        for (let offset = valueStart - this.tokenIndex; offset <= 0; offset++) {\n            if (this.lookupType(offset) === WhiteSpace) {\n                value.children.appendData({\n                    type: 'WhiteSpace',\n                    loc: null,\n                    value: ' '\n                });\n                break;\n            }\n        }\n    }\n\n    if (this.isDelim(EXCLAMATIONMARK)) {\n        important = getImportant.call(this);\n        this.skipSC();\n    }\n\n    // Do not include semicolon to range per spec\n    // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n    if (this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isBalanceEdge(startToken) === false) {\n        this.error();\n    }\n\n    return {\n        type: 'Declaration',\n        loc: this.getLocation(start, this.tokenStart),\n        important,\n        property,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.property);\n    this.token(Colon, ':');\n    this.node(node.value);\n\n    if (node.important) {\n        this.token(Delim, '!');\n        this.token(Ident, node.important === true ? 'important' : node.important);\n    }\n}\n\nfunction readProperty() {\n    const start = this.tokenStart;\n\n    // hacks\n    if (this.tokenType === Delim) {\n        switch (this.charCodeAt(this.tokenStart)) {\n            case ASTERISK:\n            case DOLLARSIGN:\n            case PLUSSIGN:\n            case NUMBERSIGN:\n            case AMPERSAND:\n                this.next();\n                break;\n\n            // TODO: not sure we should support this hack\n            case SOLIDUS:\n                this.next();\n                if (this.isDelim(SOLIDUS)) {\n                    this.next();\n                }\n                break;\n        }\n    }\n\n    if (this.tokenType === Hash) {\n        this.eat(Hash);\n    } else {\n        this.eat(Ident);\n    }\n\n    return this.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n    this.eat(Delim);\n    this.skipSC();\n\n    const important = this.consume(Ident);\n\n    // store original value in case it differ from `important`\n    // for better original source restoring and hacks like `!ie` support\n    return important === 'important' ? true : important;\n}\n","import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw() {\n    return this.Raw(this.consumeUntilSemicolonIncluded, true);\n}\n\nexport const name = 'DeclarationList';\nexport const structure = {\n    children: [[\n        'Declaration',\n        'Atrule',\n        'Rule'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n            case Comment:\n            case Semicolon:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, true), consumeRaw));\n                break;\n\n            default:\n                if (this.isDelim(AMPERSAND))  {\n                    children.push(this.parseWithFallback(this.Rule, consumeRaw));\n                } else {\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n                }\n        }\n    }\n\n    return {\n        type: 'DeclarationList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n}\n\n","import { Dimension } from '../../tokenizer/index.js';\n\nexport const name = 'Dimension';\nexport const structure = {\n    value: String,\n    unit: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const value = this.consumeNumber(Dimension);\n\n    return {\n        type: 'Dimension',\n        loc: this.getLocation(start, this.tokenStart),\n        value,\n        unit: this.substring(start + value.length, this.tokenStart)\n    };\n}\n\nexport function generate(node) {\n    this.token(Dimension, node.value + node.unit);\n}\n","import {\n    Ident,\n    Number,\n    Dimension,\n    Function as FunctionToken,\n    LeftParenthesis,\n    RightParenthesis,\n    Colon,\n    Delim\n} from '../../tokenizer/index.js';\n\nconst SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\n\nexport const name = 'Feature';\nexport const structure = {\n    kind: String,\n    name: String,\n    value: ['Identifier', 'Number', 'Dimension', 'Ratio', 'Function', null]\n};\n\nexport function parse(kind) {\n    const start = this.tokenStart;\n    let name;\n    let value = null;\n\n    this.eat(LeftParenthesis);\n    this.skipSC();\n\n    name = this.consume(Ident);\n    this.skipSC();\n\n    if (this.tokenType !== RightParenthesis) {\n        this.eat(Colon);\n        this.skipSC();\n\n        switch (this.tokenType) {\n            case Number:\n                if (this.lookupNonWSType(1) === Delim) {\n                    value = this.Ratio();\n                } else {\n                    value = this.Number();\n                }\n\n                break;\n\n            case Dimension:\n                value = this.Dimension();\n                break;\n\n            case Ident:\n                value = this.Identifier();\n                break;\n\n            case FunctionToken:\n                value = this.parseWithFallback(\n                    () => {\n                        const res = this.Function(this.readSequence, this.scope.Value);\n\n                        this.skipSC();\n\n                        if (this.isDelim(SOLIDUS)) {\n                            this.error();\n                        }\n\n                        return res;\n                    },\n                    () => {\n                        return this.Ratio();\n                    }\n                );\n                break;\n\n            default:\n                this.error('Number, dimension, ratio or identifier is expected');\n        }\n\n        this.skipSC();\n    }\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Feature',\n        loc: this.getLocation(start, this.tokenStart),\n        kind,\n        name,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.token(Ident, node.name);\n\n    if (node.value !== null) {\n        this.token(Colon, ':');\n        this.node(node.value);\n    }\n\n    this.token(RightParenthesis, ')');\n}\n","import {\n    Function as FunctionToken,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'FeatureFunction';\nexport const structure = {\n    kind: String,\n    feature: String,\n    value: ['Declaration', 'Selector']\n};\n\nfunction getFeatureParser(kind, name) {\n    const featuresOfKind = this.features[kind] || {};\n    const parser = featuresOfKind[name];\n\n    if (typeof parser !== 'function') {\n        this.error(`Unknown feature ${name}()`);\n    }\n\n    return parser;\n}\n\nexport function parse(kind = 'unknown') {\n    const start = this.tokenStart;\n    const functionName = this.consumeFunctionName();\n    const valueParser = getFeatureParser.call(this, kind, functionName.toLowerCase());\n\n    this.skipSC();\n\n    const value = this.parseWithFallback(\n        () => {\n            const startValueToken = this.tokenIndex;\n            const value = valueParser.call(this);\n\n            if (this.eof === false &&\n                this.isBalanceEdge(startValueToken) === false) {\n                this.error();\n            }\n\n            return value;\n        },\n        () => this.Raw(null, false)\n    );\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'FeatureFunction',\n        loc: this.getLocation(start, this.tokenStart),\n        kind,\n        feature: functionName,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(FunctionToken, node.feature + '(');\n    this.node(node.value);\n    this.token(RightParenthesis, ')');\n}\n","import {\n    Ident,\n    Number,\n    Dimension,\n    Function as FunctionToken,\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst LESSTHANSIGN = 0x003C;    // U+003C LESS-THAN SIGN (<)\nconst EQUALSSIGN = 0x003D;      // U+003D EQUALS SIGN (=)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\n\nexport const name = 'FeatureRange';\nexport const structure = {\n    kind: String,\n    left: ['Identifier', 'Number', 'Dimension', 'Ratio', 'Function'],\n    leftComparison: String,\n    middle: ['Identifier', 'Number', 'Dimension', 'Ratio', 'Function'],\n    rightComparison: [String, null],\n    right: ['Identifier', 'Number', 'Dimension', 'Ratio', 'Function', null]\n};\n\nfunction readTerm() {\n    this.skipSC();\n\n    switch (this.tokenType) {\n        case Number:\n            if (this.isDelim(SOLIDUS, this.lookupOffsetNonSC(1))) {\n                return this.Ratio();\n            } else {\n                return this.Number();\n            }\n\n        case Dimension:\n            return this.Dimension();\n\n        case Ident:\n            return this.Identifier();\n\n        case FunctionToken:\n            return this.parseWithFallback(\n                () => {\n                    const res = this.Function(this.readSequence, this.scope.Value);\n\n                    this.skipSC();\n\n                    if (this.isDelim(SOLIDUS)) {\n                        this.error();\n                    }\n\n                    return res;\n                },\n                () => {\n                    return this.Ratio();\n                }\n            );\n\n        default:\n            this.error('Number, dimension, ratio or identifier is expected');\n    }\n}\n\nfunction readComparison(expectColon) {\n    this.skipSC();\n\n    if (this.isDelim(LESSTHANSIGN) ||\n        this.isDelim(GREATERTHANSIGN)) {\n        const value = this.source[this.tokenStart];\n\n        this.next();\n\n        if (this.isDelim(EQUALSSIGN)) {\n            this.next();\n            return value + '=';\n        }\n\n        return value;\n    }\n\n    if (this.isDelim(EQUALSSIGN)) {\n        return '=';\n    }\n\n    this.error(`Expected ${expectColon ? '\":\", ' : ''}\"<\", \">\", \"=\" or \")\"`);\n}\n\nexport function parse(kind = 'unknown') {\n    const start = this.tokenStart;\n\n    this.skipSC();\n    this.eat(LeftParenthesis);\n\n    const left = readTerm.call(this);\n    const leftComparison = readComparison.call(this, left.type === 'Identifier');\n    const middle = readTerm.call(this);\n    let rightComparison = null;\n    let right = null;\n\n    if (this.lookupNonWSType(0) !== RightParenthesis) {\n        rightComparison = readComparison.call(this);\n        right = readTerm.call(this);\n    }\n\n    this.skipSC();\n    this.eat(RightParenthesis);\n\n    return {\n        type: 'FeatureRange',\n        loc: this.getLocation(start, this.tokenStart),\n        kind,\n        left,\n        leftComparison,\n        middle,\n        rightComparison,\n        right\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.node(node.left);\n    this.tokenize(node.leftComparison);\n    this.node(node.middle);\n\n    if (node.right) {\n        this.tokenize(node.rightComparison);\n        this.node(node.right);\n    }\n\n    this.token(RightParenthesis, ')');\n}\n","import {\n    Function as FunctionToken,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'Function';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [[]]\n};\n\n// <function-token> <sequence> )\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    const name = this.consumeFunctionName();\n    const nameLowerCase = name.toLowerCase();\n    let children;\n\n    children = recognizer.hasOwnProperty(nameLowerCase)\n        ? recognizer[nameLowerCase].call(this, recognizer)\n        : readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Function',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(FunctionToken, node.name + '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n","import {\n    Function as FunctionToken,\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'GeneralEnclosed';\nexport const structure = {\n    kind: String,\n    function: [String, null],\n    children: [[]]\n};\n\n// <function-token> <any-value> )\n// ( <any-value> )\nexport function parse(kind) {\n    const start = this.tokenStart;\n    let functionName = null;\n\n    if (this.tokenType === FunctionToken) {\n        functionName = this.consumeFunctionName();\n    } else {\n        this.eat(LeftParenthesis);\n    }\n\n    const children = this.parseWithFallback(\n        () => {\n            const startValueToken = this.tokenIndex;\n            const children = this.readSequence(this.scope.Value);\n\n            if (this.eof === false &&\n                this.isBalanceEdge(startValueToken) === false) {\n                this.error();\n            }\n\n            return children;\n        },\n        () => this.createSingleNodeList(\n            this.Raw(null, false)\n        )\n    );\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'GeneralEnclosed',\n        loc: this.getLocation(start, this.tokenStart),\n        kind,\n        function: functionName,\n        children\n    };\n}\n\nexport function generate(node) {\n    if (node.function) {\n        this.token(FunctionToken, node.function + '(');\n    } else {\n        this.token(LeftParenthesis, '(');\n    }\n\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n","import { Hash } from '../../tokenizer/index.js';\n\n// '#' ident\nexport const xxx = 'XXX';\nexport const name = 'Hash';\nexport const structure = {\n    value: String\n};\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(Hash);\n\n    return {\n        type: 'Hash',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start + 1)\n    };\n}\nexport function generate(node) {\n    this.token(Hash, '#' + node.value);\n}\n\n","import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Identifier';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.name);\n}\n","import { Hash, Delim } from '../../tokenizer/index.js';\n\nexport const name = 'IdSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // TODO: check value is an ident\n    this.eat(Hash);\n\n    return {\n        type: 'IdSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start + 1)\n    };\n}\n\nexport function generate(node) {\n    // Using Delim instead of Hash is a hack to avoid for a whitespace between ident and id-selector\n    // in safe mode (e.g. \"a#id\"), because IE11 doesn't allow a sequence <ident-token> <hash-token>\n    // without a whitespace in values (e.g. \"1px solid#000\")\n    this.token(Delim, '#' + node.name);\n}\n","import { Ident, Delim } from '../../tokenizer/index.js';\n\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\nexport const name = 'Layer';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    let tokenStart = this.tokenStart;\n    let name = this.consume(Ident);\n\n    while (this.isDelim(FULLSTOP)) {\n        this.eat(Delim);\n        name += '.' + this.consume(Ident);\n    }\n\n    return {\n        type: 'Layer',\n        loc: this.getLocation(tokenStart, this.tokenStart),\n        name\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n","import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'LayerList';\nexport const structure = {\n    children: [[\n        'Layer'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    while (!this.eof) {\n        children.push(this.Layer());\n\n        if (this.lookupTypeNonSC(0) !== Comma) {\n            break;\n        }\n\n        this.skipSC();\n        this.next();\n        this.skipSC();\n    }\n\n    return {\n        type: 'LayerList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n","import {\n    Comma,\n    EOF,\n    Ident,\n    LeftCurlyBracket,\n    LeftParenthesis,\n    Function as FunctionToken,\n    Semicolon\n} from '../../tokenizer/index.js';\n\nexport const name = 'MediaQuery';\nexport const structure = {\n    modifier: [String, null],\n    mediaType: [String, null],\n    condition: ['Condition', null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let modifier = null;\n    let mediaType = null;\n    let condition = null;\n\n    this.skipSC();\n\n    if (this.tokenType === Ident && this.lookupTypeNonSC(1) !== LeftParenthesis) {\n        // [ not | only ]? <media-type>\n        const ident = this.consume(Ident);\n        const identLowerCase = ident.toLowerCase();\n\n        if (identLowerCase === 'not' || identLowerCase === 'only') {\n            this.skipSC();\n            modifier = identLowerCase;\n            mediaType = this.consume(Ident);\n        } else {\n            mediaType = ident;\n        }\n\n        switch (this.lookupTypeNonSC(0)) {\n            case Ident: {\n                // and <media-condition-without-or>\n                this.skipSC();\n                this.eatIdent('and');\n                condition = this.Condition('media');\n                break;\n            }\n\n            case LeftCurlyBracket:\n            case Semicolon:\n            case Comma:\n            case EOF:\n                break;\n\n            default:\n                this.error('Identifier or parenthesis is expected');\n        }\n    } else {\n        switch (this.tokenType) {\n            case Ident:\n            case LeftParenthesis:\n            case FunctionToken: {\n                // <media-condition>\n                condition = this.Condition('media');\n                break;\n            }\n\n            case LeftCurlyBracket:\n            case Semicolon:\n            case EOF:\n                break;\n\n            default:\n                this.error('Identifier or parenthesis is expected');\n        }\n    }\n\n    return {\n        type: 'MediaQuery',\n        loc: this.getLocation(start, this.tokenStart),\n        modifier,\n        mediaType,\n        condition\n    };\n}\n\nexport function generate(node) {\n    if (node.mediaType) {\n        if (node.modifier) {\n            this.token(Ident, node.modifier);\n        }\n\n        this.token(Ident, node.mediaType);\n\n        if (node.condition) {\n            this.token(Ident, 'and');\n            this.node(node.condition);\n        }\n    } else if (node.condition) {\n        this.node(node.condition);\n    }\n}\n\n","import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'MediaQueryList';\nexport const structure = {\n    children: [[\n        'MediaQuery'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    while (!this.eof) {\n        children.push(this.MediaQuery());\n\n        if (this.tokenType !== Comma) {\n            break;\n        }\n\n        this.next();\n    }\n\n    return {\n        type: 'MediaQueryList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n","import { Delim } from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nexport const name = 'NestingSelector';\nexport const structure = {\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eatDelim(AMPERSAND);\n\n    return {\n        type: 'NestingSelector',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(Delim, '&');\n}\n","import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Nth';\nexport const structure = {\n    nth: ['AnPlusB', 'Identifier'],\n    selector: ['SelectorList', null]\n};\n\nexport function parse() {\n    this.skipSC();\n\n    const start = this.tokenStart;\n    let end = start;\n    let selector = null;\n    let nth;\n\n    if (this.lookupValue(0, 'odd') || this.lookupValue(0, 'even')) {\n        nth = this.Identifier();\n    } else {\n        nth = this.AnPlusB();\n    }\n\n    end = this.tokenStart;\n    this.skipSC();\n\n    if (this.lookupValue(0, 'of')) {\n        this.next();\n\n        selector = this.SelectorList();\n        end = this.tokenStart;\n    }\n\n    return {\n        type: 'Nth',\n        loc: this.getLocation(start, end),\n        nth,\n        selector\n    };\n}\n\nexport function generate(node) {\n    this.node(node.nth);\n    if (node.selector !== null) {\n        this.token(Ident, 'of');\n        this.node(node.selector);\n    }\n}\n","import { Number as NumberToken } from '../../tokenizer/index.js';\n\nexport const name = 'Number';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Number',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consume(NumberToken)\n    };\n}\n\nexport function generate(node) {\n    this.token(NumberToken, node.value);\n}\n","// '/' | '*' | ',' | ':' | '+' | '-'\nexport const name = 'Operator';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.next();\n\n    return {\n        type: 'Operator',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n","import {\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Parentheses';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftParenthesis);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Parentheses',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n","import { Percentage } from '../../tokenizer/index.js';\n\nexport const name = 'Percentage';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Percentage',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consumeNumber(Percentage)\n    };\n}\n\nexport function generate(node) {\n    this.token(Percentage, node.value + '%');\n}\n","import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'PseudoClassSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// : [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (this.lookupNonWSType(0) == RightParenthesis) {\n            children = this.createList();\n        } else if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoClassSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n","import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'PseudoElementSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// :: [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (this.lookupNonWSType(0) == RightParenthesis) {\n            children = this.createList();\n        } else if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoElementSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n","import {\n    Delim,\n    Number as NumberToken,\n    Function as FunctionToken\n} from '../../tokenizer/index.js';\n\nconst SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\n\n// Media Queries Level 3 defines terms of <ratio> as a positive (not zero or negative)\n// integers (see https://drafts.csswg.org/mediaqueries-3/#values)\n// However, Media Queries Level 4 removes any definition of values\n// (see https://drafts.csswg.org/mediaqueries-4/#values) and refers to\n// CSS Values and Units for detail. In CSS Values and Units Level 4 a <ratio>\n// definition was added (see https://drafts.csswg.org/css-values-4/#ratios) which\n// defines ratio as \"<number [0,∞]> [ / <number [0,∞]> ]?\" and based on it\n// any constrains on terms were removed. Parser also doesn't test numbers\n// in any way to make possible for linting and fixing them by the tools using CSSTree.\n// An additional syntax examination may be applied by a lexer.\nfunction consumeTerm() {\n    this.skipSC();\n\n    switch (this.tokenType) {\n        case NumberToken:\n            return this.Number();\n\n        case FunctionToken:\n            return this.Function(this.readSequence, this.scope.Value);\n\n        default:\n            this.error('Number of function is expected');\n    }\n}\n\nexport const name = 'Ratio';\nexport const structure = {\n    left: ['Number', 'Function'],\n    right: ['Number', 'Function', null]\n};\n\n// <number [0,∞]> [ / <number [0,∞]> ]?\nexport function parse() {\n    const start = this.tokenStart;\n    const left = consumeTerm.call(this);\n    let right = null;\n\n    this.skipSC();\n    if (this.isDelim(SOLIDUS)) {\n        this.eatDelim(SOLIDUS);\n        right = consumeTerm.call(this);\n    }\n\n    return {\n        type: 'Ratio',\n        loc: this.getLocation(start, this.tokenStart),\n        left,\n        right\n    };\n}\n\nexport function generate(node) {\n    this.node(node.left);\n    this.token(Delim, '/');\n    if (node.right) {\n        this.node(node.right);\n    } else {\n        this.node(NumberToken, 1);\n    }\n}\n","import { WhiteSpace } from '../../tokenizer/index.js';\n\nfunction getOffsetExcludeWS() {\n    if (this.tokenIndex > 0) {\n        if (this.lookupType(-1) === WhiteSpace) {\n            return this.tokenIndex > 1\n                ? this.getTokenStart(this.tokenIndex - 1)\n                : this.firstCharOffset;\n        }\n    }\n\n    return this.tokenStart;\n}\n\nexport const name = 'Raw';\nexport const structure = {\n    value: String\n};\n\nexport function parse(consumeUntil, excludeWhiteSpace) {\n    const startOffset = this.getTokenStart(this.tokenIndex);\n    let endOffset;\n\n    this.skipUntilBalanced(this.tokenIndex, consumeUntil || this.consumeUntilBalanceEnd);\n\n    if (excludeWhiteSpace && this.tokenStart > startOffset) {\n        endOffset = getOffsetExcludeWS.call(this);\n    } else {\n        endOffset = this.tokenStart;\n    }\n\n    return {\n        type: 'Raw',\n        loc: this.getLocation(startOffset, endOffset),\n        value: this.substring(startOffset, endOffset)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n","import { LeftCurlyBracket } from '../../tokenizer/index.js';\n\nfunction consumeRaw() {\n    return this.Raw(this.consumeUntilLeftCurlyBracket, true);\n}\n\nfunction consumePrelude() {\n    const prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== LeftCurlyBracket) {\n        this.error();\n    }\n\n    return prelude;\n}\n\nexport const name = 'Rule';\nexport const walkContext = 'rule';\nexport const structure = {\n    prelude: ['SelectorList', 'Raw'],\n    block: ['Block']\n};\n\nexport function parse() {\n    const startToken = this.tokenIndex;\n    const startOffset = this.tokenStart;\n    let prelude;\n    let block;\n\n    if (this.parseRulePrelude) {\n        prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n    } else {\n        prelude = consumeRaw.call(this, startToken);\n    }\n\n    block = this.Block(true);\n\n    return {\n        type: 'Rule',\n        loc: this.getLocation(startOffset, this.tokenStart),\n        prelude,\n        block\n    };\n}\nexport function generate(node) {\n    this.node(node.prelude);\n    this.node(node.block);\n}\n\n","import {\n    Ident,\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Scope';\nexport const structure = {\n    root: ['SelectorList', 'Raw', null],\n    limit: ['SelectorList', 'Raw', null]\n};\n\nexport function parse() {\n    let root = null;\n    let limit = null;\n\n    this.skipSC();\n\n    const startOffset = this.tokenStart;\n    if (this.tokenType === LeftParenthesis) {\n        this.next();\n        this.skipSC();\n        root = this.parseWithFallback(\n            this.SelectorList,\n            () => this.Raw(false, true)\n        );\n        this.skipSC();\n        this.eat(RightParenthesis);\n    }\n\n    if (this.lookupNonWSType(0) === Ident) {\n        this.skipSC();\n        this.eatIdent('to');\n        this.skipSC();\n        this.eat(LeftParenthesis);\n        this.skipSC();\n        limit = this.parseWithFallback(\n            this.SelectorList,\n            () => this.Raw(false, true)\n        );\n        this.skipSC();\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Scope',\n        loc: this.getLocation(startOffset, this.tokenStart),\n        root,\n        limit\n    };\n}\n\nexport function generate(node) {\n    if (node.root) {\n        this.token(LeftParenthesis, '(');\n        this.node(node.root);\n        this.token(RightParenthesis, ')');\n    }\n\n    if (node.limit) {\n        this.token(Ident, 'to');\n        this.token(LeftParenthesis, '(');\n        this.node(node.limit);\n        this.token(RightParenthesis, ')');\n    }\n}\n","export const name = 'Selector';\nexport const structure = {\n    children: [[\n        'TypeSelector',\n        'IdSelector',\n        'ClassSelector',\n        'AttributeSelector',\n        'PseudoClassSelector',\n        'PseudoElementSelector',\n        'Combinator'\n    ]]\n};\n\nexport function parse() {\n    const children = this.readSequence(this.scope.Selector);\n\n    // nothing were consumed\n    if (this.getFirstListNode(children) === null) {\n        this.error('Selector is expected');\n    }\n\n    return {\n        type: 'Selector',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n","import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'SelectorList';\nexport const walkContext = 'selector';\nexport const structure = {\n    children: [[\n        'Selector',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    while (!this.eof) {\n        children.push(this.Selector());\n\n        if (this.tokenType === Comma) {\n            this.next();\n            continue;\n        }\n\n        break;\n    }\n\n    return {\n        type: 'SelectorList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n","import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;  // \"\nconst APOSTROPHE = 0x0027;      // '\n\nexport function decode(str) {\n    const len = str.length;\n    const firstChar = str.charCodeAt(0);\n    const start = firstChar === QUOTATION_MARK || firstChar === APOSTROPHE ? 1 : 0;\n    const end = start === 1 && len > 1 && str.charCodeAt(len - 1) === firstChar ? len - 2 : len - 1;\n    let decoded = '';\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last quote as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-a-string\n// § 2.1. Common Serializing Idioms\nexport function encode(str, apostrophe) {\n    const quote = apostrophe ? '\\'' : '\"';\n    const quoteCode = apostrophe ? APOSTROPHE : QUOTATION_MARK;\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        // If the character is '\"' (U+0022) or \"\\\" (U+005C), the escaped character.\n        if (code === quoteCode || code === REVERSE_SOLIDUS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && (isHexDigit(code) || isWhiteSpace(code))) {\n                encoded += ' ';\n            }\n\n            // Otherwise, the character itself.\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return quote + encoded + quote;\n}\n","import { String as StringToken } from '../../tokenizer/index.js';\nimport { decode, encode } from '../../utils/string.js';\n\nexport const name = 'String';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'String',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: decode(this.consume(StringToken))\n    };\n}\n\nexport function generate(node) {\n    this.token(StringToken, encode(node.value));\n}\n","import {\n    WhiteSpace,\n    Comment,\n    AtKeyword,\n    CDO,\n    CDC\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction consumeRaw() {\n    return this.Raw(null, false);\n}\n\nexport const name = 'StyleSheet';\nexport const walkContext = 'stylesheet';\nexport const structure = {\n    children: [[\n        'Comment',\n        'CDO',\n        'CDC',\n        'Atrule',\n        'Rule',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.createList();\n    let child;\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Comment:\n                // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n                if (this.charCodeAt(this.tokenStart + 2) !== EXCLAMATIONMARK) {\n                    this.next();\n                    continue;\n                }\n\n                child = this.Comment();\n                break;\n\n            case CDO: // <!--\n                child = this.CDO();\n                break;\n\n            case CDC: // -->\n                child = this.CDC();\n                break;\n\n            // CSS Syntax Module Level 3\n            // §2.2 Error handling\n            // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n            case AtKeyword:\n                child = this.parseWithFallback(this.Atrule, consumeRaw);\n                break;\n\n            // Anything else starts a qualified rule ...\n            default:\n                child = this.parseWithFallback(this.Rule, consumeRaw);\n        }\n\n        children.push(child);\n    }\n\n    return {\n        type: 'StyleSheet',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n","import {\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'SupportsDeclaration';\nexport const structure = {\n    declaration: 'Declaration'\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(LeftParenthesis);\n    this.skipSC();\n\n    const declaration = this.Declaration();\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'SupportsDeclaration',\n        loc: this.getLocation(start, this.tokenStart),\n        declaration\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.node(node.declaration);\n    this.token(RightParenthesis, ')');\n}\n","import { Ident } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;     // U+002A ASTERISK (*)\nconst VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\n\nfunction eatIdentifierOrAsterisk() {\n    if (this.tokenType !== Ident &&\n        this.isDelim(ASTERISK) === false) {\n        this.error('Identifier or asterisk is expected');\n    }\n\n    this.next();\n}\n\nexport const name = 'TypeSelector';\nexport const structure = {\n    name: String\n};\n\n// ident\n// ident|ident\n// ident|*\n// *\n// *|ident\n// *|*\n// |ident\n// |*\nexport function parse() {\n    const start = this.tokenStart;\n\n    if (this.isDelim(VERTICALLINE)) {\n        this.next();\n        eatIdentifierOrAsterisk.call(this);\n    } else {\n        eatIdentifierOrAsterisk.call(this);\n\n        if (this.isDelim(VERTICALLINE)) {\n            this.next();\n            eatIdentifierOrAsterisk.call(this);\n        }\n    }\n\n    return {\n        type: 'TypeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n","import {\n    isHexDigit,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\n\nfunction eatHexSequence(offset, allowDash) {\n    let len = 0;\n\n    for (let pos = this.tokenStart + offset; pos < this.tokenEnd; pos++) {\n        const code = this.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\n            eatHexSequence.call(this, offset + len + 1, false);\n            return -1;\n        }\n\n        if (!isHexDigit(code)) {\n            this.error(\n                allowDash && len !== 0\n                    ? 'Hyphen minus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\n                pos\n            );\n        }\n\n        if (++len > 6) {\n            this.error('Too many hex digits', pos);\n        };\n    }\n\n    this.next();\n    return len;\n}\n\nfunction eatQuestionMarkSequence(max) {\n    let count = 0;\n\n    while (this.isDelim(QUESTIONMARK)) {\n        if (++count > max) {\n            this.error('Too many question marks');\n        }\n\n        this.next();\n    }\n}\n\nfunction startsWith(code) {\n    if (this.charCodeAt(this.tokenStart) !== code) {\n        this.error((code === PLUSSIGN ? 'Plus sign' : 'Hyphen minus') + ' is expected');\n    }\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nfunction scanUnicodeRange() {\n    let hexLength = 0;\n\n    switch (this.tokenType) {\n        case Number:\n            // u <number-token> '?'*\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (this.isDelim(QUESTIONMARK)) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n                break;\n            }\n\n            if (this.tokenType === Dimension ||\n                this.tokenType === Number) {\n                startsWith.call(this, HYPHENMINUS);\n                eatHexSequence.call(this, 1, false);\n                break;\n            }\n\n            break;\n\n        case Dimension:\n            // u <dimension-token> '?'*\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (hexLength > 0) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n            }\n\n            break;\n\n        default:\n            // u '+' <ident-token> '?'*\n            // u '+' '?'+\n            this.eatDelim(PLUSSIGN);\n\n            if (this.tokenType === Ident) {\n                hexLength = eatHexSequence.call(this, 0, true);\n                if (hexLength > 0) {\n                    eatQuestionMarkSequence.call(this, 6 - hexLength);\n                }\n                break;\n            }\n\n            if (this.isDelim(QUESTIONMARK)) {\n                this.next();\n                eatQuestionMarkSequence.call(this, 5);\n                break;\n            }\n\n            this.error('Hex digit or question mark is expected');\n    }\n}\n\nexport const name = 'UnicodeRange';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // U or u\n    this.eatIdent('u');\n    scanUnicodeRange.call(this);\n\n    return {\n        type: 'UnicodeRange',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n","import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst SPACE = 0x0020;            // U+0020 SPACE\nconst REVERSE_SOLIDUS = 0x005c;  // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;   // \"\nconst APOSTROPHE = 0x0027;       // '\nconst LEFTPARENTHESIS = 0x0028;  // U+0028 LEFT PARENTHESIS (()\nconst RIGHTPARENTHESIS = 0x0029; // U+0029 RIGHT PARENTHESIS ())\n\nexport function decode(str) {\n    const len = str.length;\n    let start = 4; // length of \"url(\"\n    let end = str.charCodeAt(len - 1) === RIGHTPARENTHESIS ? len - 2 : len - 1;\n    let decoded = '';\n\n    while (start < end && isWhiteSpace(str.charCodeAt(start))) {\n        start++;\n    }\n\n    while (start < end && isWhiteSpace(str.charCodeAt(end))) {\n        end--;\n    }\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last left parenthesis as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\nexport function encode(str) {\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        if (code === SPACE ||\n            code === REVERSE_SOLIDUS ||\n            code === QUOTATION_MARK ||\n            code === APOSTROPHE ||\n            code === LEFTPARENTHESIS ||\n            code === RIGHTPARENTHESIS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && isHexDigit(code)) {\n                encoded += ' ';\n            }\n\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return 'url(' + encoded + ')';\n}\n","import * as url from '../../utils/url.js';\nimport * as string from '../../utils/string.js';\nimport {\n    Function as FunctionToken,\n    String as StringToken,\n    Url,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Url';\nexport const structure = {\n    value: String\n};\n\n// <url-token> | <function-token> <string> )\nexport function parse() {\n    const start = this.tokenStart;\n    let value;\n\n    switch (this.tokenType) {\n        case Url:\n            value = url.decode(this.consume(Url));\n            break;\n\n        case FunctionToken:\n            if (!this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')) {\n                this.error('Function name must be `url`');\n            }\n\n            this.eat(FunctionToken);\n            this.skipSC();\n            value = string.decode(this.consume(StringToken));\n            this.skipSC();\n            if (!this.eof) {\n                this.eat(RightParenthesis);\n            }\n            break;\n\n        default:\n            this.error('Url or Function is expected');\n    }\n\n    return {\n        type: 'Url',\n        loc: this.getLocation(start, this.tokenStart),\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Url, url.encode(node.value));\n}\n","export const name = 'Value';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.readSequence(this.scope.Value);\n\n    return {\n        type: 'Value',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n","import { WhiteSpace } from '../../tokenizer/index.js';\n\nconst SPACE = Object.freeze({\n    type: 'WhiteSpace',\n    loc: null,\n    value: ' '\n});\n\nexport const name = 'WhiteSpace';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    this.eat(WhiteSpace);\n    return SPACE;\n\n    // return {\n    //     type: 'WhiteSpace',\n    //     loc: this.getLocation(this.tokenStart, this.tokenEnd),\n    //     value: this.consume(WHITESPACE)\n    // };\n}\n\nexport function generate(node) {\n    this.token(WhiteSpace, node.value);\n}\n","import { cssWideKeywords } from '../../lexer/generic-const.js';\nimport definitions from '../../data.js';\nimport * as node from '../node/index.js';\n\nexport default {\n    generic: true,\n    cssWideKeywords,\n    ...definitions,\n    node\n};\n","export default {\n    \"generic\": true,\n    \"cssWideKeywords\": [\n        \"initial\",\n        \"inherit\",\n        \"unset\",\n        \"revert\",\n        \"revert-layer\"\n    ],\n    \"units\": {\n        \"angle\": [\n            \"deg\",\n            \"grad\",\n            \"rad\",\n            \"turn\"\n        ],\n        \"decibel\": [\n            \"db\"\n        ],\n        \"flex\": [\n            \"fr\"\n        ],\n        \"frequency\": [\n            \"hz\",\n            \"khz\"\n        ],\n        \"length\": [\n            \"cm\",\n            \"mm\",\n            \"q\",\n            \"in\",\n            \"pt\",\n            \"pc\",\n            \"px\",\n            \"em\",\n            \"rem\",\n            \"ex\",\n            \"rex\",\n            \"cap\",\n            \"rcap\",\n            \"ch\",\n            \"rch\",\n            \"ic\",\n            \"ric\",\n            \"lh\",\n            \"rlh\",\n            \"vw\",\n            \"svw\",\n            \"lvw\",\n            \"dvw\",\n            \"vh\",\n            \"svh\",\n            \"lvh\",\n            \"dvh\",\n            \"vi\",\n            \"svi\",\n            \"lvi\",\n            \"dvi\",\n            \"vb\",\n            \"svb\",\n            \"lvb\",\n            \"dvb\",\n            \"vmin\",\n            \"svmin\",\n            \"lvmin\",\n            \"dvmin\",\n            \"vmax\",\n            \"svmax\",\n            \"lvmax\",\n            \"dvmax\",\n            \"cqw\",\n            \"cqh\",\n            \"cqi\",\n            \"cqb\",\n            \"cqmin\",\n            \"cqmax\"\n        ],\n        \"resolution\": [\n            \"dpi\",\n            \"dpcm\",\n            \"dppx\",\n            \"x\"\n        ],\n        \"semitones\": [\n            \"st\"\n        ],\n        \"time\": [\n            \"s\",\n            \"ms\"\n        ]\n    },\n    \"types\": {\n        \"abs()\": \"abs( <calc-sum> )\",\n        \"absolute-size\": \"xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large\",\n        \"acos()\": \"acos( <calc-sum> )\",\n        \"alpha-value\": \"<number>|<percentage>\",\n        \"angle-percentage\": \"<angle>|<percentage>\",\n        \"angular-color-hint\": \"<angle-percentage>\",\n        \"angular-color-stop\": \"<color>&&<color-stop-angle>?\",\n        \"angular-color-stop-list\": \"[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>\",\n        \"animateable-feature\": \"scroll-position|contents|<custom-ident>\",\n        \"asin()\": \"asin( <calc-sum> )\",\n        \"atan()\": \"atan( <calc-sum> )\",\n        \"atan2()\": \"atan2( <calc-sum> , <calc-sum> )\",\n        \"attachment\": \"scroll|fixed|local\",\n        \"attr()\": \"attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )\",\n        \"attr-matcher\": \"['~'|'|'|'^'|'$'|'*']? '='\",\n        \"attr-modifier\": \"i|s\",\n        \"attribute-selector\": \"'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'\",\n        \"auto-repeat\": \"repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"auto-track-list\": \"[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?\",\n        \"axis\": \"block|inline|x|y\",\n        \"baseline-position\": \"[first|last]? baseline\",\n        \"basic-shape\": \"<inset()>|<xywh()>|<rect()>|<circle()>|<ellipse()>|<polygon()>|<path()>\",\n        \"bg-image\": \"none|<image>\",\n        \"bg-layer\": \"<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"bg-position\": \"[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]\",\n        \"bg-size\": \"[<length-percentage>|auto]{1,2}|cover|contain\",\n        \"blur()\": \"blur( <length> )\",\n        \"blend-mode\": \"normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity\",\n        \"box\": \"border-box|padding-box|content-box\",\n        \"brightness()\": \"brightness( <number-percentage> )\",\n        \"calc()\": \"calc( <calc-sum> )\",\n        \"calc-sum\": \"<calc-product> [['+'|'-'] <calc-product>]*\",\n        \"calc-product\": \"<calc-value> ['*' <calc-value>|'/' <number>]*\",\n        \"calc-value\": \"<number>|<dimension>|<percentage>|<calc-constant>|( <calc-sum> )\",\n        \"calc-constant\": \"e|pi|infinity|-infinity|NaN\",\n        \"cf-final-image\": \"<image>|<color>\",\n        \"cf-mixing-image\": \"<percentage>?&&<image>\",\n        \"circle()\": \"circle( [<shape-radius>]? [at <position>]? )\",\n        \"clamp()\": \"clamp( <calc-sum>#{3} )\",\n        \"class-selector\": \"'.' <ident-token>\",\n        \"clip-source\": \"<url>\",\n        \"color\": \"<color-base>|currentColor|<system-color>|<device-cmyk()>|<light-dark()>|<-non-standard-color>\",\n        \"color-stop\": \"<color-stop-length>|<color-stop-angle>\",\n        \"color-stop-angle\": \"<angle-percentage>{1,2}\",\n        \"color-stop-length\": \"<length-percentage>{1,2}\",\n        \"color-stop-list\": \"[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>\",\n        \"color-interpolation-method\": \"in [<rectangular-color-space>|<polar-color-space> <hue-interpolation-method>?|<custom-color-space>]\",\n        \"combinator\": \"'>'|'+'|'~'|['|' '|']\",\n        \"common-lig-values\": \"[common-ligatures|no-common-ligatures]\",\n        \"compat-auto\": \"searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button\",\n        \"composite-style\": \"clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor\",\n        \"compositing-operator\": \"add|subtract|intersect|exclude\",\n        \"compound-selector\": \"[<type-selector>? <subclass-selector>*]!\",\n        \"compound-selector-list\": \"<compound-selector>#\",\n        \"complex-selector\": \"<complex-selector-unit> [<combinator>? <complex-selector-unit>]*\",\n        \"complex-selector-list\": \"<complex-selector>#\",\n        \"conic-gradient()\": \"conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"contextual-alt-values\": \"[contextual|no-contextual]\",\n        \"content-distribution\": \"space-between|space-around|space-evenly|stretch\",\n        \"content-list\": \"[<string>|contents|<image>|<counter>|<quote>|<target>|<leader()>|<attr()>]+\",\n        \"content-position\": \"center|start|end|flex-start|flex-end\",\n        \"content-replacement\": \"<image>\",\n        \"contrast()\": \"contrast( [<number-percentage>] )\",\n        \"cos()\": \"cos( <calc-sum> )\",\n        \"counter\": \"<counter()>|<counters()>\",\n        \"counter()\": \"counter( <counter-name> , <counter-style>? )\",\n        \"counter-name\": \"<custom-ident>\",\n        \"counter-style\": \"<counter-style-name>|symbols( )\",\n        \"counter-style-name\": \"<custom-ident>\",\n        \"counters()\": \"counters( <counter-name> , <string> , <counter-style>? )\",\n        \"cross-fade()\": \"cross-fade( <cf-mixing-image> , <cf-final-image>? )\",\n        \"cubic-bezier-timing-function\": \"ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )\",\n        \"deprecated-system-color\": \"ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText\",\n        \"discretionary-lig-values\": \"[discretionary-ligatures|no-discretionary-ligatures]\",\n        \"display-box\": \"contents|none\",\n        \"display-inside\": \"flow|flow-root|table|flex|grid|ruby\",\n        \"display-internal\": \"table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container\",\n        \"display-legacy\": \"inline-block|inline-list-item|inline-table|inline-flex|inline-grid\",\n        \"display-listitem\": \"<display-outside>?&&[flow|flow-root]?&&list-item\",\n        \"display-outside\": \"block|inline|run-in\",\n        \"drop-shadow()\": \"drop-shadow( <length>{2,3} <color>? )\",\n        \"east-asian-variant-values\": \"[jis78|jis83|jis90|jis04|simplified|traditional]\",\n        \"east-asian-width-values\": \"[full-width|proportional-width]\",\n        \"element()\": \"element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )\",\n        \"ellipse()\": \"ellipse( [<shape-radius>{2}]? [at <position>]? )\",\n        \"ending-shape\": \"circle|ellipse\",\n        \"env()\": \"env( <custom-ident> , <declaration-value>? )\",\n        \"exp()\": \"exp( <calc-sum> )\",\n        \"explicit-track-list\": \"[<line-names>? <track-size>]+ <line-names>?\",\n        \"family-name\": \"<string>|<custom-ident>+\",\n        \"feature-tag-value\": \"<string> [<integer>|on|off]?\",\n        \"feature-type\": \"@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation\",\n        \"feature-value-block\": \"<feature-type> '{' <feature-value-declaration-list> '}'\",\n        \"feature-value-block-list\": \"<feature-value-block>+\",\n        \"feature-value-declaration\": \"<custom-ident> : <integer>+ ;\",\n        \"feature-value-declaration-list\": \"<feature-value-declaration>\",\n        \"feature-value-name\": \"<custom-ident>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"filter-function\": \"<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>\",\n        \"filter-function-list\": \"[<filter-function>|<url>]+\",\n        \"final-bg-layer\": \"<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"fixed-breadth\": \"<length-percentage>\",\n        \"fixed-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"fixed-size\": \"<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )\",\n        \"font-stretch-absolute\": \"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>\",\n        \"font-variant-css21\": \"[normal|small-caps]\",\n        \"font-weight-absolute\": \"normal|bold|<number [1,1000]>\",\n        \"frequency-percentage\": \"<frequency>|<percentage>\",\n        \"general-enclosed\": \"[<function-token> <any-value>? )]|[( <any-value>? )]\",\n        \"generic-family\": \"<generic-script-specific>|<generic-complete>|<generic-incomplete>|<-non-standard-generic-family>\",\n        \"generic-name\": \"serif|sans-serif|cursive|fantasy|monospace\",\n        \"geometry-box\": \"<shape-box>|fill-box|stroke-box|view-box\",\n        \"gradient\": \"<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<repeating-conic-gradient()>|<-legacy-gradient>\",\n        \"grayscale()\": \"grayscale( <number-percentage> )\",\n        \"grid-line\": \"auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]\",\n        \"historical-lig-values\": \"[historical-ligatures|no-historical-ligatures]\",\n        \"hsl()\": \"hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hsla()\": \"hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hue\": \"<number>|<angle>\",\n        \"hue-rotate()\": \"hue-rotate( <angle> )\",\n        \"hue-interpolation-method\": \"[shorter|longer|increasing|decreasing] hue\",\n        \"hwb()\": \"hwb( [<hue>|none] [<percentage>|none] [<percentage>|none] [/ [<alpha-value>|none]]? )\",\n        \"hypot()\": \"hypot( <calc-sum># )\",\n        \"image\": \"<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>\",\n        \"image()\": \"image( <image-tags>? [<image-src>? , <color>?]! )\",\n        \"image-set()\": \"image-set( <image-set-option># )\",\n        \"image-set-option\": \"[<image>|<string>] [<resolution>||type( <string> )]\",\n        \"image-src\": \"<url>|<string>\",\n        \"image-tags\": \"ltr|rtl\",\n        \"inflexible-breadth\": \"<length-percentage>|min-content|max-content|auto\",\n        \"inset()\": \"inset( <length-percentage>{1,4} [round <'border-radius'>]? )\",\n        \"invert()\": \"invert( <number-percentage> )\",\n        \"keyframes-name\": \"<custom-ident>|<string>\",\n        \"keyframe-block\": \"<keyframe-selector># { <declaration-list> }\",\n        \"keyframe-block-list\": \"<keyframe-block>+\",\n        \"keyframe-selector\": \"from|to|<percentage>|<timeline-range-name> <percentage>\",\n        \"lab()\": \"lab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )\",\n        \"layer()\": \"layer( <layer-name> )\",\n        \"layer-name\": \"<ident> ['.' <ident>]*\",\n        \"lch()\": \"lch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )\",\n        \"leader()\": \"leader( <leader-type> )\",\n        \"leader-type\": \"dotted|solid|space|<string>\",\n        \"length-percentage\": \"<length>|<percentage>\",\n        \"light-dark()\": \"light-dark( <color> , <color> )\",\n        \"line-names\": \"'[' <custom-ident>* ']'\",\n        \"line-name-list\": \"[<line-names>|<name-repeat>]+\",\n        \"line-style\": \"none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset\",\n        \"line-width\": \"<length>|thin|medium|thick\",\n        \"linear-color-hint\": \"<length-percentage>\",\n        \"linear-color-stop\": \"<color> <color-stop-length>?\",\n        \"linear-gradient()\": \"linear-gradient( [[<angle>|to <side-or-corner>]||<color-interpolation-method>]? , <color-stop-list> )\",\n        \"log()\": \"log( <calc-sum> , <calc-sum>? )\",\n        \"mask-layer\": \"<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>\",\n        \"mask-position\": \"[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?\",\n        \"mask-reference\": \"none|<image>|<mask-source>\",\n        \"mask-source\": \"<url>\",\n        \"masking-mode\": \"alpha|luminance|match-source\",\n        \"matrix()\": \"matrix( <number>#{6} )\",\n        \"matrix3d()\": \"matrix3d( <number>#{16} )\",\n        \"max()\": \"max( <calc-sum># )\",\n        \"media-and\": \"<media-in-parens> [and <media-in-parens>]+\",\n        \"media-condition\": \"<media-not>|<media-and>|<media-or>|<media-in-parens>\",\n        \"media-condition-without-or\": \"<media-not>|<media-and>|<media-in-parens>\",\n        \"media-feature\": \"( [<mf-plain>|<mf-boolean>|<mf-range>] )\",\n        \"media-in-parens\": \"( <media-condition> )|<media-feature>|<general-enclosed>\",\n        \"media-not\": \"not <media-in-parens>\",\n        \"media-or\": \"<media-in-parens> [or <media-in-parens>]+\",\n        \"media-query\": \"<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?\",\n        \"media-query-list\": \"<media-query>#\",\n        \"media-type\": \"<ident>\",\n        \"mf-boolean\": \"<mf-name>\",\n        \"mf-name\": \"<ident>\",\n        \"mf-plain\": \"<mf-name> : <mf-value>\",\n        \"mf-range\": \"<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>\",\n        \"mf-value\": \"<number>|<dimension>|<ident>|<ratio>\",\n        \"min()\": \"min( <calc-sum># )\",\n        \"minmax()\": \"minmax( [<length-percentage>|min-content|max-content|auto] , [<length-percentage>|<flex>|min-content|max-content|auto] )\",\n        \"mod()\": \"mod( <calc-sum> , <calc-sum> )\",\n        \"name-repeat\": \"repeat( [<integer [1,∞]>|auto-fill] , <line-names>+ )\",\n        \"named-color\": \"transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen\",\n        \"namespace-prefix\": \"<ident>\",\n        \"ns-prefix\": \"[<ident-token>|'*']? '|'\",\n        \"number-percentage\": \"<number>|<percentage>\",\n        \"numeric-figure-values\": \"[lining-nums|oldstyle-nums]\",\n        \"numeric-fraction-values\": \"[diagonal-fractions|stacked-fractions]\",\n        \"numeric-spacing-values\": \"[proportional-nums|tabular-nums]\",\n        \"nth\": \"<an-plus-b>|even|odd\",\n        \"opacity()\": \"opacity( [<number-percentage>] )\",\n        \"overflow-position\": \"unsafe|safe\",\n        \"outline-radius\": \"<length>|<percentage>\",\n        \"page-body\": \"<declaration>? [; <page-body>]?|<page-margin-box> <page-body>\",\n        \"page-margin-box\": \"<page-margin-box-type> '{' <declaration-list> '}'\",\n        \"page-margin-box-type\": \"@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom\",\n        \"page-selector-list\": \"[<page-selector>#]?\",\n        \"page-selector\": \"<pseudo-page>+|<ident> <pseudo-page>*\",\n        \"page-size\": \"A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger\",\n        \"path()\": \"path( [<fill-rule> ,]? <string> )\",\n        \"paint()\": \"paint( <ident> , <declaration-value>? )\",\n        \"perspective()\": \"perspective( [<length [0,∞]>|none] )\",\n        \"polygon()\": \"polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )\",\n        \"polar-color-space\": \"hsl|hwb|lch|oklch\",\n        \"position\": \"[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]\",\n        \"pow()\": \"pow( <calc-sum> , <calc-sum> )\",\n        \"pseudo-class-selector\": \"':' <ident-token>|':' <function-token> <any-value> ')'\",\n        \"pseudo-element-selector\": \"':' <pseudo-class-selector>|<legacy-pseudo-element-selector>\",\n        \"pseudo-page\": \": [left|right|first|blank]\",\n        \"quote\": \"open-quote|close-quote|no-open-quote|no-close-quote\",\n        \"radial-gradient()\": \"radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"ratio\": \"<number [0,∞]> [/ <number [0,∞]>]?\",\n        \"ray()\": \"ray( <angle>&&<ray-size>?&&contain?&&[at <position>]? )\",\n        \"ray-size\": \"closest-side|closest-corner|farthest-side|farthest-corner|sides\",\n        \"rectangular-color-space\": \"srgb|srgb-linear|display-p3|a98-rgb|prophoto-rgb|rec2020|lab|oklab|xyz|xyz-d50|xyz-d65\",\n        \"relative-selector\": \"<combinator>? <complex-selector>\",\n        \"relative-selector-list\": \"<relative-selector>#\",\n        \"relative-size\": \"larger|smaller\",\n        \"rem()\": \"rem( <calc-sum> , <calc-sum> )\",\n        \"repeat-style\": \"repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}\",\n        \"repeating-conic-gradient()\": \"repeating-conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"repeating-linear-gradient()\": \"repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"repeating-radial-gradient()\": \"repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"reversed-counter-name\": \"reversed( <counter-name> )\",\n        \"rgb()\": \"rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )\",\n        \"rgba()\": \"rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )\",\n        \"rotate()\": \"rotate( [<angle>|<zero>] )\",\n        \"rotate3d()\": \"rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )\",\n        \"rotateX()\": \"rotateX( [<angle>|<zero>] )\",\n        \"rotateY()\": \"rotateY( [<angle>|<zero>] )\",\n        \"rotateZ()\": \"rotateZ( [<angle>|<zero>] )\",\n        \"round()\": \"round( <rounding-strategy>? , <calc-sum> , <calc-sum> )\",\n        \"rounding-strategy\": \"nearest|up|down|to-zero\",\n        \"saturate()\": \"saturate( <number-percentage> )\",\n        \"scale()\": \"scale( [<number>|<percentage>]#{1,2} )\",\n        \"scale3d()\": \"scale3d( [<number>|<percentage>]#{3} )\",\n        \"scaleX()\": \"scaleX( [<number>|<percentage>] )\",\n        \"scaleY()\": \"scaleY( [<number>|<percentage>] )\",\n        \"scaleZ()\": \"scaleZ( [<number>|<percentage>] )\",\n        \"scroll()\": \"scroll( [<axis>||<scroller>]? )\",\n        \"scroller\": \"root|nearest|self\",\n        \"self-position\": \"center|start|end|self-start|self-end|flex-start|flex-end\",\n        \"shape-radius\": \"<length-percentage>|closest-side|farthest-side\",\n        \"sign()\": \"sign( <calc-sum> )\",\n        \"skew()\": \"skew( [<angle>|<zero>] , [<angle>|<zero>]? )\",\n        \"skewX()\": \"skewX( [<angle>|<zero>] )\",\n        \"skewY()\": \"skewY( [<angle>|<zero>] )\",\n        \"sepia()\": \"sepia( <number-percentage> )\",\n        \"shadow\": \"inset?&&<length>{2,4}&&<color>?\",\n        \"shadow-t\": \"[<length>{2,3}&&<color>?]\",\n        \"shape\": \"rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )\",\n        \"shape-box\": \"<box>|margin-box\",\n        \"side-or-corner\": \"[left|right]||[top|bottom]\",\n        \"sin()\": \"sin( <calc-sum> )\",\n        \"single-animation\": \"<'animation-duration'>||<easing-function>||<'animation-delay'>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]||<single-animation-timeline>\",\n        \"single-animation-direction\": \"normal|reverse|alternate|alternate-reverse\",\n        \"single-animation-fill-mode\": \"none|forwards|backwards|both\",\n        \"single-animation-iteration-count\": \"infinite|<number>\",\n        \"single-animation-play-state\": \"running|paused\",\n        \"single-animation-timeline\": \"auto|none|<dashed-ident>|<scroll()>|<view()>\",\n        \"single-transition\": \"[none|<single-transition-property>]||<time>||<easing-function>||<time>||<transition-behavior-value>\",\n        \"single-transition-property\": \"all|<custom-ident>\",\n        \"size\": \"closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}\",\n        \"sqrt()\": \"sqrt( <calc-sum> )\",\n        \"step-position\": \"jump-start|jump-end|jump-none|jump-both|start|end\",\n        \"step-timing-function\": \"step-start|step-end|steps( <integer> [, <step-position>]? )\",\n        \"subclass-selector\": \"<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>\",\n        \"supports-condition\": \"not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*\",\n        \"supports-in-parens\": \"( <supports-condition> )|<supports-feature>|<general-enclosed>\",\n        \"supports-feature\": \"<supports-decl>|<supports-selector-fn>\",\n        \"supports-decl\": \"( <declaration> )\",\n        \"supports-selector-fn\": \"selector( <complex-selector> )\",\n        \"symbol\": \"<string>|<image>|<custom-ident>\",\n        \"system-color\": \"AccentColor|AccentColorText|ActiveText|ButtonBorder|ButtonFace|ButtonText|Canvas|CanvasText|Field|FieldText|GrayText|Highlight|HighlightText|LinkText|Mark|MarkText|SelectedItem|SelectedItemText|VisitedText\",\n        \"tan()\": \"tan( <calc-sum> )\",\n        \"target\": \"<target-counter()>|<target-counters()>|<target-text()>\",\n        \"target-counter()\": \"target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )\",\n        \"target-counters()\": \"target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )\",\n        \"target-text()\": \"target-text( [<string>|<url>] , [content|before|after|first-letter]? )\",\n        \"time-percentage\": \"<time>|<percentage>\",\n        \"timeline-range-name\": \"cover|contain|entry|exit|entry-crossing|exit-crossing\",\n        \"easing-function\": \"linear|<cubic-bezier-timing-function>|<step-timing-function>\",\n        \"track-breadth\": \"<length-percentage>|<flex>|min-content|max-content|auto\",\n        \"track-list\": \"[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?\",\n        \"track-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <track-size>]+ <line-names>? )\",\n        \"track-size\": \"<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( <length-percentage> )\",\n        \"transform-function\": \"<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>\",\n        \"transform-list\": \"<transform-function>+\",\n        \"transition-behavior-value\": \"normal|allow-discrete\",\n        \"translate()\": \"translate( <length-percentage> , <length-percentage>? )\",\n        \"translate3d()\": \"translate3d( <length-percentage> , <length-percentage> , <length> )\",\n        \"translateX()\": \"translateX( <length-percentage> )\",\n        \"translateY()\": \"translateY( <length-percentage> )\",\n        \"translateZ()\": \"translateZ( <length> )\",\n        \"type-or-unit\": \"string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%\",\n        \"type-selector\": \"<wq-name>|<ns-prefix>? '*'\",\n        \"var()\": \"var( <custom-property-name> , <declaration-value>? )\",\n        \"view()\": \"view( [<axis>||<'view-timeline-inset'>]? )\",\n        \"viewport-length\": \"auto|<length-percentage>\",\n        \"visual-box\": \"content-box|padding-box|border-box\",\n        \"wq-name\": \"<ns-prefix>? <ident-token>\",\n        \"-legacy-gradient\": \"<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>\",\n        \"-legacy-linear-gradient\": \"-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-repeating-linear-gradient\": \"-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-linear-gradient-arguments\": \"[<angle>|<side-or-corner>]? , <color-stop-list>\",\n        \"-legacy-radial-gradient\": \"-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-repeating-radial-gradient\": \"-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-radial-gradient-arguments\": \"[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>\",\n        \"-legacy-radial-gradient-size\": \"closest-side|closest-corner|farthest-side|farthest-corner|contain|cover\",\n        \"-legacy-radial-gradient-shape\": \"circle|ellipse\",\n        \"-non-standard-font\": \"-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body\",\n        \"-non-standard-color\": \"-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text\",\n        \"-non-standard-image-rendering\": \"optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast\",\n        \"-non-standard-overflow\": \"overlay|-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable\",\n        \"-non-standard-size\": \"intrinsic|min-intrinsic|-webkit-fill-available|-webkit-fit-content|-webkit-min-content|-webkit-max-content|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content\",\n        \"-webkit-gradient()\": \"-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )\",\n        \"-webkit-gradient-color-stop\": \"from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )\",\n        \"-webkit-gradient-point\": \"[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]\",\n        \"-webkit-gradient-radius\": \"<length>|<percentage>\",\n        \"-webkit-gradient-type\": \"linear|radial\",\n        \"-webkit-mask-box-repeat\": \"repeat|stretch|round\",\n        \"-ms-filter-function-list\": \"<-ms-filter-function>+\",\n        \"-ms-filter-function\": \"<-ms-filter-function-progid>|<-ms-filter-function-legacy>\",\n        \"-ms-filter-function-progid\": \"'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]\",\n        \"-ms-filter-function-legacy\": \"<ident-token>|<function-token> <any-value>? )\",\n        \"absolute-color-base\": \"<hex-color>|<absolute-color-function>|<named-color>|transparent\",\n        \"absolute-color-function\": \"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<oklab()>|<oklch()>|<color()>\",\n        \"age\": \"child|young|old\",\n        \"anchor-name\": \"<dashed-ident>\",\n        \"attr-name\": \"<wq-name>\",\n        \"attr-fallback\": \"<any-value>\",\n        \"bg-clip\": \"<box>|border|text\",\n        \"bottom\": \"<length>|auto\",\n        \"container-name\": \"<custom-ident>\",\n        \"container-condition\": \"not <query-in-parens>|<query-in-parens> [[and <query-in-parens>]*|[or <query-in-parens>]*]\",\n        \"coord-box\": \"content-box|padding-box|border-box|fill-box|stroke-box|view-box\",\n        \"generic-voice\": \"[<age>? <gender> <integer>?]\",\n        \"gender\": \"male|female|neutral\",\n        \"generic-script-specific\": \"generic( kai )|generic( fangsong )|generic( nastaliq )\",\n        \"generic-complete\": \"serif|sans-serif|system-ui|cursive|fantasy|math|monospace\",\n        \"generic-incomplete\": \"ui-serif|ui-sans-serif|ui-monospace|ui-rounded\",\n        \"-non-standard-generic-family\": \"-apple-system|BlinkMacSystemFont\",\n        \"left\": \"<length>|auto\",\n        \"color-base\": \"<hex-color>|<color-function>|<named-color>|<color-mix()>|transparent\",\n        \"color-function\": \"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<oklab()>|<oklch()>|<color()>\",\n        \"device-cmyk()\": \"<legacy-device-cmyk-syntax>|<modern-device-cmyk-syntax>\",\n        \"legacy-device-cmyk-syntax\": \"device-cmyk( <number>#{4} )\",\n        \"modern-device-cmyk-syntax\": \"device-cmyk( <cmyk-component>{4} [/ [<alpha-value>|none]]? )\",\n        \"cmyk-component\": \"<number>|<percentage>|none\",\n        \"color-mix()\": \"color-mix( <color-interpolation-method> , [<color>&&<percentage [0,100]>?]#{2} )\",\n        \"color-space\": \"<rectangular-color-space>|<polar-color-space>|<custom-color-space>\",\n        \"custom-color-space\": \"<dashed-ident>\",\n        \"paint\": \"none|<color>|<url> [none|<color>]?|context-fill|context-stroke\",\n        \"palette-identifier\": \"<dashed-ident>\",\n        \"right\": \"<length>|auto\",\n        \"scope-start\": \"<forgiving-selector-list>\",\n        \"scope-end\": \"<forgiving-selector-list>\",\n        \"forgiving-selector-list\": \"<complex-real-selector-list>\",\n        \"forgiving-relative-selector-list\": \"<relative-real-selector-list>\",\n        \"selector-list\": \"<complex-selector-list>\",\n        \"complex-real-selector-list\": \"<complex-real-selector>#\",\n        \"simple-selector-list\": \"<simple-selector>#\",\n        \"relative-real-selector-list\": \"<relative-real-selector>#\",\n        \"complex-selector-unit\": \"[<compound-selector>? <pseudo-compound-selector>*]!\",\n        \"complex-real-selector\": \"<compound-selector> [<combinator>? <compound-selector>]*\",\n        \"relative-real-selector\": \"<combinator>? <complex-real-selector>\",\n        \"pseudo-compound-selector\": \"<pseudo-element-selector> <pseudo-class-selector>*\",\n        \"simple-selector\": \"<type-selector>|<subclass-selector>\",\n        \"legacy-pseudo-element-selector\": \"':' [before|after|first-line|first-letter]\",\n        \"single-animation-composition\": \"replace|add|accumulate\",\n        \"svg-length\": \"<percentage>|<length>|<number>\",\n        \"svg-writing-mode\": \"lr-tb|rl-tb|tb-rl|lr|rl|tb\",\n        \"top\": \"<length>|auto\",\n        \"x\": \"<number>\",\n        \"y\": \"<number>\",\n        \"declaration\": \"<ident-token> : <declaration-value>? ['!' important]?\",\n        \"declaration-list\": \"[<declaration>? ';']* <declaration>?\",\n        \"url\": \"url( <string> <url-modifier>* )|<url-token>\",\n        \"url-modifier\": \"<ident>|<function-token> <any-value> )\",\n        \"number-zero-one\": \"<number [0,1]>\",\n        \"number-one-or-greater\": \"<number [1,∞]>\",\n        \"color()\": \"color( <colorspace-params> [/ [<alpha-value>|none]]? )\",\n        \"colorspace-params\": \"[<predefined-rgb-params>|<xyz-params>]\",\n        \"predefined-rgb-params\": \"<predefined-rgb> [<number>|<percentage>|none]{3}\",\n        \"predefined-rgb\": \"srgb|srgb-linear|display-p3|a98-rgb|prophoto-rgb|rec2020\",\n        \"xyz-params\": \"<xyz-space> [<number>|<percentage>|none]{3}\",\n        \"xyz-space\": \"xyz|xyz-d50|xyz-d65\",\n        \"oklab()\": \"oklab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )\",\n        \"oklch()\": \"oklch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )\",\n        \"offset-path\": \"<ray()>|<url>|<basic-shape>\",\n        \"rect()\": \"rect( [<length-percentage>|auto]{4} [round <'border-radius'>]? )\",\n        \"xywh()\": \"xywh( <length-percentage>{2} <length-percentage [0,∞]>{2} [round <'border-radius'>]? )\",\n        \"query-in-parens\": \"( <container-condition> )|( <size-feature> )|style( <style-query> )|<general-enclosed>\",\n        \"size-feature\": \"<mf-plain>|<mf-boolean>|<mf-range>\",\n        \"style-feature\": \"<declaration>\",\n        \"style-query\": \"<style-condition>|<style-feature>\",\n        \"style-condition\": \"not <style-in-parens>|<style-in-parens> [[and <style-in-parens>]*|[or <style-in-parens>]*]\",\n        \"style-in-parens\": \"( <style-condition> )|( <style-feature> )|<general-enclosed>\",\n        \"-non-standard-display\": \"-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box\",\n        \"inset-area\": \"[[left|center|right|span-left|span-right|x-start|x-end|span-x-start|span-x-end|x-self-start|x-self-end|span-x-self-start|span-x-self-end|span-all]||[top|center|bottom|span-top|span-bottom|y-start|y-end|span-y-start|span-y-end|y-self-start|y-self-end|span-y-self-start|span-y-self-end|span-all]|[block-start|center|block-end|span-block-start|span-block-end|span-all]||[inline-start|center|inline-end|span-inline-start|span-inline-end|span-all]|[self-block-start|self-block-end|span-self-block-start|span-self-block-end|span-all]||[self-inline-start|self-inline-end|span-self-inline-start|span-self-inline-end|span-all]|[start|center|end|span-start|span-end|span-all]{1,2}|[self-start|center|self-end|span-self-start|span-self-end|span-all]{1,2}]\",\n        \"position-area\": \"[[left|center|right|span-left|span-right|x-start|x-end|span-x-start|span-x-end|x-self-start|x-self-end|span-x-self-start|span-x-self-end|span-all]||[top|center|bottom|span-top|span-bottom|y-start|y-end|span-y-start|span-y-end|y-self-start|y-self-end|span-y-self-start|span-y-self-end|span-all]|[block-start|center|block-end|span-block-start|span-block-end|span-all]||[inline-start|center|inline-end|span-inline-start|span-inline-end|span-all]|[self-block-start|center|self-block-end|span-self-block-start|span-self-block-end|span-all]||[self-inline-start|center|self-inline-end|span-self-inline-start|span-self-inline-end|span-all]|[start|center|end|span-start|span-end|span-all]{1,2}|[self-start|center|self-end|span-self-start|span-self-end|span-all]{1,2}]\",\n        \"anchor()\": \"anchor( <anchor-element>?&&<anchor-side> , <length-percentage>? )\",\n        \"anchor-side\": \"inside|outside|top|left|right|bottom|start|end|self-start|self-end|<percentage>|center\",\n        \"anchor-size()\": \"anchor-size( [<anchor-element>||<anchor-size>]? , <length-percentage>? )\",\n        \"anchor-size\": \"width|height|block|inline|self-block|self-inline\",\n        \"anchor-element\": \"<dashed-ident>\",\n        \"try-size\": \"most-width|most-height|most-block-size|most-inline-size\",\n        \"try-tactic\": \"flip-block||flip-inline||flip-start\",\n        \"font-variant-css2\": \"normal|small-caps\",\n        \"font-width-css3\": \"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded\",\n        \"system-family-name\": \"caption|icon|menu|message-box|small-caption|status-bar\"\n    },\n    \"properties\": {\n        \"--*\": \"<declaration-value>\",\n        \"-ms-accelerator\": \"false|true\",\n        \"-ms-block-progression\": \"tb|rl|bt|lr\",\n        \"-ms-content-zoom-chaining\": \"none|chained\",\n        \"-ms-content-zooming\": \"none|zoom\",\n        \"-ms-content-zoom-limit\": \"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\",\n        \"-ms-content-zoom-limit-max\": \"<percentage>\",\n        \"-ms-content-zoom-limit-min\": \"<percentage>\",\n        \"-ms-content-zoom-snap\": \"<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>\",\n        \"-ms-content-zoom-snap-points\": \"snapInterval( <percentage> , <percentage> )|snapList( <percentage># )\",\n        \"-ms-content-zoom-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-filter\": \"<string>\",\n        \"-ms-flow-from\": \"[none|<custom-ident>]#\",\n        \"-ms-flow-into\": \"[none|<custom-ident>]#\",\n        \"-ms-grid-columns\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-grid-rows\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-high-contrast-adjust\": \"auto|none\",\n        \"-ms-hyphenate-limit-chars\": \"auto|<integer>{1,3}\",\n        \"-ms-hyphenate-limit-lines\": \"no-limit|<integer>\",\n        \"-ms-hyphenate-limit-zone\": \"<percentage>|<length>\",\n        \"-ms-ime-align\": \"auto|after\",\n        \"-ms-overflow-style\": \"auto|none|scrollbar|-ms-autohiding-scrollbar\",\n        \"-ms-scrollbar-3dlight-color\": \"<color>\",\n        \"-ms-scrollbar-arrow-color\": \"<color>\",\n        \"-ms-scrollbar-base-color\": \"<color>\",\n        \"-ms-scrollbar-darkshadow-color\": \"<color>\",\n        \"-ms-scrollbar-face-color\": \"<color>\",\n        \"-ms-scrollbar-highlight-color\": \"<color>\",\n        \"-ms-scrollbar-shadow-color\": \"<color>\",\n        \"-ms-scrollbar-track-color\": \"<color>\",\n        \"-ms-scroll-chaining\": \"chained|none\",\n        \"-ms-scroll-limit\": \"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\",\n        \"-ms-scroll-limit-x-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-x-min\": \"<length>\",\n        \"-ms-scroll-limit-y-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-y-min\": \"<length>\",\n        \"-ms-scroll-rails\": \"none|railed\",\n        \"-ms-scroll-snap-points-x\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-points-y\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-scroll-snap-x\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\",\n        \"-ms-scroll-snap-y\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\",\n        \"-ms-scroll-translation\": \"none|vertical-to-horizontal\",\n        \"-ms-text-autospace\": \"none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\",\n        \"-ms-touch-select\": \"grippers|none\",\n        \"-ms-user-select\": \"none|element|text\",\n        \"-ms-wrap-flow\": \"auto|both|start|end|maximum|clear\",\n        \"-ms-wrap-margin\": \"<length>\",\n        \"-ms-wrap-through\": \"wrap|none\",\n        \"-moz-appearance\": \"none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized\",\n        \"-moz-binding\": \"<url>|none\",\n        \"-moz-border-bottom-colors\": \"<color>+|none\",\n        \"-moz-border-left-colors\": \"<color>+|none\",\n        \"-moz-border-right-colors\": \"<color>+|none\",\n        \"-moz-border-top-colors\": \"<color>+|none\",\n        \"-moz-context-properties\": \"none|[fill|fill-opacity|stroke|stroke-opacity]#\",\n        \"-moz-float-edge\": \"border-box|content-box|margin-box|padding-box\",\n        \"-moz-force-broken-image-icon\": \"0|1\",\n        \"-moz-image-region\": \"<shape>|auto\",\n        \"-moz-orient\": \"inline|block|horizontal|vertical\",\n        \"-moz-outline-radius\": \"<outline-radius>{1,4} [/ <outline-radius>{1,4}]?\",\n        \"-moz-outline-radius-bottomleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-bottomright\": \"<outline-radius>\",\n        \"-moz-outline-radius-topleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-topright\": \"<outline-radius>\",\n        \"-moz-stack-sizing\": \"ignore|stretch-to-fit\",\n        \"-moz-text-blink\": \"none|blink\",\n        \"-moz-user-focus\": \"ignore|normal|select-after|select-before|select-menu|select-same|select-all|none\",\n        \"-moz-user-input\": \"auto|none|enabled|disabled\",\n        \"-moz-user-modify\": \"read-only|read-write|write-only\",\n        \"-moz-window-dragging\": \"drag|no-drag\",\n        \"-moz-window-shadow\": \"default|menu|tooltip|sheet|none\",\n        \"-webkit-appearance\": \"none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button\",\n        \"-webkit-border-before\": \"<'border-width'>||<'border-style'>||<color>\",\n        \"-webkit-border-before-color\": \"<color>\",\n        \"-webkit-border-before-style\": \"<'border-style'>\",\n        \"-webkit-border-before-width\": \"<'border-width'>\",\n        \"-webkit-box-reflect\": \"[above|below|right|left]? <length>? <image>?\",\n        \"-webkit-line-clamp\": \"none|<integer>\",\n        \"-webkit-mask\": \"[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#\",\n        \"-webkit-mask-attachment\": \"<attachment>#\",\n        \"-webkit-mask-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-mask-composite\": \"<composite-style>#\",\n        \"-webkit-mask-image\": \"<mask-reference>#\",\n        \"-webkit-mask-origin\": \"[<box>|border|padding|content]#\",\n        \"-webkit-mask-position\": \"<position>#\",\n        \"-webkit-mask-position-x\": \"[<length-percentage>|left|center|right]#\",\n        \"-webkit-mask-position-y\": \"[<length-percentage>|top|center|bottom]#\",\n        \"-webkit-mask-repeat\": \"<repeat-style>#\",\n        \"-webkit-mask-repeat-x\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-repeat-y\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-size\": \"<bg-size>#\",\n        \"-webkit-overflow-scrolling\": \"auto|touch\",\n        \"-webkit-tap-highlight-color\": \"<color>\",\n        \"-webkit-text-fill-color\": \"<color>\",\n        \"-webkit-text-stroke\": \"<length>||<color>\",\n        \"-webkit-text-stroke-color\": \"<color>\",\n        \"-webkit-text-stroke-width\": \"<length>\",\n        \"-webkit-touch-callout\": \"default|none\",\n        \"-webkit-user-modify\": \"read-only|read-write|read-write-plaintext-only\",\n        \"accent-color\": \"auto|<color>\",\n        \"align-content\": \"normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>\",\n        \"align-items\": \"normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]\",\n        \"align-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>\",\n        \"align-tracks\": \"[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#\",\n        \"all\": \"initial|inherit|unset|revert|revert-layer\",\n        \"anchor-name\": \"none|<dashed-ident>#\",\n        \"anchor-scope\": \"none|all|<dashed-ident>#\",\n        \"animation\": \"<single-animation>#\",\n        \"animation-composition\": \"<single-animation-composition>#\",\n        \"animation-delay\": \"<time>#\",\n        \"animation-direction\": \"<single-animation-direction>#\",\n        \"animation-duration\": \"<time>#\",\n        \"animation-fill-mode\": \"<single-animation-fill-mode>#\",\n        \"animation-iteration-count\": \"<single-animation-iteration-count>#\",\n        \"animation-name\": \"[none|<keyframes-name>]#\",\n        \"animation-play-state\": \"<single-animation-play-state>#\",\n        \"animation-range\": \"[<'animation-range-start'> <'animation-range-end'>?]#\",\n        \"animation-range-end\": \"[normal|<length-percentage>|<timeline-range-name> <length-percentage>?]#\",\n        \"animation-range-start\": \"[normal|<length-percentage>|<timeline-range-name> <length-percentage>?]#\",\n        \"animation-timing-function\": \"<easing-function>#\",\n        \"animation-timeline\": \"<single-animation-timeline>#\",\n        \"appearance\": \"none|auto|textfield|menulist-button|<compat-auto>\",\n        \"aspect-ratio\": \"auto||<ratio>\",\n        \"azimuth\": \"<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards\",\n        \"backdrop-filter\": \"none|<filter-function-list>\",\n        \"backface-visibility\": \"visible|hidden\",\n        \"background\": \"[<bg-layer> ,]* <final-bg-layer>\",\n        \"background-attachment\": \"<attachment>#\",\n        \"background-blend-mode\": \"<blend-mode>#\",\n        \"background-clip\": \"<bg-clip>#\",\n        \"background-color\": \"<color>\",\n        \"background-image\": \"<bg-image>#\",\n        \"background-origin\": \"<box>#\",\n        \"background-position\": \"<bg-position>#\",\n        \"background-position-x\": \"[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#\",\n        \"background-position-y\": \"[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#\",\n        \"background-repeat\": \"<repeat-style>#\",\n        \"background-size\": \"<bg-size>#\",\n        \"block-size\": \"<'width'>\",\n        \"border\": \"<line-width>||<line-style>||<color>\",\n        \"border-block\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-color\": \"<'border-top-color'>{1,2}\",\n        \"border-block-style\": \"<'border-top-style'>\",\n        \"border-block-width\": \"<'border-top-width'>\",\n        \"border-block-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-end-color\": \"<'border-top-color'>\",\n        \"border-block-end-style\": \"<'border-top-style'>\",\n        \"border-block-end-width\": \"<'border-top-width'>\",\n        \"border-block-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-start-color\": \"<'border-top-color'>\",\n        \"border-block-start-style\": \"<'border-top-style'>\",\n        \"border-block-start-width\": \"<'border-top-width'>\",\n        \"border-bottom\": \"<line-width>||<line-style>||<color>\",\n        \"border-bottom-color\": \"<'border-top-color'>\",\n        \"border-bottom-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-style\": \"<line-style>\",\n        \"border-bottom-width\": \"<line-width>\",\n        \"border-collapse\": \"collapse|separate\",\n        \"border-color\": \"<color>{1,4}\",\n        \"border-end-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-end-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-image\": \"<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>\",\n        \"border-image-outset\": \"[<length>|<number>]{1,4}\",\n        \"border-image-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"border-image-slice\": \"<number-percentage>{1,4}&&fill?\",\n        \"border-image-source\": \"none|<image>\",\n        \"border-image-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"border-inline\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-color\": \"<'border-top-color'>{1,2}\",\n        \"border-inline-style\": \"<'border-top-style'>\",\n        \"border-inline-width\": \"<'border-top-width'>\",\n        \"border-inline-end-color\": \"<'border-top-color'>\",\n        \"border-inline-end-style\": \"<'border-top-style'>\",\n        \"border-inline-end-width\": \"<'border-top-width'>\",\n        \"border-inline-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-start-color\": \"<'border-top-color'>\",\n        \"border-inline-start-style\": \"<'border-top-style'>\",\n        \"border-inline-start-width\": \"<'border-top-width'>\",\n        \"border-left\": \"<line-width>||<line-style>||<color>\",\n        \"border-left-color\": \"<color>\",\n        \"border-left-style\": \"<line-style>\",\n        \"border-left-width\": \"<line-width>\",\n        \"border-radius\": \"<length-percentage>{1,4} [/ <length-percentage>{1,4}]?\",\n        \"border-right\": \"<line-width>||<line-style>||<color>\",\n        \"border-right-color\": \"<color>\",\n        \"border-right-style\": \"<line-style>\",\n        \"border-right-width\": \"<line-width>\",\n        \"border-spacing\": \"<length> <length>?\",\n        \"border-start-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-start-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-style\": \"<line-style>{1,4}\",\n        \"border-top\": \"<line-width>||<line-style>||<color>\",\n        \"border-top-color\": \"<color>\",\n        \"border-top-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-style\": \"<line-style>\",\n        \"border-top-width\": \"<line-width>\",\n        \"border-width\": \"<line-width>{1,4}\",\n        \"bottom\": \"<length>|<percentage>|auto\",\n        \"box-align\": \"start|center|end|baseline|stretch\",\n        \"box-decoration-break\": \"slice|clone\",\n        \"box-direction\": \"normal|reverse|inherit\",\n        \"box-flex\": \"<number>\",\n        \"box-flex-group\": \"<integer>\",\n        \"box-lines\": \"single|multiple\",\n        \"box-ordinal-group\": \"<integer>\",\n        \"box-orient\": \"horizontal|vertical|inline-axis|block-axis|inherit\",\n        \"box-pack\": \"start|center|end|justify\",\n        \"box-shadow\": \"none|<shadow>#\",\n        \"box-sizing\": \"content-box|border-box\",\n        \"break-after\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-before\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-inside\": \"auto|avoid|avoid-page|avoid-column|avoid-region\",\n        \"caption-side\": \"top|bottom|block-start|block-end|inline-start|inline-end\",\n        \"caret\": \"<'caret-color'>||<'caret-shape'>\",\n        \"caret-color\": \"auto|<color>\",\n        \"caret-shape\": \"auto|bar|block|underscore\",\n        \"clear\": \"none|left|right|both|inline-start|inline-end\",\n        \"clip\": \"<shape>|auto\",\n        \"clip-path\": \"<clip-source>|[<basic-shape>||<geometry-box>]|none\",\n        \"clip-rule\": \"nonzero|evenodd\",\n        \"color\": \"<color>\",\n        \"color-interpolation-filters\": \"auto|sRGB|linearRGB\",\n        \"color-scheme\": \"normal|[light|dark|<custom-ident>]+&&only?\",\n        \"column-count\": \"<integer>|auto\",\n        \"column-fill\": \"auto|balance\",\n        \"column-gap\": \"normal|<length-percentage>\",\n        \"column-rule\": \"<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>\",\n        \"column-rule-color\": \"<color>\",\n        \"column-rule-style\": \"<'border-style'>\",\n        \"column-rule-width\": \"<'border-width'>\",\n        \"column-span\": \"none|all\",\n        \"column-width\": \"<length>|auto\",\n        \"columns\": \"<'column-width'>||<'column-count'>\",\n        \"contain\": \"none|strict|content|[[size||inline-size]||layout||style||paint]\",\n        \"contain-intrinsic-size\": \"[auto? [none|<length>]]{1,2}\",\n        \"contain-intrinsic-block-size\": \"auto? [none|<length>]\",\n        \"contain-intrinsic-height\": \"auto? [none|<length>]\",\n        \"contain-intrinsic-inline-size\": \"auto? [none|<length>]\",\n        \"contain-intrinsic-width\": \"auto? [none|<length>]\",\n        \"container\": \"<'container-name'> [/ <'container-type'>]?\",\n        \"container-name\": \"none|<custom-ident>+\",\n        \"container-type\": \"normal||[size|inline-size]\",\n        \"content\": \"normal|none|[<content-replacement>|<content-list>] [/ [<string>|<counter>]+]?\",\n        \"content-visibility\": \"visible|auto|hidden\",\n        \"counter-increment\": \"[<counter-name> <integer>?]+|none\",\n        \"counter-reset\": \"[<counter-name> <integer>?|<reversed-counter-name> <integer>?]+|none\",\n        \"counter-set\": \"[<counter-name> <integer>?]+|none\",\n        \"cursor\": \"[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]\",\n        \"d\": \"none|path( <string> )\",\n        \"cx\": \"<length>|<percentage>\",\n        \"cy\": \"<length>|<percentage>\",\n        \"direction\": \"ltr|rtl\",\n        \"display\": \"[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>\",\n        \"dominant-baseline\": \"auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\",\n        \"empty-cells\": \"show|hide\",\n        \"field-sizing\": \"content|fixed\",\n        \"fill\": \"<paint>\",\n        \"fill-opacity\": \"<number-zero-one>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"filter\": \"none|<filter-function-list>|<-ms-filter-function-list>\",\n        \"flex\": \"none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]\",\n        \"flex-basis\": \"content|<'width'>\",\n        \"flex-direction\": \"row|row-reverse|column|column-reverse\",\n        \"flex-flow\": \"<'flex-direction'>||<'flex-wrap'>\",\n        \"flex-grow\": \"<number>\",\n        \"flex-shrink\": \"<number>\",\n        \"flex-wrap\": \"nowrap|wrap|wrap-reverse\",\n        \"float\": \"left|right|none|inline-start|inline-end\",\n        \"font\": \"[[<'font-style'>||<font-variant-css2>||<'font-weight'>||<font-width-css3>]? <'font-size'> [/ <'line-height'>]? <'font-family'>#]|<system-family-name>|<-non-standard-font>\",\n        \"font-family\": \"[<family-name>|<generic-family>]#\",\n        \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n        \"font-kerning\": \"auto|normal|none\",\n        \"font-language-override\": \"normal|<string>\",\n        \"font-optical-sizing\": \"auto|none\",\n        \"font-palette\": \"normal|light|dark|<palette-identifier>\",\n        \"font-variation-settings\": \"normal|[<string> <number>]#\",\n        \"font-size\": \"<absolute-size>|<relative-size>|<length-percentage>\",\n        \"font-size-adjust\": \"none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]\",\n        \"font-smooth\": \"auto|never|always|<absolute-size>|<length>\",\n        \"font-stretch\": \"<font-stretch-absolute>\",\n        \"font-style\": \"normal|italic|oblique <angle>?\",\n        \"font-synthesis\": \"none|[weight||style||small-caps||position]\",\n        \"font-synthesis-position\": \"auto|none\",\n        \"font-synthesis-small-caps\": \"auto|none\",\n        \"font-synthesis-style\": \"auto|none\",\n        \"font-synthesis-weight\": \"auto|none\",\n        \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-alternates\": \"normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]\",\n        \"font-variant-caps\": \"normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps\",\n        \"font-variant-east-asian\": \"normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-emoji\": \"normal|text|emoji|unicode\",\n        \"font-variant-ligatures\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]\",\n        \"font-variant-numeric\": \"normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]\",\n        \"font-variant-position\": \"normal|sub|super\",\n        \"font-weight\": \"<font-weight-absolute>|bolder|lighter\",\n        \"forced-color-adjust\": \"auto|none|preserve-parent-color\",\n        \"gap\": \"<'row-gap'> <'column-gap'>?\",\n        \"grid\": \"<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>\",\n        \"grid-area\": \"<grid-line> [/ <grid-line>]{0,3}\",\n        \"grid-auto-columns\": \"<track-size>+\",\n        \"grid-auto-flow\": \"[row|column]||dense\",\n        \"grid-auto-rows\": \"<track-size>+\",\n        \"grid-column\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-column-end\": \"<grid-line>\",\n        \"grid-column-gap\": \"<length-percentage>\",\n        \"grid-column-start\": \"<grid-line>\",\n        \"grid-gap\": \"<'grid-row-gap'> <'grid-column-gap'>?\",\n        \"grid-row\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-row-end\": \"<grid-line>\",\n        \"grid-row-gap\": \"<length-percentage>\",\n        \"grid-row-start\": \"<grid-line>\",\n        \"grid-template\": \"none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?\",\n        \"grid-template-areas\": \"none|<string>+\",\n        \"grid-template-columns\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"grid-template-rows\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"hanging-punctuation\": \"none|[first||[force-end|allow-end]||last]\",\n        \"height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>\",\n        \"hyphenate-character\": \"auto|<string>\",\n        \"hyphenate-limit-chars\": \"[auto|<integer>]{1,3}\",\n        \"hyphens\": \"none|manual|auto\",\n        \"image-orientation\": \"from-image|<angle>|[<angle>? flip]\",\n        \"image-rendering\": \"auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>\",\n        \"image-resolution\": \"[from-image||<resolution>]&&snap?\",\n        \"ime-mode\": \"auto|normal|active|inactive|disabled\",\n        \"initial-letter\": \"normal|[<number> <integer>?]\",\n        \"initial-letter-align\": \"[auto|alphabetic|hanging|ideographic]\",\n        \"inline-size\": \"<'width'>\",\n        \"input-security\": \"auto|none\",\n        \"inset\": \"<'top'>{1,4}\",\n        \"inset-block\": \"<'top'>{1,2}\",\n        \"inset-block-end\": \"<'top'>\",\n        \"inset-block-start\": \"<'top'>\",\n        \"inset-inline\": \"<'top'>{1,2}\",\n        \"inset-inline-end\": \"<'top'>\",\n        \"inset-inline-start\": \"<'top'>\",\n        \"interpolate-size\": \"numeric-only|allow-keywords\",\n        \"isolation\": \"auto|isolate\",\n        \"justify-content\": \"normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]\",\n        \"justify-items\": \"normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]\",\n        \"justify-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]\",\n        \"justify-tracks\": \"[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#\",\n        \"left\": \"<length>|<percentage>|auto\",\n        \"letter-spacing\": \"normal|<length-percentage>\",\n        \"line-break\": \"auto|loose|normal|strict|anywhere\",\n        \"line-clamp\": \"none|<integer>\",\n        \"line-height\": \"normal|<number>|<length>|<percentage>\",\n        \"line-height-step\": \"<length>\",\n        \"list-style\": \"<'list-style-type'>||<'list-style-position'>||<'list-style-image'>\",\n        \"list-style-image\": \"<image>|none\",\n        \"list-style-position\": \"inside|outside\",\n        \"list-style-type\": \"<counter-style>|<string>|none\",\n        \"margin\": \"[<length>|<percentage>|auto]{1,4}\",\n        \"margin-block\": \"<'margin-left'>{1,2}\",\n        \"margin-block-end\": \"<'margin-left'>\",\n        \"margin-block-start\": \"<'margin-left'>\",\n        \"margin-bottom\": \"<length>|<percentage>|auto\",\n        \"margin-inline\": \"<'margin-left'>{1,2}\",\n        \"margin-inline-end\": \"<'margin-left'>\",\n        \"margin-inline-start\": \"<'margin-left'>\",\n        \"margin-left\": \"<length>|<percentage>|auto\",\n        \"margin-right\": \"<length>|<percentage>|auto\",\n        \"margin-top\": \"<length>|<percentage>|auto\",\n        \"margin-trim\": \"none|in-flow|all\",\n        \"marker\": \"none|<url>\",\n        \"marker-end\": \"none|<url>\",\n        \"marker-mid\": \"none|<url>\",\n        \"marker-start\": \"none|<url>\",\n        \"mask\": \"<mask-layer>#\",\n        \"mask-border\": \"<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>\",\n        \"mask-border-mode\": \"luminance|alpha\",\n        \"mask-border-outset\": \"[<length>|<number>]{1,4}\",\n        \"mask-border-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"mask-border-slice\": \"<number-percentage>{1,4} fill?\",\n        \"mask-border-source\": \"none|<image>\",\n        \"mask-border-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"mask-clip\": \"[<geometry-box>|no-clip]#\",\n        \"mask-composite\": \"<compositing-operator>#\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"mask-mode\": \"<masking-mode>#\",\n        \"mask-origin\": \"<geometry-box>#\",\n        \"mask-position\": \"<position>#\",\n        \"mask-repeat\": \"<repeat-style>#\",\n        \"mask-size\": \"<bg-size>#\",\n        \"mask-type\": \"luminance|alpha\",\n        \"masonry-auto-flow\": \"[pack|next]||[definite-first|ordered]\",\n        \"math-depth\": \"auto-add|add( <integer> )|<integer>\",\n        \"math-shift\": \"normal|compact\",\n        \"math-style\": \"normal|compact\",\n        \"max-block-size\": \"<'max-width'>\",\n        \"max-height\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>\",\n        \"max-inline-size\": \"<'max-width'>\",\n        \"max-lines\": \"none|<integer>\",\n        \"max-width\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>\",\n        \"min-block-size\": \"<'min-width'>\",\n        \"min-height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>\",\n        \"min-inline-size\": \"<'min-width'>\",\n        \"min-width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>\",\n        \"mix-blend-mode\": \"<blend-mode>|plus-lighter\",\n        \"object-fit\": \"fill|contain|cover|none|scale-down\",\n        \"object-position\": \"<position>\",\n        \"offset\": \"[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?\",\n        \"offset-anchor\": \"auto|<position>\",\n        \"offset-distance\": \"<length-percentage>\",\n        \"offset-path\": \"none|<offset-path>||<coord-box>\",\n        \"offset-position\": \"normal|auto|<position>\",\n        \"offset-rotate\": \"[auto|reverse]||<angle>\",\n        \"opacity\": \"<alpha-value>\",\n        \"order\": \"<integer>\",\n        \"orphans\": \"<integer>\",\n        \"outline\": \"[<'outline-width'>||<'outline-style'>||<'outline-color'>]\",\n        \"outline-color\": \"auto|<color>\",\n        \"outline-offset\": \"<length>\",\n        \"outline-style\": \"auto|<'border-style'>\",\n        \"outline-width\": \"<line-width>\",\n        \"overflow\": \"[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>\",\n        \"overflow-anchor\": \"auto|none\",\n        \"overflow-block\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-clip-box\": \"padding-box|content-box\",\n        \"overflow-clip-margin\": \"<visual-box>||<length [0,∞]>\",\n        \"overflow-inline\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-wrap\": \"normal|break-word|anywhere\",\n        \"overflow-x\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-y\": \"visible|hidden|clip|scroll|auto\",\n        \"overlay\": \"none|auto\",\n        \"overscroll-behavior\": \"[contain|none|auto]{1,2}\",\n        \"overscroll-behavior-block\": \"contain|none|auto\",\n        \"overscroll-behavior-inline\": \"contain|none|auto\",\n        \"overscroll-behavior-x\": \"contain|none|auto\",\n        \"overscroll-behavior-y\": \"contain|none|auto\",\n        \"padding\": \"[<length>|<percentage>]{1,4}\",\n        \"padding-block\": \"<'padding-left'>{1,2}\",\n        \"padding-block-end\": \"<'padding-left'>\",\n        \"padding-block-start\": \"<'padding-left'>\",\n        \"padding-bottom\": \"<length>|<percentage>\",\n        \"padding-inline\": \"<'padding-left'>{1,2}\",\n        \"padding-inline-end\": \"<'padding-left'>\",\n        \"padding-inline-start\": \"<'padding-left'>\",\n        \"padding-left\": \"<length>|<percentage>\",\n        \"padding-right\": \"<length>|<percentage>\",\n        \"padding-top\": \"<length>|<percentage>\",\n        \"page\": \"auto|<custom-ident>\",\n        \"page-break-after\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-before\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-inside\": \"auto|avoid\",\n        \"paint-order\": \"normal|[fill||stroke||markers]\",\n        \"perspective\": \"none|<length>\",\n        \"perspective-origin\": \"<position>\",\n        \"place-content\": \"<'align-content'> <'justify-content'>?\",\n        \"place-items\": \"<'align-items'> <'justify-items'>?\",\n        \"place-self\": \"<'align-self'> <'justify-self'>?\",\n        \"pointer-events\": \"auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit\",\n        \"position\": \"static|relative|absolute|sticky|fixed|-webkit-sticky\",\n        \"position-anchor\": \"auto|<anchor-name>\",\n        \"position-area\": \"none|<position-area>\",\n        \"position-try\": \"<'position-try-order'>? <'position-try-fallbacks'>\",\n        \"position-try-fallbacks\": \"none|[[<dashed-ident>||<try-tactic>]|<'position-area'>]#\",\n        \"position-try-order\": \"normal|<try-size>\",\n        \"position-visibility\": \"always|[anchors-valid||anchors-visible||no-overflow]\",\n        \"print-color-adjust\": \"economy|exact\",\n        \"quotes\": \"none|auto|[<string> <string>]+\",\n        \"r\": \"<length>|<percentage>\",\n        \"resize\": \"none|both|horizontal|vertical|block|inline\",\n        \"right\": \"<length>|<percentage>|auto\",\n        \"rotate\": \"none|<angle>|[x|y|z|<number>{3}]&&<angle>\",\n        \"row-gap\": \"normal|<length-percentage>\",\n        \"ruby-align\": \"start|center|space-between|space-around\",\n        \"ruby-merge\": \"separate|collapse|auto\",\n        \"ruby-position\": \"[alternate||[over|under]]|inter-character\",\n        \"rx\": \"<length>|<percentage>\",\n        \"ry\": \"<length>|<percentage>\",\n        \"scale\": \"none|[<number>|<percentage>]{1,3}\",\n        \"scrollbar-color\": \"auto|<color>{2}\",\n        \"scrollbar-gutter\": \"auto|stable&&both-edges?\",\n        \"scrollbar-width\": \"auto|thin|none\",\n        \"scroll-behavior\": \"auto|smooth\",\n        \"scroll-margin\": \"<length>{1,4}\",\n        \"scroll-margin-block\": \"<length>{1,2}\",\n        \"scroll-margin-block-start\": \"<length>\",\n        \"scroll-margin-block-end\": \"<length>\",\n        \"scroll-margin-bottom\": \"<length>\",\n        \"scroll-margin-inline\": \"<length>{1,2}\",\n        \"scroll-margin-inline-start\": \"<length>\",\n        \"scroll-margin-inline-end\": \"<length>\",\n        \"scroll-margin-left\": \"<length>\",\n        \"scroll-margin-right\": \"<length>\",\n        \"scroll-margin-top\": \"<length>\",\n        \"scroll-padding\": \"[auto|<length-percentage>]{1,4}\",\n        \"scroll-padding-block\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-block-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-block-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-bottom\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-inline-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-left\": \"auto|<length-percentage>\",\n        \"scroll-padding-right\": \"auto|<length-percentage>\",\n        \"scroll-padding-top\": \"auto|<length-percentage>\",\n        \"scroll-snap-align\": \"[none|start|end|center]{1,2}\",\n        \"scroll-snap-coordinate\": \"none|<position>#\",\n        \"scroll-snap-destination\": \"<position>\",\n        \"scroll-snap-points-x\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-points-y\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-stop\": \"normal|always\",\n        \"scroll-snap-type\": \"none|[x|y|block|inline|both] [mandatory|proximity]?\",\n        \"scroll-snap-type-x\": \"none|mandatory|proximity\",\n        \"scroll-snap-type-y\": \"none|mandatory|proximity\",\n        \"scroll-timeline\": \"[<'scroll-timeline-name'>||<'scroll-timeline-axis'>]#\",\n        \"scroll-timeline-axis\": \"[block|inline|x|y]#\",\n        \"scroll-timeline-name\": \"[none|<dashed-ident>]#\",\n        \"shape-image-threshold\": \"<alpha-value>\",\n        \"shape-margin\": \"<length-percentage>\",\n        \"shape-outside\": \"none|[<shape-box>||<basic-shape>]|<image>\",\n        \"shape-rendering\": \"auto|optimizeSpeed|crispEdges|geometricPrecision\",\n        \"stroke\": \"<paint>\",\n        \"stroke-dasharray\": \"none|[<svg-length>+]#\",\n        \"stroke-dashoffset\": \"<svg-length>\",\n        \"stroke-linecap\": \"butt|round|square\",\n        \"stroke-linejoin\": \"miter|round|bevel\",\n        \"stroke-miterlimit\": \"<number-one-or-greater>\",\n        \"stroke-opacity\": \"<'opacity'>\",\n        \"stroke-width\": \"<svg-length>\",\n        \"tab-size\": \"<integer>|<length>\",\n        \"table-layout\": \"auto|fixed\",\n        \"text-align\": \"start|end|left|right|center|justify|match-parent\",\n        \"text-align-last\": \"auto|start|end|left|right|center|justify\",\n        \"text-anchor\": \"start|middle|end\",\n        \"text-combine-upright\": \"none|all|[digits <integer>?]\",\n        \"text-decoration\": \"<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>\",\n        \"text-decoration-color\": \"<color>\",\n        \"text-decoration-line\": \"none|[underline||overline||line-through||blink]|spelling-error|grammar-error\",\n        \"text-decoration-skip\": \"none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]\",\n        \"text-decoration-skip-ink\": \"auto|all|none\",\n        \"text-decoration-style\": \"solid|double|dotted|dashed|wavy\",\n        \"text-decoration-thickness\": \"auto|from-font|<length>|<percentage>\",\n        \"text-emphasis\": \"<'text-emphasis-style'>||<'text-emphasis-color'>\",\n        \"text-emphasis-color\": \"<color>\",\n        \"text-emphasis-position\": \"auto|[over|under]&&[right|left]?\",\n        \"text-emphasis-style\": \"none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>\",\n        \"text-indent\": \"<length-percentage>&&hanging?&&each-line?\",\n        \"text-justify\": \"auto|inter-character|inter-word|none\",\n        \"text-orientation\": \"mixed|upright|sideways\",\n        \"text-overflow\": \"[clip|ellipsis|<string>]{1,2}\",\n        \"text-rendering\": \"auto|optimizeSpeed|optimizeLegibility|geometricPrecision\",\n        \"text-shadow\": \"none|<shadow-t>#\",\n        \"text-size-adjust\": \"none|auto|<percentage>\",\n        \"text-spacing-trim\": \"space-all|normal|space-first|trim-start|trim-both|trim-all|auto\",\n        \"text-transform\": \"none|capitalize|uppercase|lowercase|full-width|full-size-kana\",\n        \"text-underline-offset\": \"auto|<length>|<percentage>\",\n        \"text-underline-position\": \"auto|from-font|[under||[left|right]]\",\n        \"text-wrap\": \"<'text-wrap-mode'>||<'text-wrap-style'>\",\n        \"text-wrap-mode\": \"auto|wrap|nowrap\",\n        \"text-wrap-style\": \"auto|balance|stable|pretty\",\n        \"timeline-scope\": \"none|<dashed-ident>#\",\n        \"top\": \"<length>|<percentage>|auto\",\n        \"touch-action\": \"auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation\",\n        \"transform\": \"none|<transform-list>\",\n        \"transform-box\": \"content-box|border-box|fill-box|stroke-box|view-box\",\n        \"transform-origin\": \"[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?\",\n        \"transform-style\": \"flat|preserve-3d\",\n        \"transition\": \"<single-transition>#\",\n        \"transition-behavior\": \"<transition-behavior-value>#\",\n        \"transition-delay\": \"<time>#\",\n        \"transition-duration\": \"<time>#\",\n        \"transition-property\": \"none|<single-transition-property>#\",\n        \"transition-timing-function\": \"<easing-function>#\",\n        \"translate\": \"none|<length-percentage> [<length-percentage> <length>?]?\",\n        \"unicode-bidi\": \"normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext\",\n        \"user-select\": \"auto|text|none|contain|all\",\n        \"vector-effect\": \"none|non-scaling-stroke|non-scaling-size|non-rotation|fixed-position\",\n        \"vertical-align\": \"baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>\",\n        \"view-timeline\": \"[<'view-timeline-name'> <'view-timeline-axis'>?]#\",\n        \"view-timeline-axis\": \"[block|inline|x|y]#\",\n        \"view-timeline-inset\": \"[[auto|<length-percentage>]{1,2}]#\",\n        \"view-timeline-name\": \"none|<dashed-ident>#\",\n        \"view-transition-name\": \"none|<custom-ident>\",\n        \"visibility\": \"visible|hidden|collapse\",\n        \"white-space\": \"normal|pre|nowrap|pre-wrap|pre-line|break-spaces|[<'white-space-collapse'>||<'text-wrap'>||<'white-space-trim'>]\",\n        \"white-space-collapse\": \"collapse|discard|preserve|preserve-breaks|preserve-spaces|break-spaces\",\n        \"widows\": \"<integer>\",\n        \"width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>\",\n        \"will-change\": \"auto|<animateable-feature>#\",\n        \"word-break\": \"normal|break-all|keep-all|break-word|auto-phrase\",\n        \"word-spacing\": \"normal|<length>\",\n        \"word-wrap\": \"normal|break-word\",\n        \"writing-mode\": \"horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>\",\n        \"x\": \"<length>|<percentage>\",\n        \"y\": \"<length>|<percentage>\",\n        \"z-index\": \"auto|<integer>\",\n        \"zoom\": \"normal|reset|<number>|<percentage>\",\n        \"-moz-background-clip\": \"padding|border\",\n        \"-moz-border-radius-bottomleft\": \"<'border-bottom-left-radius'>\",\n        \"-moz-border-radius-bottomright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-border-radius-topleft\": \"<'border-top-left-radius'>\",\n        \"-moz-border-radius-topright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-control-character-visibility\": \"visible|hidden\",\n        \"-moz-osx-font-smoothing\": \"auto|grayscale\",\n        \"-moz-user-select\": \"none|text|all|-moz-none\",\n        \"-ms-flex-align\": \"start|end|center|baseline|stretch\",\n        \"-ms-flex-item-align\": \"auto|start|end|center|baseline|stretch\",\n        \"-ms-flex-line-pack\": \"start|end|center|justify|distribute|stretch\",\n        \"-ms-flex-negative\": \"<'flex-shrink'>\",\n        \"-ms-flex-pack\": \"start|end|center|justify|distribute\",\n        \"-ms-flex-order\": \"<integer>\",\n        \"-ms-flex-positive\": \"<'flex-grow'>\",\n        \"-ms-flex-preferred-size\": \"<'flex-basis'>\",\n        \"-ms-interpolation-mode\": \"nearest-neighbor|bicubic\",\n        \"-ms-grid-column-align\": \"start|end|center|stretch\",\n        \"-ms-grid-row-align\": \"start|end|center|stretch\",\n        \"-ms-hyphenate-limit-last\": \"none|always|column|page|spread\",\n        \"-webkit-background-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-column-break-after\": \"always|auto|avoid\",\n        \"-webkit-column-break-before\": \"always|auto|avoid\",\n        \"-webkit-column-break-inside\": \"always|auto|avoid\",\n        \"-webkit-font-smoothing\": \"auto|none|antialiased|subpixel-antialiased\",\n        \"-webkit-mask-box-image\": \"[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?\",\n        \"-webkit-print-color-adjust\": \"economy|exact\",\n        \"-webkit-text-security\": \"none|circle|disc|square\",\n        \"-webkit-user-drag\": \"none|element|auto\",\n        \"-webkit-user-select\": \"auto|none|text|all\",\n        \"alignment-baseline\": \"auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical\",\n        \"baseline-shift\": \"baseline|sub|super|<svg-length>\",\n        \"behavior\": \"<url>+\",\n        \"cue\": \"<'cue-before'> <'cue-after'>?\",\n        \"cue-after\": \"<url> <decibel>?|none\",\n        \"cue-before\": \"<url> <decibel>?|none\",\n        \"glyph-orientation-horizontal\": \"<angle>\",\n        \"glyph-orientation-vertical\": \"<angle>\",\n        \"kerning\": \"auto|<svg-length>\",\n        \"pause\": \"<'pause-before'> <'pause-after'>?\",\n        \"pause-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"pause-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest\": \"<'rest-before'> <'rest-after'>?\",\n        \"rest-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n        \"speak\": \"auto|never|always\",\n        \"speak-as\": \"normal|spell-out||digits||[literal-punctuation|no-punctuation]\",\n        \"unicode-range\": \"<urange>#\",\n        \"voice-balance\": \"<number>|left|center|right|leftwards|rightwards\",\n        \"voice-duration\": \"auto|<time>\",\n        \"voice-family\": \"[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve\",\n        \"voice-pitch\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-range\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-rate\": \"[normal|x-slow|slow|medium|fast|x-fast]||<percentage>\",\n        \"voice-stress\": \"normal|strong|moderate|none|reduced\",\n        \"voice-volume\": \"silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]\",\n        \"white-space-trim\": \"none|discard-before||discard-after||discard-inner\"\n    },\n    \"atrules\": {\n        \"charset\": {\n            \"prelude\": \"<string>\",\n            \"descriptors\": null\n        },\n        \"counter-style\": {\n            \"prelude\": \"<counter-style-name>\",\n            \"descriptors\": {\n                \"additive-symbols\": \"[<integer>&&<symbol>]#\",\n                \"fallback\": \"<counter-style-name>\",\n                \"negative\": \"<symbol> <symbol>?\",\n                \"pad\": \"<integer>&&<symbol>\",\n                \"prefix\": \"<symbol>\",\n                \"range\": \"[[<integer>|infinite]{2}]#|auto\",\n                \"speak-as\": \"auto|bullets|numbers|words|spell-out|<counter-style-name>\",\n                \"suffix\": \"<symbol>\",\n                \"symbols\": \"<symbol>+\",\n                \"system\": \"cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]\"\n            }\n        },\n        \"document\": {\n            \"prelude\": \"[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#\",\n            \"descriptors\": null\n        },\n        \"font-palette-values\": {\n            \"prelude\": \"<dashed-ident>\",\n            \"descriptors\": {\n                \"base-palette\": \"light|dark|<integer [0,∞]>\",\n                \"font-family\": \"<family-name>#\",\n                \"override-colors\": \"[<integer [0,∞]> <absolute-color-base>]#\"\n            }\n        },\n        \"font-face\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"ascent-override\": \"normal|<percentage>\",\n                \"descent-override\": \"normal|<percentage>\",\n                \"font-display\": \"[auto|block|swap|fallback|optional]\",\n                \"font-family\": \"<family-name>\",\n                \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n                \"font-variation-settings\": \"normal|[<string> <number>]#\",\n                \"font-stretch\": \"<font-stretch-absolute>{1,2}\",\n                \"font-style\": \"normal|italic|oblique <angle>{0,2}\",\n                \"font-weight\": \"<font-weight-absolute>{1,2}\",\n                \"line-gap-override\": \"normal|<percentage>\",\n                \"size-adjust\": \"<percentage>\",\n                \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n                \"unicode-range\": \"<urange>#\"\n            }\n        },\n        \"font-feature-values\": {\n            \"prelude\": \"<family-name>#\",\n            \"descriptors\": null\n        },\n        \"import\": {\n            \"prelude\": \"[<string>|<url>] [layer|layer( <layer-name> )]? [supports( [<supports-condition>|<declaration>] )]? <media-query-list>?\",\n            \"descriptors\": null\n        },\n        \"keyframes\": {\n            \"prelude\": \"<keyframes-name>\",\n            \"descriptors\": null\n        },\n        \"layer\": {\n            \"prelude\": \"[<layer-name>#|<layer-name>?]\",\n            \"descriptors\": null\n        },\n        \"media\": {\n            \"prelude\": \"<media-query-list>\",\n            \"descriptors\": null\n        },\n        \"namespace\": {\n            \"prelude\": \"<namespace-prefix>? [<string>|<url>]\",\n            \"descriptors\": null\n        },\n        \"page\": {\n            \"prelude\": \"<page-selector-list>\",\n            \"descriptors\": {\n                \"bleed\": \"auto|<length>\",\n                \"marks\": \"none|[crop||cross]\",\n                \"page-orientation\": \"upright|rotate-left|rotate-right\",\n                \"size\": \"<length>{1,2}|auto|[<page-size>||[portrait|landscape]]\"\n            }\n        },\n        \"position-try\": {\n            \"prelude\": \"<dashed-ident>\",\n            \"descriptors\": {\n                \"top\": \"<'top'>\",\n                \"left\": \"<'left'>\",\n                \"bottom\": \"<'bottom'>\",\n                \"right\": \"<'right'>\",\n                \"inset-block-start\": \"<'inset-block-start'>\",\n                \"inset-block-end\": \"<'inset-block-end'>\",\n                \"inset-inline-start\": \"<'inset-inline-start'>\",\n                \"inset-inline-end\": \"<'inset-inline-end'>\",\n                \"inset-block\": \"<'inset-block'>\",\n                \"inset-inline\": \"<'inset-inline'>\",\n                \"inset\": \"<'inset'>\",\n                \"margin-top\": \"<'margin-top'>\",\n                \"margin-left\": \"<'margin-left'>\",\n                \"margin-bottom\": \"<'margin-bottom'>\",\n                \"margin-right\": \"<'margin-right'>\",\n                \"margin-block-start\": \"<'margin-block-start'>\",\n                \"margin-block-end\": \"<'margin-block-end'>\",\n                \"margin-inline-start\": \"<'margin-inline-start'>\",\n                \"margin-inline-end\": \"<'margin-inline-end'>\",\n                \"margin\": \"<'margin'>\",\n                \"margin-block\": \"<'margin-block'>\",\n                \"margin-inline\": \"<'margin-inline'>\",\n                \"width\": \"<'width'>\",\n                \"height\": \"<'height'>\",\n                \"min-width\": \"<'min-width'>\",\n                \"min-height\": \"<'min-height'>\",\n                \"max-width\": \"<'max-width'>\",\n                \"max-height\": \"<'max-height'>\",\n                \"block-size\": \"<'block-size'>\",\n                \"inline-size\": \"<'inline-size'>\",\n                \"min-block-size\": \"<'min-block-size'>\",\n                \"min-inline-size\": \"<'min-inline-size'>\",\n                \"max-block-size\": \"<'max-block-size'>\",\n                \"max-inline-size\": \"<'max-inline-size'>\",\n                \"align-self\": \"<'align-self'>|anchor-center\",\n                \"justify-self\": \"<'justify-self'>|anchor-center\"\n            }\n        },\n        \"property\": {\n            \"prelude\": \"<custom-property-name>\",\n            \"descriptors\": {\n                \"syntax\": \"<string>\",\n                \"inherits\": \"true|false\",\n                \"initial-value\": \"<declaration-value>?\"\n            }\n        },\n        \"scope\": {\n            \"prelude\": \"[( <scope-start> )]? [to ( <scope-end> )]?\",\n            \"descriptors\": null\n        },\n        \"starting-style\": {\n            \"prelude\": null,\n            \"descriptors\": null\n        },\n        \"supports\": {\n            \"prelude\": \"<supports-condition>\",\n            \"descriptors\": null\n        },\n        \"container\": {\n            \"prelude\": \"[<container-name>]? <container-condition>\",\n            \"descriptors\": null\n        },\n        \"nest\": {\n            \"prelude\": \"<complex-selector-list>\",\n            \"descriptors\": null\n        }\n    }\n};","import {\n    Ident,\n    String as StringToken,\n    Number as NumberToken,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Dimension,\n    Percentage,\n    LeftParenthesis,\n    LeftSquareBracket,\n    Comma,\n    Delim\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\nconst ASTERISK = 0x002A;    // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\nconst U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\n\nexport default function defaultRecognizer(context) {\n    switch (this.tokenType) {\n        case Hash:\n            return this.Hash();\n\n        case Comma:\n            return this.Operator();\n\n        case LeftParenthesis:\n            return this.Parentheses(this.readSequence, context.recognizer);\n\n        case LeftSquareBracket:\n            return this.Brackets(this.readSequence, context.recognizer);\n\n        case StringToken:\n            return this.String();\n\n        case Dimension:\n            return this.Dimension();\n\n        case Percentage:\n            return this.Percentage();\n\n        case NumberToken:\n            return this.Number();\n\n        case FunctionToken:\n            return this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')\n                ? this.Url()\n                : this.Function(this.readSequence, context.recognizer);\n\n        case Url:\n            return this.Url();\n\n        case Ident:\n            // check for unicode range, it should start with u+ or U+\n            if (this.cmpChar(this.tokenStart, U) &&\n                this.cmpChar(this.tokenStart + 1, PLUSSIGN)) {\n                return this.UnicodeRange();\n            } else {\n                return this.Identifier();\n            }\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            if (code === SOLIDUS ||\n                code === ASTERISK ||\n                code === PLUSSIGN ||\n                code === HYPHENMINUS) {\n                return this.Operator(); // TODO: replace with Delim\n            }\n\n            // TODO: produce a node with Delim node type\n\n            if (code === NUMBERSIGN) {\n                this.error('Hex or identifier is expected', this.tokenStart + 1);\n            }\n\n            break;\n        }\n    }\n};\n","import getNode from './default.js';\n\nexport default {\n    getNode\n};\n","import {\n    Delim,\n    Ident,\n    Dimension,\n    Percentage,\n    Number as NumberToken,\n    Hash,\n    Colon,\n    LeftSquareBracket\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nfunction onWhiteSpace(next, children) {\n    if (children.last !== null && children.last.type !== 'Combinator' &&\n        next !== null && next.type !== 'Combinator') {\n        children.push({  // FIXME: this.Combinator() should be used instead\n            type: 'Combinator',\n            loc: null,\n            name: ' '\n        });\n    }\n}\n\nfunction getNode() {\n    switch (this.tokenType) {\n        case LeftSquareBracket:\n            return this.AttributeSelector();\n\n        case Hash:\n            return this.IdSelector();\n\n        case Colon:\n            if (this.lookupType(1) === Colon) {\n                return this.PseudoElementSelector();\n            } else {\n                return this.PseudoClassSelector();\n            }\n\n        case Ident:\n            return this.TypeSelector();\n\n        case NumberToken:\n        case Percentage:\n            return this.Percentage();\n\n        case Dimension:\n            // throws when .123ident\n            if (this.charCodeAt(this.tokenStart) === FULLSTOP) {\n                this.error('Identifier is expected', this.tokenStart + 1);\n            }\n            break;\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            switch (code) {\n                case PLUSSIGN:\n                case GREATERTHANSIGN:\n                case TILDE:\n                case SOLIDUS:  // /deep/\n                    return this.Combinator();\n\n                case FULLSTOP:\n                    return this.ClassSelector();\n\n                case ASTERISK:\n                case VERTICALLINE:\n                    return this.TypeSelector();\n\n                case NUMBERSIGN:\n                    return this.IdSelector();\n\n                case AMPERSAND:\n                    return this.NestingSelector();\n            }\n\n            break;\n        }\n    }\n};\n\nexport default {\n    onWhiteSpace,\n    getNode\n};\n","import getNode from './default.js';\nimport expressionFn from '../function/expression.js';\nimport varFn from '../function/var.js';\n\nfunction isPlusMinusOperator(node) {\n    return (\n        node !== null &&\n        node.type === 'Operator' &&\n        (node.value[node.value.length - 1] === '-' || node.value[node.value.length - 1] === '+')\n    );\n}\n\nexport default {\n    getNode,\n    onWhiteSpace(next, children) {\n        if (isPlusMinusOperator(next)) {\n            next.value = ' ' + next.value;\n        }\n        if (isPlusMinusOperator(children.last)) {\n            children.last.value += ' ';\n        }\n    },\n    'expression': expressionFn,\n    'var': varFn\n};\n","// legacy IE function\n// expression( <any-value> )\nexport default function() {\n    return this.createSingleNodeList(\n        this.Raw(null, false)\n    );\n}\n","import { Comma, WhiteSpace } from '../../tokenizer/index.js';\n\n// var( <ident> , <value>? )\nexport default function() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n    children.push(this.Identifier());\n\n    this.skipSC();\n\n    if (this.tokenType === Comma) {\n        children.push(this.Operator());\n\n        const startIndex = this.tokenIndex;\n        const value = this.parseCustomProperty\n            ? this.Value(null)\n            : this.Raw(this.consumeUntilExclamationMarkOrSemicolon, false);\n\n        if (value.type === 'Value' && value.children.isEmpty) {\n            for (let offset = startIndex - this.tokenIndex; offset <= 0; offset++) {\n                if (this.lookupType(offset) === WhiteSpace) {\n                    value.children.appendData({\n                        type: 'WhiteSpace',\n                        loc: null,\n                        value: ' '\n                    });\n                    break;\n                }\n            }\n        }\n\n        children.push(value);\n    }\n\n    return children;\n};\n","import { Ident } from '../../tokenizer/index.js';\n\n// https://drafts.csswg.org/css-contain-3/#container-rule\n// The keywords `none`, `and`, `not`, and `or` are excluded from the <custom-ident> above.\nconst nonContainerNameKeywords = new Set(['none', 'and', 'not', 'or']);\n\nexport default {\n    parse: {\n        prelude() {\n            const children = this.createList();\n\n            if (this.tokenType === Ident) {\n                const name = this.substring(this.tokenStart, this.tokenEnd);\n\n                if (!nonContainerNameKeywords.has(name.toLowerCase())) {\n                    children.push(this.Identifier());\n                }\n            }\n\n            children.push(this.Condition('container'));\n\n            return children;\n        },\n        block(nested = false) {\n            return this.Block(nested);\n        }\n    }\n};\n","export default {\n    parse: {\n        prelude: null,\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n","import {\n    String as StringToken,\n    Ident,\n    Url,\n    Function as FunctionToken,\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nfunction parseWithFallback(parse, fallback) {\n    return this.parseWithFallback(\n        () => {\n            try {\n                return parse.call(this);\n            } finally {\n                this.skipSC();\n                if (this.lookupNonWSType(0) !== RightParenthesis) {\n                    this.error();\n                }\n            }\n        },\n        fallback || (() => this.Raw(null, true))\n    );\n}\n\nconst parseFunctions = {\n    layer() {\n        this.skipSC();\n\n        const children = this.createList();\n        const node = parseWithFallback.call(this, this.Layer);\n\n        if (node.type !== 'Raw' || node.value !== '') {\n            children.push(node);\n        }\n\n        return children;\n    },\n    supports() {\n        this.skipSC();\n\n        const children = this.createList();\n        const node = parseWithFallback.call(\n            this,\n            this.Declaration,\n            () => parseWithFallback.call(this, () => this.Condition('supports'))\n        );\n\n        if (node.type !== 'Raw' || node.value !== '') {\n            children.push(node);\n        }\n\n        return children;\n    }\n};\n\nexport default {\n    parse: {\n        prelude() {\n            const children = this.createList();\n\n            switch (this.tokenType) {\n                case StringToken:\n                    children.push(this.String());\n                    break;\n\n                case Url:\n                case FunctionToken:\n                    children.push(this.Url());\n                    break;\n\n                default:\n                    this.error('String or url() is expected');\n            }\n\n            this.skipSC();\n\n            if (this.tokenType === Ident &&\n                this.cmpStr(this.tokenStart, this.tokenEnd, 'layer')) {\n                children.push(this.Identifier());\n            } else if (\n                this.tokenType === FunctionToken &&\n                this.cmpStr(this.tokenStart, this.tokenEnd, 'layer(')\n            ) {\n                children.push(this.Function(null, parseFunctions));\n            }\n\n            this.skipSC();\n\n            if (this.tokenType === FunctionToken &&\n                this.cmpStr(this.tokenStart, this.tokenEnd, 'supports(')) {\n                children.push(this.Function(null, parseFunctions));\n            }\n\n            if (this.lookupNonWSType(0) === Ident ||\n                this.lookupNonWSType(0) === LeftParenthesis) {\n                children.push(this.MediaQueryList());\n            }\n\n            return children;\n        },\n        block: null\n    }\n};\n","import container from './container.js';\nimport fontFace from './font-face.js';\nimport importAtrule from './import.js';\nimport layer from './layer.js';\nimport media from './media.js';\nimport nest from './nest.js';\nimport page from './page.js';\nimport scope from './scope.js';\nimport startingStyle from './starting-style.js';\nimport supports from './supports.js';\n\nexport default {\n    container,\n    'font-face': fontFace,\n    import: importAtrule,\n    layer,\n    media,\n    nest,\n    page,\n    scope,\n    'starting-style': startingStyle,\n    supports\n};\n","export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.LayerList()\n            );\n        },\n        block() {\n            return this.Block(false);\n        }\n    }\n};\n","export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.MediaQueryList()\n            );\n        },\n        block(nested = false) {\n            return this.Block(nested);\n        }\n    }\n};\n","export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n","export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n","export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.Scope()\n            );\n        },\n        block(nested = false) {\n            return this.Block(nested);\n        }\n    }\n};\n","export default {\n    parse: {\n        prelude: null,\n        block(nested = false) {\n            return this.Block(nested);\n        }\n    }\n};\n","export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.Condition('supports')\n            );\n        },\n        block(nested = false) {\n            return this.Block(nested);\n        }\n    }\n};\n","import { parseLanguageRangeList } from './lang.js';\n\nconst selectorList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.SelectorList()\n        );\n    }\n};\n\nconst selector = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Selector()\n        );\n    }\n};\n\nconst identList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Identifier()\n        );\n    }\n};\n\nconst langList = {\n    parse: parseLanguageRangeList\n};\n\nconst nth = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Nth()\n        );\n    }\n};\n\nexport default {\n    'dir': identList,\n    'has': selectorList,\n    'lang': langList,\n    'matches': selectorList,\n    'is': selectorList,\n    '-moz-any': selectorList,\n    '-webkit-any': selectorList,\n    'where': selectorList,\n    'not': selectorList,\n    'nth-child': nth,\n    'nth-last-child': nth,\n    'nth-last-of-type': nth,\n    'nth-of-type': nth,\n    'slotted': selector,\n    'host': selector,\n    'host-context': selector\n};\n","import { Comma, String as StringToken, Ident, RightParenthesis } from '../../tokenizer/index.js';\n\nexport function parseLanguageRangeList() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    loop: while (!this.eof) {\n        switch (this.tokenType) {\n            case Ident:\n                children.push(this.Identifier());\n                break;\n\n            case StringToken:\n                children.push(this.String());\n                break;\n\n            case Comma:\n                children.push(this.Operator());\n                break;\n\n            case RightParenthesis:\n                break loop;\n\n            default:\n                this.error('Identifier, string or comma is expected');\n        }\n\n        this.skipSC();\n    }\n\n    return children;\n}\n","import createSyntax from './create.js';\nimport lexerConfig from './config/lexer.js';\nimport parserConfig from './config/parser.js';\nimport walkerConfig from './config/walker.js';\n\nexport default createSyntax({\n    ...lexerConfig,\n    ...parserConfig,\n    ...walkerConfig\n});\n","import * as scope from '../scope/index.js';\nimport atrule from '../atrule/index.js';\nimport pseudo from '../pseudo/index.js';\nimport * as node from '../node/index-parse.js';\n\nexport default {\n    parseContext: {\n        default: 'StyleSheet',\n        stylesheet: 'StyleSheet',\n        atrule: 'Atrule',\n        atrulePrelude(options) {\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\n        },\n        mediaQueryList: 'MediaQueryList',\n        mediaQuery: 'MediaQuery',\n        condition(options) {\n            return this.Condition(options.kind);\n        },\n        rule: 'Rule',\n        selectorList: 'SelectorList',\n        selector: 'Selector',\n        block() {\n            return this.Block(true);\n        },\n        declarationList: 'DeclarationList',\n        declaration: 'Declaration',\n        value: 'Value'\n    },\n    features: {\n        supports: {\n            selector() {\n                return this.Selector();\n            }\n        },\n        container: {\n            style() {\n                return this.Declaration();\n            }\n        }\n    },\n    scope,\n    atrule,\n    pseudo,\n    node\n};\n","import * as node from '../node/index.js';\n\nexport default {\n    node\n};\n","export const version = \"3.1.0\";","import { List } from './List.js';\n\nexport function clone(node) {\n    const result = {};\n\n    for (const key of Object.keys(node)) {\n        let value = node[key];\n\n        if (value) {\n            if (Array.isArray(value) || value instanceof List) {\n                value = value.map(clone);\n            } else if (value.constructor === Object) {\n                value = clone(value);\n            }\n        }\n\n        result[key] = value;\n    }\n\n    return result;\n}\n","import {\n    isName,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nexport function decode(str) {\n    const end = str.length - 1;\n    let decoded = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-an-identifier\n// § 2.1. Common Serializing Idioms\nexport function encode(str) {\n    let encoded = '';\n\n    // If the character is the first character and is a \"-\" (U+002D),\n    // and there is no second character, then the escaped character.\n    // Note: That's means a single dash string \"-\" return as escaped dash,\n    // so move the condition out of the main loop\n    if (str.length === 1 && str.charCodeAt(0) === 0x002D) {\n        return '\\\\-';\n    }\n\n    // To serialize an identifier means to create a string represented\n    // by the concatenation of, for each character of the identifier:\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        if (\n            // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F ...\n            // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n            code <= 0x001F || code === 0x007F ||\n            // [or] ... is in the range [0-9] (U+0030 to U+0039),\n            (code >= 0x0030 && code <= 0x0039 && (\n                // If the character is the first character ...\n                i === 0 ||\n                // If the character is the second character ... and the first character is a \"-\" (U+002D)\n                i === 1 && str.charCodeAt(0) === 0x002D\n            ))\n        ) {\n            // ... then the character escaped as code point.\n            encoded += '\\\\' + code.toString(16) + ' ';\n            continue;\n        }\n\n        // If the character is not handled by one of the above rules and is greater\n        // than or equal to U+0080, is \"-\" (U+002D) or \"_\" (U+005F), or is in one\n        // of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to U+005A),\n        // or \\[a-z] (U+0061 to U+007A), then the character itself.\n        if (isName(code)) {\n            encoded += str.charAt(i);\n        } else {\n            // Otherwise, the escaped character.\n            encoded += '\\\\' + str.charAt(i);\n        }\n    }\n\n    return encoded;\n}\n","import syntax from './syntax/index.js';\n\nexport * from './version.js';\nexport { default as createSyntax } from './syntax/create.js';\nexport { List } from './utils/List.js';\nexport { Lexer } from './lexer/Lexer.js';\nexport { tokenTypes, tokenNames, TokenStream, OffsetToLocation } from './tokenizer/index.js';\nexport * as definitionSyntax from './definition-syntax/index.js';\nexport { clone } from './utils/clone.js';\nexport * from './utils/names.js';\nexport * as ident from './utils/ident.js';\nexport * as string from './utils/string.js';\nexport * as url from './utils/url.js';\nexport const {\n    tokenize,\n    parse,\n    generate,\n    lexer,\n    createLexer,\n\n    walk,\n    find,\n    findLast,\n    findAll,\n\n    toPlainObject,\n    fromPlainObject,\n\n    fork\n} = syntax;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._ignoreInvalidMapping = util.getArg(aArgs, 'ignoreInvalidMapping', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer, generatorOps) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator(Object.assign(generatorOps || {}, {\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    }));\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      if (this._validateMapping(generated, original, source, name) === false) {\n        return;\n      }\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n      var message = 'original.line and original.column are not numbers -- you probably meant to omit ' +\n      'the original mapping entirely and only map the generated position. If so, pass ' +\n      'null for the original mapping instead of an object with empty or null values.'\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message);\n      }\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      var message = 'Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      });\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message)\n      }\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n"],"names":["EOF","Ident","Function","AtKeyword","Hash","BadString","Url","BadUrl","Delim","Percentage","Dimension","WhiteSpace","CDO","CDC","Colon","Semicolon","Comma","LeftSquareBracket","RightSquareBracket","LeftParenthesis","RightParenthesis","LeftCurlyBracket","RightCurlyBracket","Comment","isDigit","code","isHexDigit","isUppercaseLetter","isNameStart","isLowercaseLetter","isLetter","isNonAscii","isName","isNonPrintable","isNewline","isWhiteSpace","isValidEscape","first","second","isIdentifierStart","third","isNumberStart","isBOM","CATEGORY","Array","WhiteSpaceCategory","i","length","charCodeCategory","getCharCode","source","offset","charCodeAt","getNewlineLength","cmpChar","testStr","referenceCode","cmpStr","start","end","referenceStr","testCode","findWhiteSpaceEnd","findDecimalNumberEnd","consumeEscaped","maxOffset","Math","min","consumeName","consumeNumber","sign","consumeBadUrlRemnants","decodeEscaped","escaped","parseInt","String","fromCodePoint","adoptBuffer","buffer","size","Uint32Array","max","computeLinesAndColumns","host","sourceLength","startOffset","lines","columns","line","startLine","column","startColumn","computed","OffsetToLocation","constructor","this","setSource","getLocation","filename","getLocationRange","OFFSET_MASK","TYPE_SHIFT","balancePair","Uint8Array","isBlockOpenerToken","tokenType","TokenStream","tokenize","reset","eof","tokenIndex","tokenStart","firstCharOffset","tokenEnd","offsetAndType","balance","tokenCount","balanceCloseType","balanceStart","fill","type","index","prevBalanceStart","balanceEnd","next","lookupType","lookupTypeNonSC","idx","lookupOffset","lookupOffsetNonSC","lookupValue","getTokenStart","substrToCursor","substring","isBalanceEdge","pos","isDelim","skip","skipSC","skipUntilBalanced","startToken","stopConsume","cursor","loop","forEachToken","fn","item","dump","tokens","chunk","onToken","consumeNumericToken","consumeIdentLikeToken","nameStartOffset","consumeUrlToken","consumeStringToken","endingCodePoint","nextCode","indexOf","releasedCursors","List","createItem","data","prev","head","tail","allocateCursor","releaseCursor","updateCursors","prevOld","prevNew","nextOld","nextNew","Symbol","iterator","isEmpty","last","fromArray","array","toArray","toJSON","forEach","thisArg","call","forEachRight","reduce","initialValue","acc","reduceRight","some","map","result","appendData","filter","nextUntil","prevUntil","clear","copy","prepend","prependData","append","insert","before","Error","insertData","remove","push","pop","unshift","shift","prependList","list","insertList","appendList","replace","oldItem","newItemOrList","createCustomError","name","message","error","Object","create","SyntaxError","prototype","errorStack","assign","stack","TAB_REPLACEMENT","sourceFragment","baseLine","baseColumn","extraLines","processLines","slice","padStart","maxNumLength","join","repeat","split","endLine","cutLeft","substr","match","OFFSET_CORRECTION","MAX_LINE_LENGTH","Boolean","isNaN","formattedMessage","readSequence","recognizer","children","createList","space","context","child","getNode","undefined","onWhiteSpace","NOOP","createParseContext","fetchParseValues","dict","keys","parse","createParser","config","needPositions","onParseError","onParseErrorThrow","locationMap","parser","parseConfig","features","scope","atrule","pseudo","node","entries","parseContext","processConfig","parseAtrulePrelude","parseRulePrelude","parseValue","parseCustomProperty","consumeUntilBalanceEnd","consumeUntilLeftCurlyBracket","consumeUntilLeftCurlyBracketOrSemicolon","consumeUntilExclamationMarkOrSemicolon","consumeUntilSemicolonIncluded","createSingleNodeList","getFirstListNode","getLastListNode","parseWithFallback","consumer","fallback","startIndex","e","fallbackNode","lookupNonWSType","offsetStart","offsetEnd","charCode","str","consume","eat","consumeFunctionName","number","tokenName","m","toUpperCase","test","eatIdent","eatDelim","fromCharCode","getLocationFromList","loc","location","findWhiteSpaceStart","source_","options","positions","onComment","value","ast","trackNodes","Set","specPairs","safePairs","concat","createMap","pairs","isWhiteSpaceRequired","prevCode","nextCharCode","has","emit","spec","safe","processChildren","delimeter","processChunk","token","createGenerator","types","Map","generate","set","handlers","get","publicApi","tokenBefore","decorator","sourceMap","generated","original","activatedGenerated","activatedMapping","sourceMappingActive","origHandlersNode","nodeLine","nodeColumn","addMapping","origHandlersEmit","auto","origHandlersResult","css","generateSourceMap","mode","hasOwnProperty","noop","ensureFunction","invokeForType","getWalkersFromStructure","nodeType","structure","walkers","key","fieldTypes","walker","nullable","isArray","fieldType","walkContext","fields","createTypeIterator","reverse","contextName","useContext","walk","walkReducer","prevContextValue","field","ref","createFastTraveralMap","StyleSheet","Atrule","Rule","Block","DeclarationList","Declaration","createWalker","getTypesFromConfig","iteratorsNatural","iteratorsReverse","breakWalk","skipNode","fastTraversalIteratorsNatural","fastTraversalIteratorsReverse","root","walkNode","enterRet","enter","iterators","leave","ret","break","stylesheet","atrulePrelude","rule","selector","block","declaration","function","visit","sort","find","found","findLast","findAll","internalGenerate","decorate","forceBraces","compact","combinator","terms","term","explicit","generateSequence","disallowEmpty","multiplier","comma","generateMultiplier","opts","generateTypeOpts","defaultLoc","fromLoc","point","buildLoc","extra","SyntaxReferenceError","referenceName","reference","SyntaxMatchError","syntax","matchResult","mismatchOffset","mismatchLength","longestMatch","mismatchNode","badNode","locateMismatch","rawMessage","keywords","properties","keyword","toLowerCase","descriptor","custom","isCustomProperty","vendor","getVendorPrefix","freeze","basename","prefix","property","hack","vendorPrefix","secondDashIndex","cssWideKeywords","DISALLOW_SIGN","getNextToken","checkInteger","valueOffset","disallowSign","consumeB","offset_","hexSequence","allowDash","hexlen","withQuestionMarkSequence","consumed","calcFunctionNames","eqStr","actual","expected","eqStrAny","isPostfixIeHack","outOfRange","numEnd","num","Number","calc","balanceStash","scan","consumeFunction","expectedTokenType","dashedIdent","dimension","numberEnd","reverseSolidusOffset","unit","zero","tokenTypes","productionTypes","consumedHexLength","startsWith","createDemensionTypes","units","angle","decibel","frequency","flex","resolution","semitones","time","input","NAME_CHAR","_","Scanner","isNameCharCode","nextNonWsCode","findWsEnd","skipWs","substringToPos","peek","charAt","scanSpaces","scanWord","scanNumber","scanString","AMPERSAND","APOSTROPHE","LEFTPARENTHESIS","RIGHTPARENTHESIS","ASTERISK","COMMA","HYPERMINUS","LESSTHANSIGN","GREATERTHANSIGN","COMMERCIALAT","LEFTSQUAREBRACKET","RIGHTSQUAREBRACKET","VERTICALLINE","RIGHTCURLYBRACKET","INFINITY","COMBINATOR_PRECEDENCE","readMultiplierRange","scanner","maybeMultiplied","range","readMultiplier","maybeToken","ch","readType","implicitGroup","readImplicitGroup","readTypeRange","regroupTerms","combinators","createGroup","a","b","subgroupStart","splice","stopCharCode","prevToken","prevTokenPos","readGroup","readProperty","readKeywordOrFunction","astToTokens","curNode","tmp","stringToTokens","MATCH","MISMATCH","DISALLOW_EMPTY","createCondition","thenBranch","elseBranch","else","then","isFunctionType","isEnumCapatible","groupNode","replaceTypeInGraph","replacements","visited","add","buildGroupMatchGraph","atLeastOneTermMatched","all","thenClause","newGroupTerm","buildMatchGraphInternal","matchTerm","buildMultiplierMatchGraph","matchNode","booleanGroup","buildMatchGraph","syntaxTree","EXIT_REASON_MATCH","totalIterationCount","reverseList","areStringsEqualCaseInsensitive","isCommaContextStart","isContextEdgeDelim","isCommaContextEnd","internalMatch","state","syntaxes","moveToNextToken","nextIndex","stateSnapshotFromSyntax","nextState","matchStack","syntaxStack","thenStack","pushThenStack","pushElseStack","elseStack","addTokenToMatch","syntaxStash","closeSyntax","iterationCount","exitReason","mask","matchFlag","lastTokenIndex","floor","syntaxDict","dictSyntax","matchRef","keywordName","string","console","warn","reason","iterations","matchAsTree","matchGraph","hostStack","getTrace","shouldPutToTrace","matched","hasMatch","isType","testNode","isProperty","isKeyword","trace","getFirstMatchNode","getLastMatchNode","matchFragments","lexer","fragments","findFragments","nodes","parent","isValidNumber","isFinite","isValidLocation","createNodeStructureChecker","valid","genTypesList","path","docsTypes","processStructure","docs","check","dumpMapSyntax","syntaxAsAst","dumpAtruleMapSyntax","prelude","descriptors","buildMatchResult","matchSyntax","useCssWideKeywords","valueHasVar","cssWideKeywordsSyntax","Lexer","generic","atrules","getStructureFromConfig","group","addType_","addAtrule_","addProperty_","checkStructure","collectWarning","warns","createDescriptor","serializable","defineProperty","singleTerm","syntaxHasTopLevelCommaMultiplier","descName","checkAtruleName","atruleName","getAtrule","checkAtrulePrelude","checkAtruleDescriptorName","descriptorName","checkPropertyName","propertyName","getProperty","matchAtrulePrelude","matchAtruleDescriptor","matchDeclaration","matchProperty","matchType","typeName","typeSyntax","getType","findValueFragments","findDeclarationValueFragments","findAllFragments","apply","fallbackBasename","getAtrulePrelude","getAtruleDescriptor","declarators","validate","syntaxRef","broken","brokenMap","brokenTypes","brokenProperties","errors","brokenTypesArray","brokenPropertiesArray","pretty","toString","JSON","stringify","appendOrSet","sliceProps","obj","props","prop","includes","mix","dest","src","patch","exists","current","descriptorValue","createSyntax","fromPlainObject","toPlainObject","createConvertor","createLexer","fork","extension","base","checkTokenIsInteger","expectCharCode","msg","consumeRaw","Raw","isDeclarationBlockAtrule","isDeclaration","nameLowerCase","AtrulePrelude","bind","DOLLARSIGN","EQUALSSIGN","CIRCUMFLEXACCENT","TILDE","getAttributeName","expectIdent","getOperator","matcher","flags","Identifier","consumeRule","consumeRawDeclaration","consumeDeclaration","isStyleBlock","FULLSTOP","SOLIDUS","likelyFeatureToken","kind","featureOrRange","Feature","FeatureRange","parentheses","media","container","supports","SupportsDeclaration","res","Condition","GeneralEnclosed","FeatureFunction","consumeValueRaw","consumeCustomPropertyRaw","consumeValue","startValueToken","Value","important","customProperty","valueStart","getImportant","Ratio","feature","getFeatureParser","functionName","valueParser","left","leftComparison","middle","rightComparison","right","readTerm","readComparison","expectColon","xxx","Layer","modifier","mediaType","condition","ident","identLowerCase","MediaQuery","nth","AnPlusB","SelectorList","consumeTerm","getOffsetExcludeWS","consumeUntil","excludeWhiteSpace","endOffset","consumePrelude","limit","Selector","REVERSE_SOLIDUS","QUOTATION_MARK","decode","len","firstChar","decoded","escapeStart","escapeEnd","encode","apostrophe","quote","quoteCode","encoded","wsBeforeHexIsNeeded","eatIdentifierOrAsterisk","eatHexSequence","eatQuestionMarkSequence","count","scanUnicodeRange","hexLength","defaultRecognizer","Operator","Parentheses","Brackets","UnicodeRange","AttributeSelector","IdSelector","PseudoElementSelector","PseudoClassSelector","TypeSelector","Combinator","ClassSelector","NestingSelector","isPlusMinusOperator","nonContainerNameKeywords","nested","parseFunctions","layer","import","MediaQueryList","LayerList","nest","page","Scope","selectorList","identList","langList","Nth","default","mediaQueryList","mediaQuery","declarationList","style","version","clone","util","hasNativeMap","ArraySet","_array","_set","aArray","aAllowDuplicates","getOwnPropertyNames","aStr","sStr","toSetString","isDuplicate","at","aIdx","exports","base64","aValue","digit","vlq","toVLQSigned","VLQ_BASE","aIndex","aOutParam","continuation","shifted","strLen","rest","intToCharMap","TypeError","MappingList","_sorted","_last","generatedLine","generatedColumn","unsortedForEach","aCallback","aThisArg","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","base64VLQ","SourceMapGenerator","aArgs","_file","getArg","_sourceRoot","_skipValidation","_ignoreInvalidMapping","_sources","_names","_mappings","_sourcesContents","_version","fromSourceMap","aSourceMapConsumer","generatorOps","sourceRoot","generator","file","eachMapping","mapping","newMapping","relative","originalLine","originalColumn","sources","sourceFile","sourceRelative","content","sourceContentFor","setSourceContent","_validateMapping","aSourceFile","aSourceContent","applySourceMap","aSourceMapPath","newSources","newNames","originalPositionFor","aGenerated","aOriginal","aSource","aName","_serializeMappings","nameIdx","sourceIdx","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","mappings","_generateSourcesContent","aSources","aSourceRoot","names","sourcesContent","aDefaultValue","arguments","urlRegexp","dataUrlRegexp","urlParse","aUrl","scheme","auth","port","urlGenerate","aParsedUrl","url","f","cache","normalize","aPath","isAbsolute","parts","part","up","temp","aRoot","aPathUrl","aRootUrl","joined","level","lastIndexOf","supportsNullProto","identity","s","isProtoString","strcmp","aStr1","aStr2","fromSetString","compareByOriginalPositions","onlyCompareOriginal","cmp","compareByOriginalPositionsNoSource","compareByGeneratedPositionsDeflated","onlyCompareGenerated","compareByGeneratedPositionsDeflatedNoLine","parseSourceMapInput","computeSourceURL","sourceURL","sourceMapURL","parsed"],"sourceRoot":""}