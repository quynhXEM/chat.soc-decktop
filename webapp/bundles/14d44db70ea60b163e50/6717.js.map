{"version":3,"file":"bundles/14d44db70ea60b163e50/6717.js","mappings":"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","sources":["webpack://soc-connect/./node_modules/tar-js/lib/header.js","webpack://soc-connect/./node_modules/tar-js/lib/tar.js","webpack://soc-connect/./node_modules/tar-js/lib/utils.js"],"sourcesContent":["/*\n * tar-js\n * MIT (c) 2011 T. Jameson Little\n */\n\n(function () {\n\t\"use strict\";\n\t\n/*\nstruct posix_header {             // byte offset\n\tchar name[100];               //   0\n\tchar mode[8];                 // 100\n\tchar uid[8];                  // 108\n\tchar gid[8];                  // 116\n\tchar size[12];                // 124\n\tchar mtime[12];               // 136\n\tchar chksum[8];               // 148\n\tchar typeflag;                // 156\n\tchar linkname[100];           // 157\n\tchar magic[6];                // 257\n\tchar version[2];              // 263\n\tchar uname[32];               // 265\n\tchar gname[32];               // 297\n\tchar devmajor[8];             // 329\n\tchar devminor[8];             // 337\n\tchar prefix[155];             // 345\n                                  // 500\n};\n*/\n\n\tvar utils = require(\"./utils\"),\n\t\theaderFormat;\n\t\n\theaderFormat = [\n\t\t{\n\t\t\t'field': 'fileName',\n\t\t\t'length': 100\n\t\t},\n\t\t{\n\t\t\t'field': 'fileMode',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'uid',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'gid',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'fileSize',\n\t\t\t'length': 12\n\t\t},\n\t\t{\n\t\t\t'field': 'mtime',\n\t\t\t'length': 12\n\t\t},\n\t\t{\n\t\t\t'field': 'checksum',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'type',\n\t\t\t'length': 1\n\t\t},\n\t\t{\n\t\t\t'field': 'linkName',\n\t\t\t'length': 100\n\t\t},\n\t\t{\n\t\t\t'field': 'ustar',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'owner',\n\t\t\t'length': 32\n\t\t},\n\t\t{\n\t\t\t'field': 'group',\n\t\t\t'length': 32\n\t\t},\n\t\t{\n\t\t\t'field': 'majorNumber',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'minorNumber',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'filenamePrefix',\n\t\t\t'length': 155\n\t\t},\n\t\t{\n\t\t\t'field': 'padding',\n\t\t\t'length': 12\n\t\t}\n\t];\n\n\tfunction formatHeader(data, cb) {\n\t\tvar buffer = utils.clean(512),\n\t\t\toffset = 0;\n\n\t\theaderFormat.forEach(function (value) {\n\t\t\tvar str = data[value.field] || \"\",\n\t\t\t\ti, length;\n\n\t\t\tfor (i = 0, length = str.length; i < length; i += 1) {\n\t\t\t\tbuffer[offset] = str.charCodeAt(i);\n\t\t\t\toffset += 1;\n\t\t\t}\n\n\t\t\toffset += value.length - i; // space it out with nulls\n\t\t});\n\n\t\tif (typeof cb === 'function') {\n\t\t\treturn cb(buffer, offset);\n\t\t}\n\t\treturn buffer;\n\t}\n\t\n\tmodule.exports.structure = headerFormat;\n\tmodule.exports.format = formatHeader;\n}());\n","/*\n * tar-js\n * MIT (c) 2011 T. Jameson Little\n */\n\n(function () {\n\t\"use strict\";\n\n\tvar header = require(\"./header\"),\n\t\tutils = require(\"./utils\"),\n\t\trecordSize = 512,\n\t\tblockSize;\n\t\n\tfunction Tar(recordsPerBlock) {\n\t\tthis.written = 0;\n\t\tblockSize = (recordsPerBlock || 20) * recordSize;\n\t\tthis.out = utils.clean(blockSize);\n\t}\n\n\tTar.prototype.append = function (filepath, input, opts, callback) {\n\t\tvar data,\n\t\t\tchecksum,\n\t\t\tmode,\n\t\t\tmtime,\n\t\t\tuid,\n\t\t\tgid,\n\t\t\theaderArr;\n\n\t\tif (typeof input === 'string') {\n\t\t\tinput = utils.stringToUint8(input);\n\t\t} else if (input.constructor !== Uint8Array.prototype.constructor) {\n\t\t\tthrow 'Invalid input type. You gave me: ' + input.constructor.toString().match(/function\\s*([$A-Za-z_][0-9A-Za-z_]*)\\s*\\(/)[1];\n\t\t}\n\n\t\tif (typeof opts === 'function') {\n\t\t\tcallback = opts;\n\t\t\topts = {};\n\t\t}\n\n\t\topts = opts || {};\n\n\t\tmode = opts.mode || parseInt('777', 8) & 0xfff;\n\t\tmtime = opts.mtime || Math.floor(+new Date() / 1000);\n\t\tuid = opts.uid || 0;\n\t\tgid = opts.gid || 0;\n\n\t\tdata = {\n\t\t\tfileName: filepath,\n\t\t\tfileMode: utils.pad(mode, 7),\n\t\t\tuid: utils.pad(uid, 7),\n\t\t\tgid: utils.pad(gid, 7),\n\t\t\tfileSize: utils.pad(input.length, 11),\n\t\t\tmtime: utils.pad(mtime, 11),\n\t\t\tchecksum: '        ',\n\t\t\ttype: '0', // just a file\n\t\t\tustar: 'ustar  ',\n\t\t\towner: opts.owner || '',\n\t\t\tgroup: opts.group || ''\n\t\t};\n\n\t\t// calculate the checksum\n\t\tchecksum = 0;\n\t\tObject.keys(data).forEach(function (key) {\n\t\t\tvar i, value = data[key], length;\n\n\t\t\tfor (i = 0, length = value.length; i < length; i += 1) {\n\t\t\t\tchecksum += value.charCodeAt(i);\n\t\t\t}\n\t\t});\n\n\t\tdata.checksum = utils.pad(checksum, 6) + \"\\u0000 \";\n\n\t\theaderArr = header.format(data);\n\n\t\tvar i, offset, length;\n\n\t\tthis.out.set(headerArr, this.written);\n\n\t\tthis.written += headerArr.length;\n\n\t\t// If there is not enough space in this.out, we need to expand it to\n\t\t// fit the new input.\n\t\tif (this.written + input.length > this.out.length) {\n\t\t\tthis.out = utils.extend(this.out, this.written, input.length, blockSize);\n\t\t}\n\n\t\tthis.out.set(input, this.written);\n\n\t\t// to the nearest multiple of recordSize\n\t\tthis.written += input.length + (recordSize - (input.length % recordSize || recordSize));\n\n\t\t// make sure there's at least 2 empty records worth of extra space\n\t\tif (this.out.length - this.written < recordSize * 2) {\n\t\t\tthis.out = utils.extend(this.out, this.written, recordSize * 2, blockSize);\n\t\t}\n\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback(this.out);\n\t\t}\n\n\t\treturn this.out;\n\t};\n\n\tTar.prototype.clear = function () {\n\t\tthis.written = 0;\n\t\tthis.out = utils.clean(blockSize);\n\t};\n\n  Tar.utils = utils;\n\n\tTar.stringToUint8 = utils.stringToUint8;\n\tTar.uint8ToBase64 = utils.uint8ToBase64;\n  Tar.base64ToUint8 = utils.base64ToUint8;\n\t\n\tmodule.exports = Tar;\n}());\n","/*\n * tar-js\n * MIT (c) 2011 T. Jameson Little\n */\n\n(function () {\n\t\"use strict\";\n\n\tvar lookup = [\n\t\t\t'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\n\t\t\t'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\n\t\t\t'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',\n\t\t\t'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',\n\t\t\t'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\n\t\t\t'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\n\t\t\t'w', 'x', 'y', 'z', '0', '1', '2', '3',\n\t\t\t'4', '5', '6', '7', '8', '9', '+', '/'\n\t\t];\n\tfunction clean(length) {\n\t\tvar i, buffer = new Uint8Array(length);\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tbuffer[i] = 0;\n\t\t}\n\t\treturn buffer;\n\t}\n\n\tfunction extend(orig, length, addLength, multipleOf) {\n\t\tvar newSize = length + addLength,\n\t\t\tbuffer = clean((parseInt(newSize / multipleOf) + 1) * multipleOf);\n\n\t\tbuffer.set(orig);\n\n\t\treturn buffer;\n\t}\n\n\tfunction pad(num, bytes, base) {\n\t\tnum = num.toString(base || 8);\n\t\treturn \"000000000000\".substr(num.length + 12 - bytes) + num;\n\t}\t\n\t\n\tfunction stringToUint8 (input, out, offset) {\n\t\tvar i, length;\n\n\t\tout = out || clean(input.length);\n\n\t\toffset = offset || 0;\n\t\tfor (i = 0, length = input.length; i < length; i += 1) {\n\t\t\tout[offset] = input.charCodeAt(i);\n\t\t\toffset += 1;\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction uint8ToBase64(uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length;\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n\t\t};\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n\t\t\toutput += tripletToBase64(temp);\n\t\t}\n\n\t\t// this prevents an ERR_INVALID_URL in Chrome (Firefox okay)\n\t\tswitch (output.length % 4) {\n\t\t\tcase 1:\n\t\t\t\toutput += '=';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\toutput += '==';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tfunction base64ToUint8(input) {\n\t\tvar base64 = input.match(/^([^=]+)/)[1],\n\t\t\textraBytes = input.match(/(=*)$/)[1].length,\n\t\t\ti = 0, length = base64.length, temp, offset = 0,\n\t\t\tret = clean(base64.length * .75 + extraBytes);\n\n\t\twhile (i < length) {\n\t\t\ttemp = 0;\n\n\t\t\ttemp |= lookup.indexOf(base64.charAt(i) || 'A') << 18;\n\t\t\ti += 1;\n\t\t\ttemp |= lookup.indexOf(base64.charAt(i) || 'A') << 12;\n\t\t\ti += 1;\n\t\t\ttemp |= lookup.indexOf(base64.charAt(i) || 'A') << 6;\n\t\t\ti += 1;\n\t\t\ttemp |= lookup.indexOf(base64.charAt(i) || 'A');\n\t\t\ti += 1;\n\n\t\t\tret[offset] = temp >> 16 & 0xFF;\n\t\t\toffset += 1;\n\t\t\tret[offset] = temp >> 8 & 0xFF;\n\t\t\toffset += 1;\n\t\t\tret[offset] = temp & 0xFF;\n\t\t\toffset += 1;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tmodule.exports.clean = clean;\n\tmodule.exports.pad = pad;\n\tmodule.exports.extend = extend;\n\tmodule.exports.stringToUint8 = stringToUint8;\n\tmodule.exports.uint8ToBase64 = uint8ToBase64;\n\tmodule.exports.base64ToUint8 = base64ToUint8;\n}());\n"],"names":["headerFormat","utils","module","exports","structure","format","data","cb","buffer","clean","offset","forEach","value","i","length","str","field","charCodeAt","blockSize","header","recordSize","Tar","recordsPerBlock","this","written","out","prototype","append","filepath","input","opts","callback","checksum","mode","mtime","uid","gid","headerArr","stringToUint8","constructor","Uint8Array","toString","match","parseInt","Math","floor","Date","fileName","fileMode","pad","fileSize","type","ustar","owner","group","Object","keys","key","set","extend","clear","uint8ToBase64","base64ToUint8","lookup","num","bytes","base","substr","orig","addLength","multipleOf","uint8","temp","extraBytes","output","base64","ret","indexOf","charAt"],"sourceRoot":""}