{"version":3,"file":"bundles/14d44db70ea60b163e50/6464.js","mappings":"+lBAmCe,SAASA,GAAwB,WAAEC,IAC9C,MAAMC,GAAeC,EAAAA,EAAAA,OACdC,EAAoBC,IAAyBC,EAAAA,EAAAA,WAAS,GAmB7D,OAlBAC,EAAAA,EAAAA,YAAU,KACqBC,WACvB,MAAMC,EAASP,EAAaQ,YAC5BL,EAAsBM,QAAQF,GAA6D,aAA5CA,EAAOG,iCAA2C,EAGrGC,EAAoB,GACrB,CAACX,IAYAY,EAAAA,cAACC,EAAAA,EAAU,CACPC,UAAU,2BACVf,WAAYA,EACZgB,MACIH,EAAAA,cAAA,QAAME,UAAU,mCACXE,EAAAA,EAAAA,IAAG,mDAIZJ,EAAAA,cAAA,UAAII,EAAAA,EAAAA,IAAG,0DACNd,GAAsBU,EAAAA,cAAA,UAAII,EAAAA,EAAAA,IAAG,0DAC9BJ,EAAAA,cAAA,UAAQE,UAAU,YAAWE,EAAAA,EAAAA,IAAG,oDAChCJ,EAAAA,cAACK,EAAAA,EAAa,CACVC,eAAeF,EAAAA,EAAAA,IAAG,gCAClBG,qBAxBZ,WACI,GAAIjB,EACAH,QACG,CACH,MAAM,SAAEqB,GAAaC,EAAAA,GAAMC,aAAaC,EAAAA,EAAwB,CAAC,OAAGC,GAAW,GAAO,GACtFJ,EAASK,KAAK1B,EAClB,CACJ,EAkBY2B,cAAcV,EAAAA,EAAAA,IAAG,yBACjBW,SAAUA,KACN5B,IACA6B,EAAAA,EAAIC,KAAKC,EAAAA,EAAOC,iBAAiB,IAKrD,C","sources":["webpack://soc-connect/./src/async-components/views/dialogs/security/NewRecoveryMethodDialog.tsx"],"sourcesContent":["/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2020 The connect.socjsc.com Foundation C.I.C.\r\nCopyright 2018, 2019 New Vector Ltd\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { type JSX, useEffect, useState } from \"react\";\r\n\r\nimport dis from \"../../../../dispatcher/dispatcher\";\r\nimport { _t } from \"../../../../languageHandler\";\r\nimport Modal from \"../../../../Modal\";\r\nimport RestoreKeyBackupDialog from \"../../../../components/views/dialogs/security/RestoreKeyBackupDialog\";\r\nimport { Action } from \"../../../../dispatcher/actions\";\r\nimport DialogButtons from \"../../../../components/views/elements/DialogButtons\";\r\nimport BaseDialog from \"../../../../components/views/dialogs/BaseDialog\";\r\nimport { useMatrixClientContext } from \"../../../../contexts/MatrixClientContext.tsx\";\r\n\r\n/**\r\n * Properties for {@link NewRecoveryMethodDialog}.\r\n */\r\ninterface NewRecoveryMethodDialogProps {\r\n    /**\r\n     * Callback when the dialog is dismissed.\r\n     */\r\n    onFinished(): void;\r\n}\r\n\r\n// Export as default instead of a named export so that it can be dynamically imported with React lazy\r\n\r\n/**\r\n * Dialog to inform the user that a new recovery method has been detected.\r\n */\r\nexport default function NewRecoveryMethodDialog({ onFinished }: NewRecoveryMethodDialogProps): JSX.Element {\r\n    const matrixClient = useMatrixClientContext();\r\n    const [isKeyBackupEnabled, setIsKeyBackupEnabled] = useState(false);\r\n    useEffect(() => {\r\n        const checkBackupEnabled = async (): Promise<void> => {\r\n            const crypto = matrixClient.getCrypto();\r\n            setIsKeyBackupEnabled(Boolean(crypto && (await crypto.getActiveSessionBackupVersion()) !== null));\r\n        };\r\n\r\n        checkBackupEnabled();\r\n    }, [matrixClient]);\r\n\r\n    function onClick(): void {\r\n        if (isKeyBackupEnabled) {\r\n            onFinished();\r\n        } else {\r\n            const { finished } = Modal.createDialog(RestoreKeyBackupDialog, {}, undefined, false, true);\r\n            finished.then(onFinished);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <BaseDialog\r\n            className=\"mx_KeyBackupFailedDialog\"\r\n            onFinished={onFinished}\r\n            title={\r\n                <span className=\"mx_KeyBackupFailedDialog_title\">\r\n                    {_t(\"encryption|new_recovery_method_detected|title\")}\r\n                </span>\r\n            }\r\n        >\r\n            <p>{_t(\"encryption|new_recovery_method_detected|description_1\")}</p>\r\n            {isKeyBackupEnabled && <p>{_t(\"encryption|new_recovery_method_detected|description_2\")}</p>}\r\n            <strong className=\"warning\">{_t(\"encryption|new_recovery_method_detected|warning\")}</strong>\r\n            <DialogButtons\r\n                primaryButton={_t(\"common|setup_secure_messages\")}\r\n                onPrimaryButtonClick={onClick}\r\n                cancelButton={_t(\"common|go_to_settings\")}\r\n                onCancel={() => {\r\n                    onFinished();\r\n                    dis.fire(Action.ViewUserSettings);\r\n                }}\r\n            />\r\n        </BaseDialog>\r\n    );\r\n}\r\n"],"names":["NewRecoveryMethodDialog","onFinished","matrixClient","useMatrixClientContext","isKeyBackupEnabled","setIsKeyBackupEnabled","useState","useEffect","async","crypto","getCrypto","Boolean","getActiveSessionBackupVersion","checkBackupEnabled","React","BaseDialog","className","title","_t","DialogButtons","primaryButton","onPrimaryButtonClick","finished","Modal","createDialog","RestoreKeyBackupDialog","undefined","then","cancelButton","onCancel","dis","fire","Action","ViewUserSettings"],"sourceRoot":""}