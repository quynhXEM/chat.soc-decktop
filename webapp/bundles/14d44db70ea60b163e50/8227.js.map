{"version":3,"file":"bundles/14d44db70ea60b163e50/8227.js","mappings":"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","sources":["webpack://soc-connect/./src/components/views/location/Marker.tsx","webpack://soc-connect/./src/components/views/location/SmartMarker.tsx","webpack://soc-connect/./src/utils/location/map.ts"],"sourcesContent":["/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { type JSX, type ReactNode, type Ref, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { type RoomMember } from \"matrix-js-sdk/src/matrix\";\r\nimport LocationIcon from \"@vector-im/compound-design-tokens/assets/web/icons/location-pin-solid\";\r\n\r\nimport { getUserNameColorClass } from \"../../../utils/FormattingUtils\";\r\nimport MemberAvatar from \"../avatars/MemberAvatar\";\r\n\r\ninterface Props {\r\n    id?: string;\r\n    // renders MemberAvatar when provided\r\n    roomMember?: RoomMember;\r\n    // use member text color as background\r\n    useMemberColor?: boolean;\r\n    tooltip?: ReactNode;\r\n    ref?: Ref<HTMLDivElement>;\r\n}\r\n\r\n/**\r\n * Wrap with tooltip handlers when\r\n * tooltip is truthy\r\n */\r\nconst OptionalTooltip: React.FC<{\r\n    tooltip?: ReactNode;\r\n    children: ReactNode;\r\n}> = ({ tooltip, children }) => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    if (!tooltip) {\r\n        return <>{children}</>;\r\n    }\r\n\r\n    const show = (): void => setIsVisible(true);\r\n    const hide = (): void => setIsVisible(false);\r\n    const toggleVisibility = (e: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\r\n        // stop map from zooming in on click\r\n        e.stopPropagation();\r\n        setIsVisible(!isVisible);\r\n    };\r\n\r\n    return (\r\n        <div onMouseEnter={show} onClick={toggleVisibility} onMouseLeave={hide}>\r\n            {children}\r\n            {isVisible && tooltip}\r\n        </div>\r\n    );\r\n};\r\n\r\n/**\r\n * Generic location marker\r\n */\r\nconst Marker = ({ id, roomMember, useMemberColor, tooltip, ref }: Props): JSX.Element => {\r\n    const memberColorClass = useMemberColor && roomMember ? getUserNameColorClass(roomMember.userId) : \"\";\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id={id}\r\n            className={classNames(\"mx_Marker\", memberColorClass, {\r\n                mx_Marker_defaultColor: !memberColorClass,\r\n            })}\r\n        >\r\n            <OptionalTooltip tooltip={tooltip}>\r\n                <div className=\"mx_Marker_border\">\r\n                    {roomMember ? (\r\n                        <MemberAvatar\r\n                            member={roomMember}\r\n                            size=\"36px\"\r\n                            viewUserOnClick={false}\r\n                            // no mxid on hover when marker has tooltip\r\n                            hideTitle={!!tooltip}\r\n                        />\r\n                    ) : (\r\n                        <LocationIcon className=\"mx_Marker_icon\" />\r\n                    )}\r\n                </div>\r\n            </OptionalTooltip>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Marker;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React, { type ReactNode, useCallback, useEffect, useState } from \"react\";\r\nimport { type RoomMember } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport type * as maplibregl from \"maplibre-gl\";\r\nimport { parseGeoUri } from \"../../../utils/location\";\r\nimport { createMarker } from \"../../../utils/location/map\";\r\nimport Marker from \"./Marker\";\r\n\r\nconst useMapMarker = (\r\n    map: maplibregl.Map,\r\n    geoUri: string,\r\n): { marker?: maplibregl.Marker; onElementRef: (el: HTMLDivElement) => void } => {\r\n    const [marker, setMarker] = useState<maplibregl.Marker>();\r\n\r\n    const onElementRef = useCallback(\r\n        (element: HTMLDivElement) => {\r\n            if (marker || !element) {\r\n                return;\r\n            }\r\n            const coords = parseGeoUri(geoUri);\r\n            if (coords) {\r\n                const newMarker = createMarker(coords, element);\r\n                newMarker.addTo(map);\r\n                setMarker(newMarker);\r\n            }\r\n        },\r\n        [marker, geoUri, map],\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (marker) {\r\n            const coords = parseGeoUri(geoUri);\r\n            if (coords) {\r\n                marker.setLngLat({ lon: coords.longitude, lat: coords.latitude });\r\n            }\r\n        }\r\n    }, [marker, geoUri]);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            if (marker) {\r\n                marker.remove();\r\n            }\r\n        },\r\n        [marker],\r\n    );\r\n\r\n    return {\r\n        marker,\r\n        onElementRef,\r\n    };\r\n};\r\n\r\nexport interface SmartMarkerProps {\r\n    map: maplibregl.Map;\r\n    geoUri: string;\r\n    id?: string;\r\n    // renders MemberAvatar when provided\r\n    roomMember?: RoomMember;\r\n    // use member text color as background\r\n    useMemberColor?: boolean;\r\n    tooltip?: ReactNode;\r\n}\r\n\r\n/**\r\n * Generic location marker\r\n */\r\nconst SmartMarker: React.FC<SmartMarkerProps> = ({ id, map, geoUri, roomMember, useMemberColor, tooltip }) => {\r\n    const { onElementRef } = useMapMarker(map, geoUri);\r\n\r\n    return (\r\n        // maplibregl hijacks the Marker dom element\r\n        // and removes it from the dom when the maplibregl.Marker instance\r\n        // is removed\r\n        // wrap in a span so that react doesn't get confused\r\n        // when trying to unmount this component\r\n        <span>\r\n            <Marker\r\n                ref={onElementRef}\r\n                id={id}\r\n                roomMember={roomMember}\r\n                useMemberColor={useMemberColor}\r\n                tooltip={tooltip}\r\n            />\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default SmartMarker;\r\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport * as maplibregl from \"maplibre-gl\";\r\nimport { type MatrixClient } from \"matrix-js-sdk/src/matrix\";\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\nimport { _t } from \"../../languageHandler\";\r\nimport { findMapStyleUrl } from \"./findMapStyleUrl\";\r\nimport { LocationShareError } from \"./LocationShareErrors\";\r\n\r\nexport const createMap = (\r\n    client: MatrixClient,\r\n    interactive: boolean,\r\n    bodyId: string,\r\n    onError?: (error: Error) => void,\r\n): maplibregl.Map => {\r\n    try {\r\n        const styleUrl = findMapStyleUrl(client);\r\n\r\n        const map = new maplibregl.Map({\r\n            container: bodyId,\r\n            style: styleUrl,\r\n            zoom: 15,\r\n            interactive,\r\n            attributionControl: false,\r\n            locale: {\r\n                \"AttributionControl.ToggleAttribution\": _t(\"location_sharing|toggle_attribution\"),\r\n                \"AttributionControl.MapFeedback\": _t(\"location_sharing|map_feedback\"),\r\n                \"FullscreenControl.Enter\": _t(\"action|enter_fullscreen\"),\r\n                \"FullscreenControl.Exit\": _t(\"action|exit_fullscreeen\"),\r\n                \"GeolocateControl.FindMyLocation\": _t(\"location_sharing|find_my_location\"),\r\n                \"GeolocateControl.LocationNotAvailable\": _t(\"location_sharing|location_not_available\"),\r\n                \"LogoControl.Title\": _t(\"location_sharing|mapbox_logo\"),\r\n                \"NavigationControl.ResetBearing\": _t(\"location_sharing|reset_bearing\"),\r\n                \"NavigationControl.ZoomIn\": _t(\"action|zoom_in\"),\r\n                \"NavigationControl.ZoomOut\": _t(\"action|zoom_out\"),\r\n            },\r\n        });\r\n        map.addControl(new maplibregl.AttributionControl(), \"top-right\");\r\n\r\n        map.on(\"error\", (e) => {\r\n            logger.error(\"Failed to load map: check map_style_url in config.json has a valid URL and API key\", e.error);\r\n            onError?.(new Error(LocationShareError.MapStyleUrlNotReachable));\r\n        });\r\n\r\n        return map;\r\n    } catch (e) {\r\n        logger.error(\"Failed to render map\", e);\r\n        const errorMessage = (e as Error)?.message;\r\n        if (errorMessage.includes(\"Failed to initialize WebGL\")) throw new Error(LocationShareError.WebGLNotEnabled);\r\n        throw e;\r\n    }\r\n};\r\n\r\nexport const createMarker = (coords: GeolocationCoordinates, element: HTMLElement): maplibregl.Marker => {\r\n    const marker = new maplibregl.Marker({\r\n        element,\r\n        anchor: \"bottom\",\r\n        offset: [0, -1],\r\n    }).setLngLat({ lon: coords.longitude, lat: coords.latitude });\r\n    return marker;\r\n};\r\n"],"names":["OptionalTooltip","tooltip","children","isVisible","setIsVisible","useState","React","onMouseEnter","show","onClick","e","stopPropagation","onMouseLeave","hide","Marker","id","roomMember","useMemberColor","ref","memberColorClass","getUserNameColorClass","userId","className","classNames","mx_Marker_defaultColor","MemberAvatar","member","size","viewUserOnClick","hideTitle","LocationIcon","SmartMarker","map","geoUri","onElementRef","useMapMarker","marker","setMarker","useCallback","element","coords","parseGeoUri","newMarker","createMarker","addTo","useEffect","setLngLat","lon","longitude","lat","latitude","remove","createMap","client","interactive","bodyId","onError","styleUrl","findMapStyleUrl","maplibregl","container","style","zoom","attributionControl","locale","_t","addControl","on","logger","error","Error","LocationShareError","MapStyleUrlNotReachable","message","includes","WebGLNotEnabled","anchor","offset"],"sourceRoot":""}