{"version":3,"file":"bundles/2f8baab73c2b1aecf8d4/9393.js","mappings":"ymCA4EO,SAASA,EACZC,EACAC,EACAC,EAAuB,IAEvB,GAAwB,IAApBD,EAASE,OAAc,OAAO,KAGlC,MAAMC,EAAS,IAAIF,GAEnB,GAAIF,EAAc,CACdI,EAAOC,KAAKL,EAAaM,sBAEzB,IACI,MAAMC,EAASP,EAAaQ,YAC5BJ,EAAOC,KAAKE,EAChB,CAAE,MACE,CAER,CAEAE,EAAAA,GAAcC,gBAvEP,CACHC,SAAU,CACNC,aAAaC,EAAAA,EAAAA,IAAG,+BAChBC,YAAYD,EAAAA,EAAAA,IAAG,8BACfE,cAAcF,EAAAA,EAAAA,IAAG,gCACjBG,gBAAgBH,EAAAA,EAAAA,IAAG,kCACnBI,WAAWJ,EAAAA,EAAAA,IAAG,6BACdK,aAAaL,EAAAA,EAAAA,IAAG,+BAChBM,OAAON,EAAAA,EAAAA,IAAG,yBACVO,QAAQP,EAAAA,EAAAA,IAAG,0BACXQ,YAAYR,EAAAA,EAAAA,IAAG,8BACfS,QAAQT,EAAAA,EAAAA,IAAG,0BACXU,iBAAiBV,EAAAA,EAAAA,IAAG,mCACpBW,cAAcX,EAAAA,EAAAA,IAAG,gCACjBY,mBAAmBZ,EAAAA,EAAAA,IAAG,qCACtBa,aAAab,EAAAA,EAAAA,IAAG,+BAChBX,YAAYW,EAAAA,EAAAA,IAAG,8BACfc,OAAOd,EAAAA,EAAAA,IAAG,0BAEde,YAAa,CACTC,MAAMhB,EAAAA,EAAAA,IAAG,2BACTiB,cAAcjB,EAAAA,EAAAA,IAAG,mCACjBkB,cAAclB,EAAAA,EAAAA,IAAG,mCACjBmB,gBAAgBnB,EAAAA,EAAAA,IAAG,qCACnBM,OAAON,EAAAA,EAAAA,IAAG,4BACVK,aAAaL,EAAAA,EAAAA,IAAG,kCAChBoB,iBAAiBpB,EAAAA,EAAAA,IAAG,sCACpBI,WAAWJ,EAAAA,EAAAA,IAAG,gCACdqB,UAAUrB,EAAAA,EAAAA,IAAG,+BACbsB,uBAAuBtB,EAAAA,EAAAA,IAAG,4CAC1BuB,aAAavB,EAAAA,EAAAA,IAAG,kCAChBwB,UAAUxB,EAAAA,EAAAA,IAAG,+BACbyB,QAAQzB,EAAAA,EAAAA,IAAG,6BACXc,OAAOd,EAAAA,EAAAA,IAAG,6BAGd0B,eAAgBC,EAAAA,EAA6BD,iBAqCjD,IAAIE,GAAeC,EAAAA,EAAAA,IAAOzC,EAAUG,GAEpC,GAAIH,EAAS0C,SAAS,KAAM,CACxB,MAAMC,GAAiBF,EAAAA,EAAAA,IAAOzC,EAAS4C,QAAQ,KAAM,IAAKzC,GACtDwC,EAAeE,MAAQL,EAAaK,QAAOL,EAAeG,EAClE,CAEA,OAAOH,CACX,CA5FAhC,EAAAA,GAAcsC,WAAW,CACrBC,WAAUC,EAAAA,EAAAA,EAAA,GACHC,EAAAA,GACAV,EAAAA,GAA0B,IAC7BtC,WAAY,CAAC,OAAQ,SAAU,UAAWiD,EAAAA,GAAUC,MAAMC,SAE9DC,OAAQJ,EAAAA,EACRK,wBAAwB,G","sources":["webpack://soc-connect/./src/utils/PasswordScorer.ts"],"sourcesContent":["/*\r\nCopyright 2018-2024 New Vector Ltd.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { zxcvbn, zxcvbnOptions, type ZxcvbnResult, type TranslationKeys } from \"@zxcvbn-ts/core\";\r\nimport * as zxcvbnCommonPackage from \"@zxcvbn-ts/language-common\";\r\nimport * as zxcvbnEnPackage from \"@zxcvbn-ts/language-en\";\r\nimport { type MatrixClient } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport { _t } from \"../languageHandler\";\r\nimport SdkConfig from \"../SdkConfig\";\r\n\r\nzxcvbnOptions.setOptions({\r\n    dictionary: {\r\n        ...zxcvbnCommonPackage.dictionary,\r\n        ...zxcvbnEnPackage.dictionary,\r\n        userInputs: [\"riot\", \"matrix\", \"element\", SdkConfig.get().brand],\r\n    },\r\n    graphs: zxcvbnCommonPackage.adjacencyGraphs,\r\n    useLevenshteinDistance: true,\r\n});\r\n\r\nfunction getTranslations(): TranslationKeys {\r\n    return {\r\n        warnings: {\r\n            straightRow: _t(\"zxcvbn|warnings|straightRow\"),\r\n            keyPattern: _t(\"zxcvbn|warnings|keyPattern\"),\r\n            simpleRepeat: _t(\"zxcvbn|warnings|simpleRepeat\"),\r\n            extendedRepeat: _t(\"zxcvbn|warnings|extendedRepeat\"),\r\n            sequences: _t(\"zxcvbn|warnings|sequences\"),\r\n            recentYears: _t(\"zxcvbn|warnings|recentYears\"),\r\n            dates: _t(\"zxcvbn|warnings|dates\"),\r\n            topTen: _t(\"zxcvbn|warnings|topTen\"),\r\n            topHundred: _t(\"zxcvbn|warnings|topHundred\"),\r\n            common: _t(\"zxcvbn|warnings|common\"),\r\n            similarToCommon: _t(\"zxcvbn|warnings|similarToCommon\"),\r\n            wordByItself: _t(\"zxcvbn|warnings|wordByItself\"),\r\n            namesByThemselves: _t(\"zxcvbn|warnings|namesByThemselves\"),\r\n            commonNames: _t(\"zxcvbn|warnings|commonNames\"),\r\n            userInputs: _t(\"zxcvbn|warnings|userInputs\"),\r\n            pwned: _t(\"zxcvbn|warnings|pwned\"),\r\n        },\r\n        suggestions: {\r\n            l33t: _t(\"zxcvbn|suggestions|l33t\"),\r\n            reverseWords: _t(\"zxcvbn|suggestions|reverseWords\"),\r\n            allUppercase: _t(\"zxcvbn|suggestions|allUppercase\"),\r\n            capitalization: _t(\"zxcvbn|suggestions|capitalization\"),\r\n            dates: _t(\"zxcvbn|suggestions|dates\"),\r\n            recentYears: _t(\"zxcvbn|suggestions|recentYears\"),\r\n            associatedYears: _t(\"zxcvbn|suggestions|associatedYears\"),\r\n            sequences: _t(\"zxcvbn|suggestions|sequences\"),\r\n            repeated: _t(\"zxcvbn|suggestions|repeated\"),\r\n            longerKeyboardPattern: _t(\"zxcvbn|suggestions|longerKeyboardPattern\"),\r\n            anotherWord: _t(\"zxcvbn|suggestions|anotherWord\"),\r\n            useWords: _t(\"zxcvbn|suggestions|useWords\"),\r\n            noNeed: _t(\"zxcvbn|suggestions|noNeed\"),\r\n            pwned: _t(\"zxcvbn|suggestions|pwned\"),\r\n        },\r\n        // We don't utilise the time estimation at this time so just pass through the English translations here\r\n        timeEstimation: zxcvbnEnPackage.translations.timeEstimation,\r\n    };\r\n}\r\n\r\n/**\r\n * Wrapper around zxcvbn password strength estimation\r\n * Include this only from async components: it pulls in zxcvbn\r\n * (obviously) which is large.\r\n *\r\n * @param {string} password Password to score\r\n * @param matrixClient the client of the logged-in user, if any\r\n * @param userInputs additional strings such as the user's name which should be considered a bad password component\r\n * @returns {object} Score result with `score` and `feedback` properties\r\n */\r\nexport function scorePassword(\r\n    matrixClient: MatrixClient | null,\r\n    password: string,\r\n    userInputs: string[] = [],\r\n): ZxcvbnResult | null {\r\n    if (password.length === 0) return null;\r\n\r\n    // copy the supplied array before modifying it\r\n    const inputs = [...userInputs];\r\n\r\n    if (matrixClient) {\r\n        inputs.push(matrixClient.getUserIdLocalpart()!);\r\n\r\n        try {\r\n            const domain = matrixClient.getDomain()!;\r\n            inputs.push(domain);\r\n        } catch {\r\n            // This is fine\r\n        }\r\n    }\r\n\r\n    zxcvbnOptions.setTranslations(getTranslations());\r\n\r\n    let zxcvbnResult = zxcvbn(password, inputs);\r\n    // Work around https://github.com/dropbox/zxcvbn/issues/216\r\n    if (password.includes(\" \")) {\r\n        const resultNoSpaces = zxcvbn(password.replace(/ /g, \"\"), inputs);\r\n        if (resultNoSpaces.score < zxcvbnResult.score) zxcvbnResult = resultNoSpaces;\r\n    }\r\n\r\n    return zxcvbnResult;\r\n}\r\n"],"names":["scorePassword","matrixClient","password","userInputs","length","inputs","push","getUserIdLocalpart","domain","getDomain","zxcvbnOptions","setTranslations","warnings","straightRow","_t","keyPattern","simpleRepeat","extendedRepeat","sequences","recentYears","dates","topTen","topHundred","common","similarToCommon","wordByItself","namesByThemselves","commonNames","pwned","suggestions","l33t","reverseWords","allUppercase","capitalization","associatedYears","repeated","longerKeyboardPattern","anotherWord","useWords","noNeed","timeEstimation","zxcvbnEnPackage","zxcvbnResult","zxcvbn","includes","resultNoSpaces","replace","score","setOptions","dictionary","_objectSpread","zxcvbnCommonPackage","SdkConfig","get","brand","graphs","useLevenshteinDistance"],"sourceRoot":""}