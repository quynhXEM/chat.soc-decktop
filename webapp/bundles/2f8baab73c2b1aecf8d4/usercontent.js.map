{"version":3,"file":"bundles/2f8baab73c2b1aecf8d4/usercontent.js","mappings":"MAAA,MACE,GAAmC,oBAAxBA,oBAAqC,CAC9C,IAAIC,EAAeD,oBAAoBE,EACnCC,EAAgBH,oBAAoBI,EACpCC,EAAW,CAAC,EACZC,EAAW,CAAC,EAIhBN,oBAAoBE,EAAI,SAAUK,GAEhC,OADaN,EAAaM,IAGvBF,EAASG,eAAeD,GAAW,IAAMF,EAASE,GAAW,GAElE,EACAP,oBAAoBI,EAAI,SAAUG,GAEhC,OADaJ,EAAcI,GACbE,OAAM,SAAUC,GAC5B,IAAIC,EAAUL,EAASE,eAAeD,GAAWD,EAASC,GAAW,EACrE,GAAII,EAAU,EAAG,CACf,IAAIC,EAAUX,EAAaM,GAQ3B,MAPAG,EAAMG,QACJ,iBACAN,EACA,8BACAK,EACA,IACFF,EAAMI,QAAUF,EACVF,CACR,CACA,OAAO,IAAIK,SAAQ,SAAUC,GAE3BC,YAAW,WACT,IACIC,EAAmBC,KAAKC,MAE5Bf,EAASE,GAAWW,EACpBZ,EAASC,GAAWI,EAAU,EAC9BK,EAAQhB,oBAAoBI,EAAEG,GAChC,GAjCG,IAkCL,GACF,GACF,CACF,CACD,EA7CD,GCQA,IAAIc,GAAY,EAmDhBC,OAAOC,UAAY,SAAUnB,GACrBA,EAAEoB,SAAWF,OAAOG,SAASD,QACzBpB,EAAEsB,KAAKC,MApDnB,SAAsBC,GAClB,MAAMF,EAAOE,EAAMF,KAGfL,GACAQ,SAASC,KAAKC,YAAYF,SAASG,cAAc,SAErDX,GAAY,EAEZ,MAAMY,EAAuBJ,SAASG,cAAc,QACpDC,EAAIC,GAAK,MAET,MAAMC,EAAuBN,SAASG,cAAc,KACpDG,EAAED,GAAK,IACPC,EAAEC,IAAM,sBACRD,EAAEE,SAAWX,EAAKW,SAElBF,EAAEG,MAAQZ,EAAKY,MACfH,EAAEG,MAAMC,WAAa,+BACrBJ,EAAEK,KAAOlB,OAAOmB,IAAIC,gBAAgBhB,EAAKC,MACzCQ,EAAEQ,YAAYV,GACdE,EAAEQ,YAAYd,SAASe,eAAelB,EAAKmB,cAIvCnB,EAAKoB,SAELb,EAAIK,MAAQZ,EAAKoB,UAEjBb,EAAIK,MAAMS,MAAQ,OAClBd,EAAIK,MAAMU,OAAS,OACnBf,EAAIK,MAAMW,eAAiB,OAC3BhB,EAAIK,MAAMY,mBAAqB,SAC/BjB,EAAIK,MAAMa,iBAAmB,YAC7BlB,EAAIK,MAAMc,QAAU,eACpBnB,EAAIK,MAAMe,gBAAkB,QAAQ3B,EAAK4B,WACzCrB,EAAIK,MAAMiB,gBAAkB,GAAGpB,EAAEG,MAAMkB,SAG3C,MAAM1B,EAAOD,SAASC,KAEtBA,EAAKQ,MAAMmB,OAAS,MACpB3B,EAAKQ,MAAMoB,SAAW,SACtB5B,EAAKa,YAAYR,GAEbP,EAAMF,KAAKiC,MACXxB,EAAEyB,OAEV,CAIyBC,CAAazD,EAEtC,C","sources":["webpack://soc-connect/webpack/runtime/compat","webpack://soc-connect/./src/usercontent/index.ts"],"sourcesContent":["(() => {\n  if (typeof __webpack_require__ !== 'undefined') {\n    var oldGetScript = __webpack_require__.u;\n    var oldLoadScript = __webpack_require__.e;\n    var queryMap = {};\n    var countMap = {};\n    var getRetryDelay = function () {\n      return 500;\n    };\n    __webpack_require__.u = function (chunkId) {\n      var result = oldGetScript(chunkId);\n      return (\n        result +\n        (queryMap.hasOwnProperty(chunkId) ? '?' + queryMap[chunkId] : '')\n      );\n    };\n    __webpack_require__.e = function (chunkId) {\n      var result = oldLoadScript(chunkId);\n      return result.catch(function (error) {\n        var retries = countMap.hasOwnProperty(chunkId) ? countMap[chunkId] : 3;\n        if (retries < 1) {\n          var realSrc = oldGetScript(chunkId);\n          error.message =\n            'Loading chunk ' +\n            chunkId +\n            ' failed after 3 retries.\\n(' +\n            realSrc +\n            ')';\n          error.request = realSrc;\n          throw error;\n        }\n        return new Promise(function (resolve) {\n          var retryAttempt = 3 - retries + 1;\n          setTimeout(function () {\n            var retryAttemptString = '&retry-attempt=' + retryAttempt;\n            var cacheBust = (() => Date.now())();\n            +retryAttemptString;\n            queryMap[chunkId] = cacheBust;\n            countMap[chunkId] = retries - 1;\n            resolve(__webpack_require__.e(chunkId));\n          }, getRetryDelay(retryAttempt));\n        });\n      });\n    };\n  }\n})();\n","/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2022 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nlet hasCalled = false;\r\nfunction remoteRender(event: MessageEvent): void {\r\n    const data = event.data;\r\n\r\n    // If we're handling secondary calls, start from scratch\r\n    if (hasCalled) {\r\n        document.body.replaceWith(document.createElement(\"BODY\"));\r\n    }\r\n    hasCalled = true;\r\n\r\n    const img: HTMLSpanElement = document.createElement(\"span\"); // we'll mask it as an image\r\n    img.id = \"img\";\r\n\r\n    const a: HTMLAnchorElement = document.createElement(\"a\");\r\n    a.id = \"a\";\r\n    a.rel = \"noreferrer noopener\";\r\n    a.download = data.download;\r\n    // @ts-ignore\r\n    a.style = data.style;\r\n    a.style.fontFamily = \"Arial, Helvetica, Sans-Serif\";\r\n    a.href = window.URL.createObjectURL(data.blob);\r\n    a.appendChild(img);\r\n    a.appendChild(document.createTextNode(data.textContent));\r\n\r\n    // Apply image style after so we can steal the anchor's colour.\r\n    // Style copied from a rendered version of mx_MFileBody_download_icon\r\n    if (data.imgStyle) {\r\n        // @ts-ignore\r\n        img.style = data.imgStyle;\r\n    } else {\r\n        img.style.width = \"20px\";\r\n        img.style.height = \"20px\";\r\n        img.style.webkitMaskSize = \"20px\";\r\n        img.style.webkitMaskPosition = \"center\";\r\n        img.style.webkitMaskRepeat = \"no-repeat\";\r\n        img.style.display = \"inline-block\";\r\n        img.style.webkitMaskImage = `url('${data.imgSrc}')`;\r\n        img.style.backgroundColor = `${a.style.color}`;\r\n    }\r\n\r\n    const body = document.body;\r\n    // Don't display scrollbars if the link takes more than one line to display.\r\n    body.style.margin = \"0px\";\r\n    body.style.overflow = \"hidden\";\r\n    body.appendChild(a);\r\n\r\n    if (event.data.auto) {\r\n        a.click(); // try to trigger download automatically\r\n    }\r\n}\r\n\r\nwindow.onmessage = function (e: MessageEvent): void {\r\n    if (e.origin === window.location.origin) {\r\n        if (e.data.blob) remoteRender(e);\r\n    }\r\n};\r\n"],"names":["__webpack_require__","oldGetScript","u","oldLoadScript","e","queryMap","countMap","chunkId","hasOwnProperty","catch","error","retries","realSrc","message","request","Promise","resolve","setTimeout","cacheBust","Date","now","hasCalled","window","onmessage","origin","location","data","blob","event","document","body","replaceWith","createElement","img","id","a","rel","download","style","fontFamily","href","URL","createObjectURL","appendChild","createTextNode","textContent","imgStyle","width","height","webkitMaskSize","webkitMaskPosition","webkitMaskRepeat","display","webkitMaskImage","imgSrc","backgroundColor","color","margin","overflow","auto","click","remoteRender"],"sourceRoot":""}