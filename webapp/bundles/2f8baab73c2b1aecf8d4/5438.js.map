{"version":3,"file":"bundles/2f8baab73c2b1aecf8d4/5438.js","mappings":"4rBA+Be,MAAMA,UAAgCC,EAAAA,UAC1CC,WAAAA,CAAYC,GACfC,MAAMD,IAAOE,EAAAA,EAAAA,GAAA,kBAMGC,UAChBC,KAAKC,SAAS,CACVC,WAAW,UAGTC,EAAAA,EAAcC,SAAS,sBAAuB,KAAMC,EAAAA,EAAaC,QAAQ,SACzEC,EAAAA,EAAcC,mBACpBR,KAAKJ,MAAMa,YAAW,GACtBC,EAAAA,EAAIC,KAAKC,EAAAA,EAAOC,iBAAiB,IAbjCb,KAAKc,MAAQ,CACTZ,WAAW,EAEnB,CAaOa,MAAAA,GACH,OACIrB,EAAAA,cAACsB,EAAAA,EAAU,CAACP,WAAYT,KAAKJ,MAAMa,WAAYQ,OAAOC,EAAAA,EAAAA,IAAG,yBACpDA,EAAAA,EAAAA,IAAG,oDACHlB,KAAKc,MAAMZ,UAAYR,EAAAA,cAACyB,EAAAA,EAAO,MAAMzB,EAAAA,cAAA,YACtCA,EAAAA,cAAC0B,EAAAA,EAAa,CACVC,eAAeH,EAAAA,EAAAA,IAAG,kBAClBI,qBAAsBtB,KAAKuB,UAC3BC,mBAAmB,SACnBC,kBAAkB,UAClBC,SAAU1B,KAAKJ,MAAMa,WACrBkB,SAAU3B,KAAKc,MAAMZ,YAIrC,E","sources":["webpack://soc-connect/./src/async-components/views/dialogs/eventindex/DisableEventIndexDialog.tsx"],"sourcesContent":["/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2020 The connect.socjsc.com Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport React from \"react\";\r\n\r\nimport BaseDialog from \"../../../../components/views/dialogs/BaseDialog\";\r\nimport Spinner from \"../../../../components/views/elements/Spinner\";\r\nimport DialogButtons from \"../../../../components/views/elements/DialogButtons\";\r\nimport dis from \"../../../../dispatcher/dispatcher\";\r\nimport { _t } from \"../../../../languageHandler\";\r\nimport SettingsStore from \"../../../../settings/SettingsStore\";\r\nimport EventIndexPeg from \"../../../../indexing/EventIndexPeg\";\r\nimport { Action } from \"../../../../dispatcher/actions\";\r\nimport { SettingLevel } from \"../../../../settings/SettingLevel\";\r\n\r\ninterface IProps {\r\n    onFinished: (success?: boolean) => void;\r\n}\r\n\r\ninterface IState {\r\n    disabling: boolean;\r\n}\r\n\r\n/*\r\n * Allows the user to disable the Event Index.\r\n */\r\nexport default class DisableEventIndexDialog extends React.Component<IProps, IState> {\r\n    public constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            disabling: false,\r\n        };\r\n    }\r\n\r\n    private onDisable = async (): Promise<void> => {\r\n        this.setState({\r\n            disabling: true,\r\n        });\r\n\r\n        await SettingsStore.setValue(\"enableEventIndexing\", null, SettingLevel.DEVICE, false);\r\n        await EventIndexPeg.deleteEventIndex();\r\n        this.props.onFinished(true);\r\n        dis.fire(Action.ViewUserSettings);\r\n    };\r\n\r\n    public render(): React.ReactNode {\r\n        return (\r\n            <BaseDialog onFinished={this.props.onFinished} title={_t(\"common|are_you_sure\")}>\r\n                {_t(\"settings|security|message_search_disable_warning\")}\r\n                {this.state.disabling ? <Spinner /> : <div />}\r\n                <DialogButtons\r\n                    primaryButton={_t(\"action|disable\")}\r\n                    onPrimaryButtonClick={this.onDisable}\r\n                    primaryButtonClass=\"danger\"\r\n                    cancelButtonClass=\"warning\"\r\n                    onCancel={this.props.onFinished}\r\n                    disabled={this.state.disabling}\r\n                />\r\n            </BaseDialog>\r\n        );\r\n    }\r\n}\r\n"],"names":["DisableEventIndexDialog","React","constructor","props","super","_defineProperty","async","this","setState","disabling","SettingsStore","setValue","SettingLevel","DEVICE","EventIndexPeg","deleteEventIndex","onFinished","dis","fire","Action","ViewUserSettings","state","render","BaseDialog","title","_t","Spinner","DialogButtons","primaryButton","onPrimaryButtonClick","onDisable","primaryButtonClass","cancelButtonClass","onCancel","disabled"],"sourceRoot":""}