name: Simple Build
on:
    push:
        branches: [main, master, develop]
    pull_request:
        branches: [main, master, develop]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'yarn'

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Download SOC Connect Web (custom)
              run: |
                  echo "Creating directories..."
                  mkdir -p packages deploys
                  
                  echo "Downloading webapp from custom repository..."
                  curl -L "https://github.com/quynhXEM/chat.socjsc.com/archive/refs/heads/main.tar.gz" -o packages/main.tar.gz
                  
                  echo "Extracting webapp..."
                  tar -xzf packages/main.tar.gz -C deploys
                  
                  echo "Finding webapp directory..."
                  WEBAPP_DIR=$(find deploys -name "chat.socjsc.com-*" -type d | head -n 1)
                  if [ -z "$WEBAPP_DIR" ]; then
                      echo "Could not find webapp directory"
                      ls -la deploys/
                      exit 1
                  fi
                  
                  echo "Found webapp directory: $WEBAPP_DIR"
                  
                  echo "Copying config..."
                  cp webapp/config.json "$WEBAPP_DIR/config.json"
                  
                  echo "Creating asar package..."
                  npx asar pack "$WEBAPP_DIR" webapp.asar
                  
                  echo "Webapp setup completed!"
                  ls -la webapp.asar

            - name: Build TypeScript
              run: yarn run build:ts

            - name: Copy resources
              run: yarn run build:res

            - name: Build Electron app
              run: yarn run build
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
