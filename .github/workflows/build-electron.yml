name: Build Electron App

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # MacOS signing & notarization (chỉ áp dụng khi chạy trên macos)
      CSC_LINK: ${{ secrets.APPLE_CSC_LINK }}
      CSC_KEY_PASSWORD: ${{ secrets.APPLE_CSC_KEY_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: |
          npm install
          npm run build:ts
          npm run build:res

      - name: Build Electron App (with sign & notarize if macOS)
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            npm run build -- --mac dmg
          else
            npm run build
          fi

      # Verify code signing & notarization (only macOS)
      - name: Verify App Signature & Notarization
        if: matrix.os == 'macos-latest'
        run: |
          DMG_PATH=$(ls dist/*.dmg | head -n 1)
          hdiutil attach "$DMG_PATH" -mountpoint /Volumes/AppTest
          APP_PATH=$(ls /Volumes/AppTest/*.app | head -n 1)
          echo "Verifying codesign..."
          codesign --verify --deep --strict --verbose=2 "$APP_PATH"
          echo "Verifying notarization..."
          spctl -a -vvv -t install "$APP_PATH"
          hdiutil detach /Volumes/AppTest

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SOC Connect-${{ matrix.os }}
          path: dist/
